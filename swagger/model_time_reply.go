/*
 * Check Point Management API
 *
 * Generated by https://github.com/janschumann/checkpoint-go-sdk.
 *
 * API version: v1.5
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

type TimeReply struct {
	// Color of the object. Should be one of existing colors.
	Color string `json:"color,omitempty" xml:"color"`
	// Comments string.
	Comments string `json:"comments,omitempty" xml:"comments"`
	Domain *ApiDomainIdentifier `json:"domain,omitempty" xml:"domain"`
	End *TimeObject `json:"end,omitempty" xml:"end"`
	// End never.
	EndNever bool `json:"end-never,omitempty" xml:"end-never"`
	// How much details are returned depends on the details-level field of the request. This table shows the level of detail shown when details-level is set to standard.
	Groups []ApiObjectStandardIdentifier `json:"groups,omitempty" xml:"groups"`
	// Hours recurrence. Note: Each gateway may interpret this time differently according to its time zone.
	HoursRanges []HourRange `json:"hours-ranges,omitempty" xml:"hours-ranges"`
	// Object icon.
	Icon string `json:"icon,omitempty" xml:"icon"`
	MetaInfo *MetaInfoForTopLevelReply `json:"meta-info,omitempty" xml:"meta-info"`
	// Time object name. Cannot be more than 11 characters. Should be unique in the domain.
	Name string `json:"name,omitempty" xml:"name"`
	// Indicates whether the object is read-only.
	ReadOnly bool `json:"read-only,omitempty" xml:"read-only"`
	Recurrence *DayRecurrence `json:"recurrence,omitempty" xml:"recurrence"`
	Start *TimeObject `json:"start,omitempty" xml:"start"`
	// Start immediately.
	StartNow bool `json:"start-now,omitempty" xml:"start-now"`
	// Collection of tag objects identified by the name or UID. How much details are returned depends on the details-level field of the request. This table shows the level of detail shown when details-level is set to standard.
	Tags []ApiObjectStandardIdentifier `json:"tags,omitempty" xml:"tags"`
	// Type of the object.
	Type_ string `json:"type,omitempty" xml:"type"`
	// Object unique identifier.
	Uid string `json:"uid,omitempty" xml:"uid"`
}
