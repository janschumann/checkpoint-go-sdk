/*
 * Check Point Management API
 *
 * Generated by https://github.com/janschumann/checkpoint-go-sdk.
 *
 * API version: v1.5
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

type PolicyPackageReply struct {
	// True - enables, False - disables access policy, empty - nothing is changed.
	Access bool `json:"access,omitempty" xml:"access"`
	// Access policy layers. How much details are returned depends on the details-level field of the request. This table shows the level of detail shown when details-level is set to standard.
	AccessLayers []ApiObjectStandardIdentifier `json:"access-layers,omitempty" xml:"access-layers"`
	// Color of the object. Should be one of existing colors.
	Color string `json:"color,omitempty" xml:"color"`
	// Comments string.
	Comments string `json:"comments,omitempty" xml:"comments"`
	// True - enables, False - disables Desktop security policy, empty - nothing is changed.
	DesktopSecurity bool `json:"desktop-security,omitempty" xml:"desktop-security"`
	Domain *ApiDomainIdentifier `json:"domain,omitempty" xml:"domain"`
	// Object icon.
	Icon string `json:"icon,omitempty" xml:"icon"`
	InstallationTargets *ApiObjectStandardIdentifier `json:"installation-targets,omitempty" xml:"installation-targets"`
	// List of installation targets and revisions on which this policy package was installed.
	InstallationTargetsRevision []InstallationTargetRevisionFullReply `json:"installation-targets-revision,omitempty" xml:"installation-targets-revision"`
	MetaInfo *MetaInfoForTopLevelReply `json:"meta-info,omitempty" xml:"meta-info"`
	// Object name. Should be unique in the domain.
	Name string `json:"name,omitempty" xml:"name"`
	// True - enables, False - disables NAT policy, empty - nothing is changed.
	NatPolicy bool `json:"nat-policy,omitempty" xml:"nat-policy"`
	// True - enables, False - disables QoS policy, empty - nothing is changed.
	Qos bool `json:"qos,omitempty" xml:"qos"`
	// QoS policy type.
	QosPolicyType string `json:"qos-policy-type,omitempty" xml:"qos-policy-type"`
	// Indicates whether the object is read-only.
	ReadOnly bool `json:"read-only,omitempty" xml:"read-only"`
	// Collection of tag objects identified by the name or UID. How much details are returned depends on the details-level field of the request. This table shows the level of detail shown when details-level is set to standard.
	Tags []ApiObjectStandardIdentifier `json:"tags,omitempty" xml:"tags"`
	// Threat policy layers. How much details are returned depends on the details-level field of the request. This table shows the level of detail shown when details-level is set to standard.
	ThreatLayers []ApiObjectStandardIdentifier `json:"threat-layers,omitempty" xml:"threat-layers"`
	// True - enables, False - disables Threat policy, empty - nothing is changed.
	ThreatPrevention bool `json:"threat-prevention,omitempty" xml:"threat-prevention"`
	// Type of the object.
	Type_ string `json:"type,omitempty" xml:"type"`
	// Object unique identifier.
	Uid string `json:"uid,omitempty" xml:"uid"`
	// True - enables, False - disables VPN traditional mode, empty - nothing is changed.
	VpnTraditionalMode bool `json:"vpn-traditional-mode,omitempty" xml:"vpn-traditional-mode"`
}
