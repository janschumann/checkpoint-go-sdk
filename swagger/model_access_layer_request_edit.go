/*
 * Check Point Management API
 *
 * Generated by https://github.com/janschumann/checkpoint-go-sdk.
 *
 * API version: v1.5
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

type AccessLayerRequestEdit struct {
	// Whether to enable Applications & URL Filtering blade on the layer.
	ApplicationsAndUrlFiltering bool `json:"applications-and-url-filtering,omitempty" xml:"applications-and-url-filtering"`
	// Color of the object. Should be one of existing colors.
	Color string `json:"color,omitempty" xml:"color"`
	// Comments string.
	Comments string `json:"comments,omitempty" xml:"comments"`
	// Whether to enable Content Awareness blade on the layer.
	ContentAwareness bool `json:"content-awareness,omitempty" xml:"content-awareness"`
	// The level of detail for some of the fields in the response can vary from showing only the UID value of the object to a fully detailed representation of the object.
	DetailsLevel string `json:"details-level,omitempty" xml:"details-level"`
	// Whether to use X-Forward-For HTTP header, which is added by the  proxy server to keep track of the original source IP.
	DetectUsingXForwardFor bool `json:"detect-using-x-forward-for,omitempty" xml:"detect-using-x-forward-for"`
	// Whether to enable Firewall blade on the layer.
	Firewall bool `json:"firewall,omitempty" xml:"firewall"`
	// Apply changes ignoring errors. You won't be able to publish such a changes. If ignore-warnings flag was omitted - warnings will also be ignored.
	IgnoreErrors bool `json:"ignore-errors,omitempty" xml:"ignore-errors"`
	// Apply changes ignoring warnings.
	IgnoreWarnings bool `json:"ignore-warnings,omitempty" xml:"ignore-warnings"`
	// The default \"catch-all\" action for traffic that does not match any explicit or implied rules in the layer.
	ImplicitCleanupAction string `json:"implicit-cleanup-action,omitempty" xml:"implicit-cleanup-action"`
	// Whether to enable Mobile Access blade on the layer.
	MobileAccess bool `json:"mobile-access,omitempty" xml:"mobile-access"`
	// Object name.
	Name string `json:"name,omitempty" xml:"name"`
	// New name of the object.
	NewName string `json:"new-name,omitempty" xml:"new-name"`
	// Whether this layer is shared.
	Shared bool `json:"shared,omitempty" xml:"shared"`
	Tags *Add `json:"tags,omitempty" xml:"tags"`
	// Object unique identifier.
	Uid string `json:"uid" xml:"uid"`
}
