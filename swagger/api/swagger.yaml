---
swagger: "2.0"
info:
  description: "Generated by https://github.com/janschumann/checkpoint-go-sdk."
  version: "v1.5"
  title: "Check Point Management API"
host: "virtserver.swaggerhub.com"
basePath: "/Schumann-IT/checkpoint-management-api/v1.5"
tags:
- name: "Access Control & NAT: Access Layer"
- name: "Access Control & NAT: Access Rule"
- name: "Access Control & NAT: Access Section"
- name: "Access Control & NAT: NAT Rule"
- name: "Access Control & NAT: NAT Section"
- name: "Data Center"
- name: "Data Center: Data Center"
- name: "Data Center: Data Center Object"
- name: "Misc."
- name: "Misc.: API Settings"
- name: "Misc.: Administrator"
- name: "Multi-Domain: Domain"
- name: "Multi-Domain: Global Assignment"
- name: "Multi-Domain: Global Domain"
- name: "Multi-Domain: Multi-Domain Server (MDS)"
- name: "Multi-Domain: Placeholder"
- name: "Network Objects: Access Role"
- name: "Network Objects: Address Range"
- name: "Network Objects: DNS Domain"
- name: "Network Objects: Dynamic Object"
- name: "Network Objects: Group"
- name: "Network Objects: Group with exclusion"
- name: "Network Objects: Host"
- name: "Network Objects: Multicast Address Range"
- name: "Network Objects: Network"
- name: "Network Objects: OPSEC Application"
- name: "Network Objects: Security Zone"
- name: "Network Objects: Simple Gateway"
- name: "Network Objects: Tags"
- name: "Network Objects: Time"
- name: "Network Objects: Time Group"
- name: "Network Objects: Trusted Client"
- name: "Network Objects: Wildcard"
- name: "Policy"
- name: "Policy: Policy Package"
- name: "Service & Applications: Application"
- name: "Service & Applications: Application Category"
- name: "Service & Applications: Application Group"
- name: "Service & Applications: Service DCE-RPC"
- name: "Service & Applications: Service Group"
- name: "Service & Applications: Service ICMP"
- name: "Service & Applications: Service ICMP6"
- name: "Service & Applications: Service Other"
- name: "Service & Applications: Service RPC"
- name: "Service & Applications: Service SCTP"
- name: "Service & Applications: Service TCP"
- name: "Service & Applications: Service UDP"
- name: "Session Management"
- name: "Session Management: Login Message"
- name: "Session Management: Session"
- name: "Threat Prevention: IPS"
- name: "Threat Prevention: IPS Extended Attributes"
- name: "Threat Prevention: Threat Emulation"
- name: "Threat Prevention: Threat Exception"
- name: "Threat Prevention: Threat Exception Group"
- name: "Threat Prevention: Threat Indicator"
- name: "Threat Prevention: Threat Layer"
- name: "Threat Prevention: Threat Profile"
- name: "Threat Prevention: Threat Protection"
- name: "Threat Prevention: Threat Rule"
- name: "Updatable Objects: Updatable Object"
- name: "Updatable Objects: Updatable Objects Repository"
- name: "VPN: VPN Community Meshed"
- name: "VPN: VPN Community Star"
- name: "Versioning: API Versions"
- name: "Versioning: Changelog"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /add-access-layer:
    post:
      tags:
      - "Access Control & NAT: Access Layer"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "AccessLayerRequestNew"
        required: true
        schema:
          $ref: "#/definitions/AccessLayerRequestNew"
        x-exportParamName: "AccessLayerRequestNew"
      responses:
        200:
          description: "AccessLayerReply"
          schema:
            $ref: "#/definitions/AccessLayerReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-access-role:
    post:
      tags:
      - "Network Objects: Access Role"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "AccessRoleRequestNew"
        required: true
        schema:
          $ref: "#/definitions/AccessRoleRequestNew"
        x-exportParamName: "AccessRoleRequestNew"
      responses:
        200:
          description: "AccessRoleReply"
          schema:
            $ref: "#/definitions/AccessRoleReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-access-rule:
    post:
      tags:
      - "Access Control & NAT: Access Rule"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "AccessRuleRequestNew"
        required: true
        schema:
          $ref: "#/definitions/AccessRuleRequestNew"
        x-exportParamName: "AccessRuleRequestNew"
      responses:
        200:
          description: "AccessRuleReply"
          schema:
            $ref: "#/definitions/AccessRuleReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-access-section:
    post:
      tags:
      - "Access Control & NAT: Access Section"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "AccessSectionRequestNew"
        required: true
        schema:
          $ref: "#/definitions/AccessSectionRequestNew"
        x-exportParamName: "AccessSectionRequestNew"
      responses:
        200:
          description: "AccessSectionReply"
          schema:
            $ref: "#/definitions/AccessSectionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-address-range:
    post:
      tags:
      - "Network Objects: Address Range"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "AddressRangeRequestNew"
        required: true
        schema:
          $ref: "#/definitions/AddressRangeRequestNew"
        x-exportParamName: "AddressRangeRequestNew"
      responses:
        200:
          description: "AddressRangeReply"
          schema:
            $ref: "#/definitions/AddressRangeReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-administrator:
    post:
      tags:
      - "Misc.: Administrator"
      description: "Create new administrator."
      parameters:
      - in: "body"
        name: "AdministratorRequestNew"
        required: true
        schema:
          $ref: "#/definitions/AdministratorRequestNew"
        x-exportParamName: "AdministratorRequestNew"
      responses:
        200:
          description: "AdministratorReply"
          schema:
            $ref: "#/definitions/AdministratorReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-application-site:
    post:
      tags:
      - "Service & Applications: Application"
      description: "Creates new application site, which can be initialized with 'url-list'\
        \ or 'application-signature' (not both of them)."
      parameters:
      - in: "body"
        name: "ApplicationSiteRequestNew"
        required: true
        schema:
          $ref: "#/definitions/ApplicationSiteRequestNew"
        x-exportParamName: "ApplicationSiteRequestNew"
      responses:
        200:
          description: "ApplicationSiteReply"
          schema:
            $ref: "#/definitions/ApplicationSiteReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-application-site-category:
    post:
      tags:
      - "Service & Applications: Application Category"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "ApplicationSiteCategoryRequestNew"
        required: true
        schema:
          $ref: "#/definitions/ApplicationSiteCategoryRequestNew"
        x-exportParamName: "ApplicationSiteCategoryRequestNew"
      responses:
        200:
          description: "ApplicationSiteCategoryReply"
          schema:
            $ref: "#/definitions/ApplicationSiteCategoryReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-application-site-group:
    post:
      tags:
      - "Service & Applications: Application Group"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "ApplicationSiteGroupRequestNew"
        required: true
        schema:
          $ref: "#/definitions/ApplicationSiteGroupRequestNew"
        x-exportParamName: "ApplicationSiteGroupRequestNew"
      responses:
        200:
          description: "ApplicationSiteGroupReply"
          schema:
            $ref: "#/definitions/ApplicationSiteGroupReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-data-center-object:
    post:
      tags:
      - "Data Center: Data Center Object"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "DataCenterObjectRequestNew"
        required: true
        schema:
          $ref: "#/definitions/DataCenterObjectRequestNew"
        x-exportParamName: "DataCenterObjectRequestNew"
      responses:
        200:
          description: "DataCenterObjectReply"
          schema:
            $ref: "#/definitions/DataCenterObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-dns-domain:
    post:
      tags:
      - "Network Objects: DNS Domain"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "DnsDomainRequestNew"
        required: true
        schema:
          $ref: "#/definitions/DnsDomainRequestNew"
        x-exportParamName: "DnsDomainRequestNew"
      responses:
        200:
          description: "DnsDomainReply"
          schema:
            $ref: "#/definitions/DnsDomainReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-domain:
    post:
      tags:
      - "Multi-Domain: Domain"
      description: "Create a new domain in a Multi-Domain-Management environment.\
        \ In order to allow administrators to connect to this domain using SmartConsole,\
        \ use add-trusted-client command.<br> Note: This operation is not part of\
        \ session and will take effect immediately."
      parameters:
      - in: "body"
        name: "LocalDomainRequestNew"
        required: true
        schema:
          $ref: "#/definitions/LocalDomainRequestNew"
        x-exportParamName: "LocalDomainRequestNew"
      responses:
        200:
          description: "ApiTasksReply"
          schema:
            $ref: "#/definitions/ApiTasksReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-dynamic-object:
    post:
      tags:
      - "Network Objects: Dynamic Object"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "DynamicObjectRequestNew"
        required: true
        schema:
          $ref: "#/definitions/DynamicObjectRequestNew"
        x-exportParamName: "DynamicObjectRequestNew"
      responses:
        200:
          description: "DynamicObjectReply"
          schema:
            $ref: "#/definitions/DynamicObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-exception-group:
    post:
      tags:
      - "Threat Prevention: Threat Exception Group"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "ThreatExceptionGroupRequestNew"
        required: true
        schema:
          $ref: "#/definitions/ThreatExceptionGroupRequestNew"
        x-exportParamName: "ThreatExceptionGroupRequestNew"
      responses:
        200:
          description: "ThreatExceptionGroupReply"
          schema:
            $ref: "#/definitions/ThreatExceptionGroupReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-global-assignment:
    post:
      tags:
      - "Multi-Domain: Global Assignment"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "GlobalAssignmentRequestNew"
        required: true
        schema:
          $ref: "#/definitions/GlobalAssignmentRequestNew"
        x-exportParamName: "GlobalAssignmentRequestNew"
      responses:
        200:
          description: "GlobalAssignmentReply"
          schema:
            $ref: "#/definitions/GlobalAssignmentReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-group:
    post:
      tags:
      - "Network Objects: Group"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "GroupRequestNew"
        required: true
        schema:
          $ref: "#/definitions/GroupRequestNew"
        x-exportParamName: "GroupRequestNew"
      responses:
        200:
          description: "GroupReply"
          schema:
            $ref: "#/definitions/GroupReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-group-with-exclusion:
    post:
      tags:
      - "Network Objects: Group with exclusion"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "GroupWithExclusionRequestNew"
        required: true
        schema:
          $ref: "#/definitions/GroupWithExclusionRequestNew"
        x-exportParamName: "GroupWithExclusionRequestNew"
      responses:
        200:
          description: "GroupWithExclusionReply"
          schema:
            $ref: "#/definitions/GroupWithExclusionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-host:
    post:
      tags:
      - "Network Objects: Host"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "HostRequestNew"
        required: true
        schema:
          $ref: "#/definitions/HostRequestNew"
        x-exportParamName: "HostRequestNew"
      responses:
        200:
          description: "HostReply"
          schema:
            $ref: "#/definitions/HostReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-multicast-address-range:
    post:
      tags:
      - "Network Objects: Multicast Address Range"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "MultiCastAddressRangeRequestNew"
        required: true
        schema:
          $ref: "#/definitions/MultiCastAddressRangeRequestNew"
        x-exportParamName: "MultiCastAddressRangeRequestNew"
      responses:
        200:
          description: "MultiCastAddressRangeReply"
          schema:
            $ref: "#/definitions/MultiCastAddressRangeReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-nat-rule:
    post:
      tags:
      - "Access Control & NAT: NAT Rule"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "NatRuleRequestNew"
        required: true
        schema:
          $ref: "#/definitions/NatRuleRequestNew"
        x-exportParamName: "NatRuleRequestNew"
      responses:
        200:
          description: "NatRuleReply"
          schema:
            $ref: "#/definitions/NatRuleReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-nat-section:
    post:
      tags:
      - "Access Control & NAT: NAT Section"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "NatSectionRequestNew"
        required: true
        schema:
          $ref: "#/definitions/NatSectionRequestNew"
        x-exportParamName: "NatSectionRequestNew"
      responses:
        200:
          description: "NatSectionReply"
          schema:
            $ref: "#/definitions/NatSectionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-network:
    post:
      tags:
      - "Network Objects: Network"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "NetworkRequestNew"
        required: true
        schema:
          $ref: "#/definitions/NetworkRequestNew"
        x-exportParamName: "NetworkRequestNew"
      responses:
        200:
          description: "NetworkReply"
          schema:
            $ref: "#/definitions/NetworkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-opsec-application:
    post:
      tags:
      - "Network Objects: OPSEC Application"
      description: "Create a new OPSEC Application.\n At least one client entity (LEA,\
        \ CPMI) must be supplied."
      parameters:
      - in: "body"
        name: "OpsecApplicationRequestNew"
        required: true
        schema:
          $ref: "#/definitions/OpsecApplicationRequestNew"
        x-exportParamName: "OpsecApplicationRequestNew"
      responses:
        200:
          description: "OpsecApplicationReply"
          schema:
            $ref: "#/definitions/OpsecApplicationReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-package:
    post:
      tags:
      - "Policy: Policy Package"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "PolicyPackageRequestNew"
        required: true
        schema:
          $ref: "#/definitions/PolicyPackageRequestNew"
        x-exportParamName: "PolicyPackageRequestNew"
      responses:
        200:
          description: "PolicyPackageReply"
          schema:
            $ref: "#/definitions/PolicyPackageReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-scada-application:
    post:
      tags:
      - "Unknown"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "ScadaApplicationRequestNew"
        required: true
        schema:
          $ref: "#/definitions/ScadaApplicationRequestNew"
        x-exportParamName: "ScadaApplicationRequestNew"
      responses:
        200:
          description: "ScadaApplicationReply"
          schema:
            $ref: "#/definitions/ScadaApplicationReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-security-zone:
    post:
      tags:
      - "Network Objects: Security Zone"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "SecurityZoneRequestNew"
        required: true
        schema:
          $ref: "#/definitions/SecurityZoneRequestNew"
        x-exportParamName: "SecurityZoneRequestNew"
      responses:
        200:
          description: "SecurityZoneReply"
          schema:
            $ref: "#/definitions/SecurityZoneReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-service-dce-rpc:
    post:
      tags:
      - "Service & Applications: Service DCE-RPC"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "DcerpcServiceRequestNew"
        required: true
        schema:
          $ref: "#/definitions/DcerpcServiceRequestNew"
        x-exportParamName: "DcerpcServiceRequestNew"
      responses:
        200:
          description: "DcerpcServiceReply"
          schema:
            $ref: "#/definitions/DcerpcServiceReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-service-group:
    post:
      tags:
      - "Service & Applications: Service Group"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "ServiceGroupRequestNew"
        required: true
        schema:
          $ref: "#/definitions/ServiceGroupRequestNew"
        x-exportParamName: "ServiceGroupRequestNew"
      responses:
        200:
          description: "ServiceGroupReply"
          schema:
            $ref: "#/definitions/ServiceGroupReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-service-icmp:
    post:
      tags:
      - "Service & Applications: Service ICMP"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "ServiceIcmpRequestNew"
        required: true
        schema:
          $ref: "#/definitions/ServiceIcmpRequestNew"
        x-exportParamName: "ServiceIcmpRequestNew"
      responses:
        200:
          description: "ServiceIcmpReply"
          schema:
            $ref: "#/definitions/ServiceIcmpReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-service-icmp6:
    post:
      tags:
      - "Service & Applications: Service ICMP6"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "ServiceIcmp6RequestNew"
        required: true
        schema:
          $ref: "#/definitions/ServiceIcmp6RequestNew"
        x-exportParamName: "ServiceIcmp6RequestNew"
      responses:
        200:
          description: "ServiceIcmp6Reply"
          schema:
            $ref: "#/definitions/ServiceIcmp6Reply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-service-other:
    post:
      tags:
      - "Service & Applications: Service Other"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "OtherServiceRequestNew"
        required: true
        schema:
          $ref: "#/definitions/OtherServiceRequestNew"
        x-exportParamName: "OtherServiceRequestNew"
      responses:
        200:
          description: "OtherServiceReply"
          schema:
            $ref: "#/definitions/OtherServiceReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-service-rpc:
    post:
      tags:
      - "Service & Applications: Service RPC"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "RpcServiceRequestNew"
        required: true
        schema:
          $ref: "#/definitions/RpcServiceRequestNew"
        x-exportParamName: "RpcServiceRequestNew"
      responses:
        200:
          description: "RpcServiceReply"
          schema:
            $ref: "#/definitions/RpcServiceReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-service-sctp:
    post:
      tags:
      - "Service & Applications: Service SCTP"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "SctpServiceRequestNew"
        required: true
        schema:
          $ref: "#/definitions/SctpServiceRequestNew"
        x-exportParamName: "SctpServiceRequestNew"
      responses:
        200:
          description: "SctpServiceReply"
          schema:
            $ref: "#/definitions/SctpServiceReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-service-tcp:
    post:
      tags:
      - "Service & Applications: Service TCP"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "TcpServiceRequestNew"
        required: true
        schema:
          $ref: "#/definitions/TcpServiceRequestNew"
        x-exportParamName: "TcpServiceRequestNew"
      responses:
        200:
          description: "TcpServiceReply"
          schema:
            $ref: "#/definitions/TcpServiceReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-service-udp:
    post:
      tags:
      - "Service & Applications: Service UDP"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "UdpServiceRequestNew"
        required: true
        schema:
          $ref: "#/definitions/UdpServiceRequestNew"
        x-exportParamName: "UdpServiceRequestNew"
      responses:
        200:
          description: "UdpServiceReply"
          schema:
            $ref: "#/definitions/UdpServiceReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-simple-gateway:
    post:
      tags:
      - "Network Objects: Simple Gateway"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "GatewayCkpRequestNew"
        required: true
        schema:
          $ref: "#/definitions/GatewayCkpRequestNew"
        x-exportParamName: "GatewayCkpRequestNew"
      responses:
        200:
          description: "GatewayCkpReply"
          schema:
            $ref: "#/definitions/GatewayCkpReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-tag:
    post:
      tags:
      - "Network Objects: Tags"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "TagRequestNew"
        required: true
        schema:
          $ref: "#/definitions/TagRequestNew"
        x-exportParamName: "TagRequestNew"
      responses:
        200:
          description: "TagReply"
          schema:
            $ref: "#/definitions/TagReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-threat-exception:
    post:
      tags:
      - "Threat Prevention: Threat Exception"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "ThreatExceptionRequestNew"
        required: true
        schema:
          $ref: "#/definitions/ThreatExceptionRequestNew"
        x-exportParamName: "ThreatExceptionRequestNew"
      responses:
        200:
          description: "ThreatExceptionReply"
          schema:
            $ref: "#/definitions/ThreatExceptionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-threat-indicator:
    post:
      tags:
      - "Threat Prevention: Threat Indicator"
      description: "Create a new Threat-Indicator."
      parameters:
      - in: "body"
        name: "IndicatorRequestNew"
        required: true
        schema:
          $ref: "#/definitions/IndicatorRequestNew"
        x-exportParamName: "IndicatorRequestNew"
      responses:
        200:
          description: "ApiTaskReply"
          schema:
            $ref: "#/definitions/ApiTaskReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-threat-layer:
    post:
      tags:
      - "Threat Prevention: Threat Layer"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "ThreatLayerRequestNew"
        required: true
        schema:
          $ref: "#/definitions/ThreatLayerRequestNew"
        x-exportParamName: "ThreatLayerRequestNew"
      responses:
        200:
          description: "ThreatLayerReply"
          schema:
            $ref: "#/definitions/ThreatLayerReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-threat-profile:
    post:
      tags:
      - "Threat Prevention: Threat Profile"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "ProfileRequestNew"
        required: true
        schema:
          $ref: "#/definitions/ProfileRequestNew"
        x-exportParamName: "ProfileRequestNew"
      responses:
        200:
          description: "ApiTaskReply"
          schema:
            $ref: "#/definitions/ApiTaskReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-threat-protections:
    post:
      tags:
      - "Threat Prevention: Threat Protection"
      description: "Adds threat protections."
      parameters:
      - in: "body"
        name: "AddProtectionsRequest"
        required: true
        schema:
          $ref: "#/definitions/AddProtectionsRequest"
        x-exportParamName: "AddProtectionsRequest"
      responses:
        200:
          description: "ApiTaskReply"
          schema:
            $ref: "#/definitions/ApiTaskReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-threat-rule:
    post:
      tags:
      - "Threat Prevention: Threat Rule"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "ThreatRuleRequestNew"
        required: true
        schema:
          $ref: "#/definitions/ThreatRuleRequestNew"
        x-exportParamName: "ThreatRuleRequestNew"
      responses:
        200:
          description: "ThreatRuleReply"
          schema:
            $ref: "#/definitions/ThreatRuleReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-time:
    post:
      tags:
      - "Network Objects: Time"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "TimeRequestNew"
        required: true
        schema:
          $ref: "#/definitions/TimeRequestNew"
        x-exportParamName: "TimeRequestNew"
      responses:
        200:
          description: "TimeReply"
          schema:
            $ref: "#/definitions/TimeReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-time-group:
    post:
      tags:
      - "Network Objects: Time Group"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "TimeGroupRequestNew"
        required: true
        schema:
          $ref: "#/definitions/TimeGroupRequestNew"
        x-exportParamName: "TimeGroupRequestNew"
      responses:
        200:
          description: "TimeGroupReply"
          schema:
            $ref: "#/definitions/TimeGroupReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-trusted-client:
    post:
      tags:
      - "Network Objects: Trusted Client"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "TrustedClientRequestNew"
        required: true
        schema:
          $ref: "#/definitions/TrustedClientRequestNew"
        x-exportParamName: "TrustedClientRequestNew"
      responses:
        200:
          description: "TrustedClientReply"
          schema:
            $ref: "#/definitions/TrustedClientReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-updatable-object:
    post:
      tags:
      - "Updatable Objects: Updatable Object"
      description: "Import an updatable object from the repository to the management\
        \ server. This operation takes effect immediately and doesn't require publishing."
      parameters:
      - in: "body"
        name: "UpdatableObjectRequestNew"
        required: true
        schema:
          $ref: "#/definitions/UpdatableObjectRequestNew"
        x-exportParamName: "UpdatableObjectRequestNew"
      responses:
        200:
          description: "UpdatableObjectReply"
          schema:
            $ref: "#/definitions/UpdatableObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-vpn-community-meshed:
    post:
      tags:
      - "VPN: VPN Community Meshed"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "VpnMeshedCommunityRequestNew"
        required: true
        schema:
          $ref: "#/definitions/VpnMeshedCommunityRequestNew"
        x-exportParamName: "VpnMeshedCommunityRequestNew"
      responses:
        200:
          description: "VpnMeshedCommunityReply"
          schema:
            $ref: "#/definitions/VpnMeshedCommunityReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-vpn-community-star:
    post:
      tags:
      - "VPN: VPN Community Star"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "VpnStarCommunityRequestNew"
        required: true
        schema:
          $ref: "#/definitions/VpnStarCommunityRequestNew"
        x-exportParamName: "VpnStarCommunityRequestNew"
      responses:
        200:
          description: "VpnStarCommunityReply"
          schema:
            $ref: "#/definitions/VpnStarCommunityReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /add-wildcard:
    post:
      tags:
      - "Network Objects: Wildcard"
      description: "Create new object."
      parameters:
      - in: "body"
        name: "WildcardRequestNew"
        required: true
        schema:
          $ref: "#/definitions/WildcardRequestNew"
        x-exportParamName: "WildcardRequestNew"
      responses:
        200:
          description: "WildcardReply"
          schema:
            $ref: "#/definitions/WildcardReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /assign-global-assignment:
    post:
      tags:
      - "Multi-Domain: Global Assignment"
      parameters:
      - in: "body"
        name: "AssignGlobalPolicyRequest"
        required: true
        schema:
          $ref: "#/definitions/AssignGlobalPolicyRequest"
        x-exportParamName: "AssignGlobalPolicyRequest"
      responses:
        200:
          description: "AssignGlobalPolicyReply"
          schema:
            $ref: "#/definitions/AssignGlobalPolicyReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /assign-session:
    post:
      tags:
      - "Session Management: Session"
      description: "Assign a session ownership to another administrator."
      parameters:
      - in: "body"
        name: "WorkSessionAssignRequest"
        required: true
        schema:
          $ref: "#/definitions/WorkSessionAssignRequest"
        x-exportParamName: "WorkSessionAssignRequest"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /auto-complete:
    post:
      tags:
      - "Unknown"
      parameters:
      - in: "body"
        name: "AutoCompleteRequest"
        required: true
        schema:
          $ref: "#/definitions/AutoCompleteRequest"
        x-exportParamName: "AutoCompleteRequest"
      responses:
        200:
          description: "AutoCompleteReply"
          schema:
            $ref: "#/definitions/AutoCompleteReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /continue-session-in-smartconsole:
    post:
      tags:
      - "Session Management: Session"
      description: "Logout from existing session. The session will be continued next\
        \ time your open SmartConsole. In case 'uid' is not provided, use current\
        \ session. In order for the session to pass successfully to SmartConsole,\
        \ make sure you don't have any other active GUI sessions."
      parameters:
      - in: "body"
        name: "WorkSessionObjectIdentifierRequest"
        required: true
        schema:
          $ref: "#/definitions/WorkSessionObjectIdentifierRequest"
        x-exportParamName: "WorkSessionObjectIdentifierRequest"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-access-layer:
    post:
      tags:
      - "Access Control & NAT: Access Layer"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-access-role:
    post:
      tags:
      - "Network Objects: Access Role"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-access-rule:
    post:
      tags:
      - "Access Control & NAT: Access Rule"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "AccessRuleIdentifierRequest"
        required: true
        schema:
          $ref: "#/definitions/AccessRuleIdentifierRequest"
        x-exportParamName: "AccessRuleIdentifierRequest"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-access-section:
    post:
      tags:
      - "Access Control & NAT: Access Section"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "AccessSectionIdentifierRequest"
        required: true
        schema:
          $ref: "#/definitions/AccessSectionIdentifierRequest"
        x-exportParamName: "AccessSectionIdentifierRequest"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-address-range:
    post:
      tags:
      - "Network Objects: Address Range"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-administrator:
    post:
      tags:
      - "Misc.: Administrator"
      description: "Delete existing administrator using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-application-site:
    post:
      tags:
      - "Service & Applications: Application"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-application-site-category:
    post:
      tags:
      - "Service & Applications: Application Category"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-application-site-group:
    post:
      tags:
      - "Service & Applications: Application Group"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-data-center-object:
    post:
      tags:
      - "Data Center: Data Center Object"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-dns-domain:
    post:
      tags:
      - "Network Objects: DNS Domain"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-domain:
    post:
      tags:
      - "Multi-Domain: Domain"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiTaskReply"
          schema:
            $ref: "#/definitions/ApiTaskReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-dynamic-object:
    post:
      tags:
      - "Network Objects: Dynamic Object"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-exception-group:
    post:
      tags:
      - "Threat Prevention: Threat Exception Group"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-global-assignment:
    post:
      tags:
      - "Multi-Domain: Global Assignment"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "GlobalAssignmentIdentifierRequest"
        required: true
        schema:
          $ref: "#/definitions/GlobalAssignmentIdentifierRequest"
        x-exportParamName: "GlobalAssignmentIdentifierRequest"
      responses:
        200:
          description: "ApiTaskReply"
          schema:
            $ref: "#/definitions/ApiTaskReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-group:
    post:
      tags:
      - "Network Objects: Group"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-group-with-exclusion:
    post:
      tags:
      - "Network Objects: Group with exclusion"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-host:
    post:
      tags:
      - "Network Objects: Host"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-multicast-address-range:
    post:
      tags:
      - "Network Objects: Multicast Address Range"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-nat-rule:
    post:
      tags:
      - "Access Control & NAT: NAT Rule"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "NatRuleIdentifierRequest"
        required: true
        schema:
          $ref: "#/definitions/NatRuleIdentifierRequest"
        x-exportParamName: "NatRuleIdentifierRequest"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-nat-section:
    post:
      tags:
      - "Access Control & NAT: NAT Section"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "NatSectionIdentifierRequest"
        required: true
        schema:
          $ref: "#/definitions/NatSectionIdentifierRequest"
        x-exportParamName: "NatSectionIdentifierRequest"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-network:
    post:
      tags:
      - "Network Objects: Network"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-opsec-application:
    post:
      tags:
      - "Network Objects: OPSEC Application"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-package:
    post:
      tags:
      - "Policy: Policy Package"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-scada-application:
    post:
      tags:
      - "Unknown"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-security-zone:
    post:
      tags:
      - "Network Objects: Security Zone"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-service-dce-rpc:
    post:
      tags:
      - "Service & Applications: Service DCE-RPC"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-service-group:
    post:
      tags:
      - "Service & Applications: Service Group"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-service-icmp:
    post:
      tags:
      - "Service & Applications: Service ICMP"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-service-icmp6:
    post:
      tags:
      - "Service & Applications: Service ICMP6"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-service-other:
    post:
      tags:
      - "Service & Applications: Service Other"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-service-rpc:
    post:
      tags:
      - "Service & Applications: Service RPC"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-service-sctp:
    post:
      tags:
      - "Service & Applications: Service SCTP"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-service-tcp:
    post:
      tags:
      - "Service & Applications: Service TCP"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-service-udp:
    post:
      tags:
      - "Service & Applications: Service UDP"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-simple-gateway:
    post:
      tags:
      - "Network Objects: Simple Gateway"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-tag:
    post:
      tags:
      - "Network Objects: Tags"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-threat-exception:
    post:
      tags:
      - "Threat Prevention: Threat Exception"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ThreatExceptionIdentifierRequest"
        required: true
        schema:
          $ref: "#/definitions/ThreatExceptionIdentifierRequest"
        x-exportParamName: "ThreatExceptionIdentifierRequest"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-threat-indicator:
    post:
      tags:
      - "Threat Prevention: Threat Indicator"
      description: "Delete a Threat-Indicator."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-threat-layer:
    post:
      tags:
      - "Threat Prevention: Threat Layer"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-threat-profile:
    post:
      tags:
      - "Threat Prevention: Threat Profile"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiTaskReply"
          schema:
            $ref: "#/definitions/ApiTaskReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-threat-protections:
    post:
      tags:
      - "Threat Prevention: Threat Protection"
      description: "Deletes threat protections."
      parameters:
      - in: "body"
        name: "DeleteProtectionsRequest"
        required: true
        schema:
          $ref: "#/definitions/DeleteProtectionsRequest"
        x-exportParamName: "DeleteProtectionsRequest"
      responses:
        200:
          description: "ApiTaskReply"
          schema:
            $ref: "#/definitions/ApiTaskReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-threat-rule:
    post:
      tags:
      - "Threat Prevention: Threat Rule"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ThreatRuleIdentifierRequest"
        required: true
        schema:
          $ref: "#/definitions/ThreatRuleIdentifierRequest"
        x-exportParamName: "ThreatRuleIdentifierRequest"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-time:
    post:
      tags:
      - "Network Objects: Time"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-time-group:
    post:
      tags:
      - "Network Objects: Time Group"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-trusted-client:
    post:
      tags:
      - "Network Objects: Trusted Client"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-updatable-object:
    post:
      tags:
      - "Updatable Objects: Updatable Object"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-vpn-community-meshed:
    post:
      tags:
      - "VPN: VPN Community Meshed"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-vpn-community-star:
    post:
      tags:
      - "VPN: VPN Community Star"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /delete-wildcard:
    post:
      tags:
      - "Network Objects: Wildcard"
      description: "Delete existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestDelete"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestDelete"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestDelete"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /discard:
    post:
      tags:
      - "Session Management"
      description: "All changes done by user are discarded and removed from database."
      parameters:
      - in: "body"
        name: "DiscardRequest"
        required: true
        schema:
          $ref: "#/definitions/DiscardRequest"
        x-exportParamName: "DiscardRequest"
      responses:
        200:
          description: "DiscardReply"
          schema:
            $ref: "#/definitions/DiscardReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /disconnect:
    post:
      tags:
      - "Session Management"
      description: "Disconnect a private session."
      parameters:
      - in: "body"
        name: "DisconnectRequest"
        required: true
        schema:
          $ref: "#/definitions/DisconnectRequest"
        x-exportParamName: "DisconnectRequest"
      responses:
        200:
          description: "DisconnectReply"
          schema:
            $ref: "#/definitions/DisconnectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /export:
    post:
      tags:
      - "Misc."
      parameters:
      - in: "body"
        name: "WebApiExportRequest"
        required: true
        schema:
          $ref: "#/definitions/WebApiExportRequest"
        x-exportParamName: "WebApiExportRequest"
      responses:
        200:
          description: "WebApiExportReply"
          schema:
            $ref: "#/definitions/WebApiExportReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /get-interfaces-sync:
    post:
      tags:
      - "Unknown"
      parameters:
      - in: "body"
        name: "GetInterfacesRequest"
        required: true
        schema:
          $ref: "#/definitions/GetInterfacesRequest"
        x-exportParamName: "GetInterfacesRequest"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /install-policy:
    post:
      tags:
      - "Policy"
      parameters:
      - in: "body"
        name: "PolicyInstallationRequest"
        required: true
        schema:
          $ref: "#/definitions/PolicyInstallationRequest"
        x-exportParamName: "PolicyInstallationRequest"
      responses:
        200:
          description: "PolicyInstallationReply"
          schema:
            $ref: "#/definitions/PolicyInstallationReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /keepalive:
    post:
      tags:
      - "Session Management"
      description: "Keep the session valid/alive."
      parameters:
      - in: "body"
        name: "KeepAliveRequest"
        required: true
        schema:
          $ref: "#/definitions/KeepAliveRequest"
        x-exportParamName: "KeepAliveRequest"
      responses:
        200:
          description: "KeepAliveReply"
          schema:
            $ref: "#/definitions/KeepAliveReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /login:
    post:
      tags:
      - "Session Management"
      description: "Log in to the server with username and password. The server shows\
        \ your session unique identifier. Enter this session unique identifier in\
        \ the 'X-chkp-sid' header of each request."
      parameters:
      - in: "body"
        name: "WebApiLoginRequest"
        required: true
        schema:
          $ref: "#/definitions/WebApiLoginRequest"
        x-exportParamName: "WebApiLoginRequest"
      responses:
        200:
          description: "WebApiLoginReply"
          schema:
            $ref: "#/definitions/WebApiLoginReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
  /logout:
    post:
      tags:
      - "Session Management"
      description: "Log out from the current session. After logging out the session\
        \ id is not valid any more."
      parameters:
      - in: "body"
        name: "WebApiLogoutRequest"
        required: true
        schema:
          $ref: "#/definitions/WebApiLogoutRequest"
        x-exportParamName: "WebApiLogoutRequest"
      responses:
        200:
          description: "WebApiLogoutReply"
          schema:
            $ref: "#/definitions/WebApiLogoutReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /make-server-active:
    post:
      tags:
      - "Unknown"
      parameters:
      - in: "body"
        name: "SetActiveRequest"
        required: true
        schema:
          $ref: "#/definitions/SetActiveRequest"
        x-exportParamName: "SetActiveRequest"
      responses:
        200:
          description: "SetActiveReply"
          schema:
            $ref: "#/definitions/SetActiveReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /publish:
    post:
      tags:
      - "Session Management"
      description: "All the changes done by this user will be seen by all users only\
        \ after publish is called."
      parameters:
      - in: "body"
        name: "PublishRequest"
        required: true
        schema:
          $ref: "#/definitions/PublishRequest"
        x-exportParamName: "PublishRequest"
      responses:
        200:
          description: "PublishReply"
          schema:
            $ref: "#/definitions/PublishReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /purge-published-sessions:
    post:
      tags:
      - "Session Management: Session"
      description: "Permanently deletes all data which belongs to the published sessions\
        \ not selected for preservation. This operation is irreversible."
      parameters:
      - in: "body"
        name: "WorkSessionPurgeRequest"
        required: true
        schema:
          $ref: "#/definitions/WorkSessionPurgeRequest"
        x-exportParamName: "WorkSessionPurgeRequest"
      responses:
        200:
          description: "ApiTaskReply"
          schema:
            $ref: "#/definitions/ApiTaskReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /put-file:
    post:
      tags:
      - "Misc."
      parameters:
      - in: "body"
        name: "PutFileRequest"
        required: true
        schema:
          $ref: "#/definitions/PutFileRequest"
        x-exportParamName: "PutFileRequest"
      responses:
        200:
          description: "CdmCommandReply"
          schema:
            $ref: "#/definitions/CdmCommandReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /result-link:
    post:
      tags:
      - "Unknown"
      parameters:
      - in: "body"
        name: "WebApiResultLinkRequest"
        required: true
        schema:
          $ref: "#/definitions/WebApiResultLinkRequest"
        x-exportParamName: "WebApiResultLinkRequest"
      responses:
        200:
          description: "WebApiResultLinkReply"
          schema:
            $ref: "#/definitions/WebApiResultLinkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /run-init-interfaces:
    post:
      tags:
      - "Unknown"
      parameters:
      - in: "body"
        name: "RunInitInterfacesRequest"
        required: true
        schema:
          $ref: "#/definitions/RunInitInterfacesRequest"
        x-exportParamName: "RunInitInterfacesRequest"
      responses:
        200:
          description: "RunInitInterfacesReply"
          schema:
            $ref: "#/definitions/RunInitInterfacesReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /run-ips-update:
    post:
      tags:
      - "Threat Prevention: IPS"
      description: "Runs IPS database update. If \"package-path\" is not provided\
        \ server will try to get the latest package from the User Center."
      parameters:
      - in: "body"
        name: "IpsUpdateRequest"
        required: true
        schema:
          $ref: "#/definitions/IpsUpdateRequest"
        x-exportParamName: "IpsUpdateRequest"
      responses:
        200:
          description: "IpsUpdateReply"
          schema:
            $ref: "#/definitions/IpsUpdateReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /run-script:
    post:
      tags:
      - "Misc."
      parameters:
      - in: "body"
        name: "RunScriptRequest"
        required: true
        schema:
          $ref: "#/definitions/RunScriptRequest"
        x-exportParamName: "RunScriptRequest"
      responses:
        200:
          description: "CdmCommandReply"
          schema:
            $ref: "#/definitions/CdmCommandReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /run-threat-emulation-file-types-offline-update:
    post:
      tags:
      - "Threat Prevention: Threat Emulation"
      description: "Update Threat Emulation file types offline."
      parameters:
      - in: "body"
        name: "ThreatEmulationFileTypesUpdateRequest"
        required: true
        schema:
          $ref: "#/definitions/ThreatEmulationFileTypesUpdateRequest"
        x-exportParamName: "ThreatEmulationFileTypesUpdateRequest"
      responses:
        200:
          description: "ThreatEmulationFileTypesUpdateReply"
          schema:
            $ref: "#/definitions/ThreatEmulationFileTypesUpdateReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-access-layer:
    post:
      tags:
      - "Access Control & NAT: Access Layer"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "AccessLayerRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/AccessLayerRequestEdit"
        x-exportParamName: "AccessLayerRequestEdit"
      responses:
        200:
          description: "AccessLayerReply"
          schema:
            $ref: "#/definitions/AccessLayerReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-access-role:
    post:
      tags:
      - "Network Objects: Access Role"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "AccessRoleRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/AccessRoleRequestEdit"
        x-exportParamName: "AccessRoleRequestEdit"
      responses:
        200:
          description: "AccessRoleReply"
          schema:
            $ref: "#/definitions/AccessRoleReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-access-rule:
    post:
      tags:
      - "Access Control & NAT: Access Rule"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "AccessRuleRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/AccessRuleRequestEdit"
        x-exportParamName: "AccessRuleRequestEdit"
      responses:
        200:
          description: "AccessRuleReply"
          schema:
            $ref: "#/definitions/AccessRuleReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-access-section:
    post:
      tags:
      - "Access Control & NAT: Access Section"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "AccessSectionRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/AccessSectionRequestEdit"
        x-exportParamName: "AccessSectionRequestEdit"
      responses:
        200:
          description: "AccessSectionReply"
          schema:
            $ref: "#/definitions/AccessSectionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-address-range:
    post:
      tags:
      - "Network Objects: Address Range"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "AddressRangeRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/AddressRangeRequestEdit"
        x-exportParamName: "AddressRangeRequestEdit"
      responses:
        200:
          description: "AddressRangeReply"
          schema:
            $ref: "#/definitions/AddressRangeReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-administrator:
    post:
      tags:
      - "Misc.: Administrator"
      description: "Edit existing administrator using object name or uid."
      parameters:
      - in: "body"
        name: "AdministratorRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/AdministratorRequestEdit"
        x-exportParamName: "AdministratorRequestEdit"
      responses:
        200:
          description: "AdministratorReply"
          schema:
            $ref: "#/definitions/AdministratorReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-api-settings:
    post:
      tags:
      - "Misc.: API Settings"
      description: "Edit API settings, the changes will be applied after publish followed\
        \ by running 'api restart' command."
      parameters:
      - in: "body"
        name: "ApiServerSettingsRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/ApiServerSettingsRequestEdit"
        x-exportParamName: "ApiServerSettingsRequestEdit"
      responses:
        200:
          description: "ApiServerSettingsReply"
          schema:
            $ref: "#/definitions/ApiServerSettingsReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-application-site:
    post:
      tags:
      - "Service & Applications: Application"
      description: "Edit existing application using object name or uid. It's impossible\
        \ to set 'application-signature' when the application was initialized with\
        \ 'url-list' and vice-verse."
      parameters:
      - in: "body"
        name: "ApplicationSiteRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/ApplicationSiteRequestEdit"
        x-exportParamName: "ApplicationSiteRequestEdit"
      responses:
        200:
          description: "ApplicationSiteReply"
          schema:
            $ref: "#/definitions/ApplicationSiteReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-application-site-category:
    post:
      tags:
      - "Service & Applications: Application Category"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApplicationSiteCategoryRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/ApplicationSiteCategoryRequestEdit"
        x-exportParamName: "ApplicationSiteCategoryRequestEdit"
      responses:
        200:
          description: "ApplicationSiteCategoryReply"
          schema:
            $ref: "#/definitions/ApplicationSiteCategoryReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-application-site-group:
    post:
      tags:
      - "Service & Applications: Application Group"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApplicationSiteGroupRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/ApplicationSiteGroupRequestEdit"
        x-exportParamName: "ApplicationSiteGroupRequestEdit"
      responses:
        200:
          description: "ApplicationSiteGroupReply"
          schema:
            $ref: "#/definitions/ApplicationSiteGroupReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-dns-domain:
    post:
      tags:
      - "Network Objects: DNS Domain"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "DnsDomainRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/DnsDomainRequestEdit"
        x-exportParamName: "DnsDomainRequestEdit"
      responses:
        200:
          description: "DnsDomainReply"
          schema:
            $ref: "#/definitions/DnsDomainReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-domain:
    post:
      tags:
      - "Multi-Domain: Domain"
      description: "Edit domain object using domain name or UID. When the list of\
        \ domain servers is edited, the command is handled asynchronously. A list\
        \ of task identifiers is returned to a user. In this case, the changes to\
        \ the domain object are done in a public session and so should not be published.\
        \ If the domain is changed in other parameters than the domain servers, i.e.:\
        \ comments, color or tags, such changes are done in the user's private session\
        \ and therefore should be published. In this case, the returned command output\
        \ is similar to the one of 'show-domain'."
      parameters:
      - in: "body"
        name: "LocalDomainRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/LocalDomainRequestEdit"
        x-exportParamName: "LocalDomainRequestEdit"
      responses:
        200:
          description: "LocalDomainEditReply"
          schema:
            $ref: "#/definitions/LocalDomainEditReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-dynamic-object:
    post:
      tags:
      - "Network Objects: Dynamic Object"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "DynamicObjectRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/DynamicObjectRequestEdit"
        x-exportParamName: "DynamicObjectRequestEdit"
      responses:
        200:
          description: "DynamicObjectReply"
          schema:
            $ref: "#/definitions/DynamicObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-exception-group:
    post:
      tags:
      - "Threat Prevention: Threat Exception Group"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ThreatExceptionGroupRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/ThreatExceptionGroupRequestEdit"
        x-exportParamName: "ThreatExceptionGroupRequestEdit"
      responses:
        200:
          description: "ThreatExceptionGroupReply"
          schema:
            $ref: "#/definitions/ThreatExceptionGroupReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-global-assignment:
    post:
      tags:
      - "Multi-Domain: Global Assignment"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "GlobalAssignmentRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/GlobalAssignmentRequestEdit"
        x-exportParamName: "GlobalAssignmentRequestEdit"
      responses:
        200:
          description: "GlobalAssignmentReply"
          schema:
            $ref: "#/definitions/GlobalAssignmentReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-global-domain:
    post:
      tags:
      - "Multi-Domain: Global Domain"
      description: "Edit Global domain object using domain name or UID. When the list\
        \ of Multi Domain Server is edited, the command is handled asynchronously.\
        \ A list of task identifiers is returned to a user. In this case, the changes\
        \ to the Global domain object are done in a public session and so should not\
        \ be published. If the domain is changed in other parameters than the Multi\
        \ Domain Servers, i.e.: comments, color or tags, such changes are done in\
        \ the user's private session and therefore should be published. In this case,\
        \ the returned command output is similar to the one of 'show-global-domain'."
      parameters:
      - in: "body"
        name: "GlobalDomainRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/GlobalDomainRequestEdit"
        x-exportParamName: "GlobalDomainRequestEdit"
      responses:
        200:
          description: "GlobalDomainEditReply"
          schema:
            $ref: "#/definitions/GlobalDomainEditReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-group:
    post:
      tags:
      - "Network Objects: Group"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "GroupRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/GroupRequestEdit"
        x-exportParamName: "GroupRequestEdit"
      responses:
        200:
          description: "GroupReply"
          schema:
            $ref: "#/definitions/GroupReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-group-with-exclusion:
    post:
      tags:
      - "Network Objects: Group with exclusion"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "GroupWithExclusionRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/GroupWithExclusionRequestEdit"
        x-exportParamName: "GroupWithExclusionRequestEdit"
      responses:
        200:
          description: "GroupWithExclusionReply"
          schema:
            $ref: "#/definitions/GroupWithExclusionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-host:
    post:
      tags:
      - "Network Objects: Host"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "HostRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/HostRequestEdit"
        x-exportParamName: "HostRequestEdit"
      responses:
        200:
          description: "HostReply"
          schema:
            $ref: "#/definitions/HostReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-ips-update-schedule:
    post:
      tags:
      - "Threat Prevention: IPS"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "IpsUpdateScheduleRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/IpsUpdateScheduleRequestEdit"
        x-exportParamName: "IpsUpdateScheduleRequestEdit"
      responses:
        200:
          description: "IpsUpdateScheduleReply"
          schema:
            $ref: "#/definitions/IpsUpdateScheduleReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-login-message:
    post:
      tags:
      - "Session Management: Login Message"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "LoginMessageRequestSet"
        required: true
        schema:
          $ref: "#/definitions/LoginMessageRequestSet"
        x-exportParamName: "LoginMessageRequestSet"
      responses:
        200:
          description: "LoginMessageReply"
          schema:
            $ref: "#/definitions/LoginMessageReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-multicast-address-range:
    post:
      tags:
      - "Network Objects: Multicast Address Range"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "MultiCastAddressRangeRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/MultiCastAddressRangeRequestEdit"
        x-exportParamName: "MultiCastAddressRangeRequestEdit"
      responses:
        200:
          description: "MultiCastAddressRangeReply"
          schema:
            $ref: "#/definitions/MultiCastAddressRangeReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-nat-rule:
    post:
      tags:
      - "Access Control & NAT: NAT Rule"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "NatRuleRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/NatRuleRequestEdit"
        x-exportParamName: "NatRuleRequestEdit"
      responses:
        200:
          description: "NatRuleReply"
          schema:
            $ref: "#/definitions/NatRuleReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-nat-section:
    post:
      tags:
      - "Access Control & NAT: NAT Section"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "NatSectionRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/NatSectionRequestEdit"
        x-exportParamName: "NatSectionRequestEdit"
      responses:
        200:
          description: "NatSectionReply"
          schema:
            $ref: "#/definitions/NatSectionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-network:
    post:
      tags:
      - "Network Objects: Network"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "NetworkRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/NetworkRequestEdit"
        x-exportParamName: "NetworkRequestEdit"
      responses:
        200:
          description: "NetworkReply"
          schema:
            $ref: "#/definitions/NetworkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-opsec-application:
    post:
      tags:
      - "Network Objects: OPSEC Application"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "OpsecApplicationRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/OpsecApplicationRequestEdit"
        x-exportParamName: "OpsecApplicationRequestEdit"
      responses:
        200:
          description: "OpsecApplicationReply"
          schema:
            $ref: "#/definitions/OpsecApplicationReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-package:
    post:
      tags:
      - "Policy: Policy Package"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "PolicyPackageRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/PolicyPackageRequestEdit"
        x-exportParamName: "PolicyPackageRequestEdit"
      responses:
        200:
          description: "PolicyPackageReply"
          schema:
            $ref: "#/definitions/PolicyPackageReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-scada-application:
    post:
      tags:
      - "Unknown"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ScadaApplicationRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/ScadaApplicationRequestEdit"
        x-exportParamName: "ScadaApplicationRequestEdit"
      responses:
        200:
          description: "ScadaApplicationReply"
          schema:
            $ref: "#/definitions/ScadaApplicationReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-security-zone:
    post:
      tags:
      - "Network Objects: Security Zone"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "SecurityZoneRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/SecurityZoneRequestEdit"
        x-exportParamName: "SecurityZoneRequestEdit"
      responses:
        200:
          description: "SecurityZoneReply"
          schema:
            $ref: "#/definitions/SecurityZoneReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-service-dce-rpc:
    post:
      tags:
      - "Service & Applications: Service DCE-RPC"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "DcerpcServiceRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/DcerpcServiceRequestEdit"
        x-exportParamName: "DcerpcServiceRequestEdit"
      responses:
        200:
          description: "DcerpcServiceReply"
          schema:
            $ref: "#/definitions/DcerpcServiceReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-service-group:
    post:
      tags:
      - "Service & Applications: Service Group"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ServiceGroupRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/ServiceGroupRequestEdit"
        x-exportParamName: "ServiceGroupRequestEdit"
      responses:
        200:
          description: "ServiceGroupReply"
          schema:
            $ref: "#/definitions/ServiceGroupReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-service-icmp:
    post:
      tags:
      - "Service & Applications: Service ICMP"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ServiceIcmpRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/ServiceIcmpRequestEdit"
        x-exportParamName: "ServiceIcmpRequestEdit"
      responses:
        200:
          description: "ServiceIcmpReply"
          schema:
            $ref: "#/definitions/ServiceIcmpReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-service-icmp6:
    post:
      tags:
      - "Service & Applications: Service ICMP6"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ServiceIcmp6RequestEdit"
        required: true
        schema:
          $ref: "#/definitions/ServiceIcmp6RequestEdit"
        x-exportParamName: "ServiceIcmp6RequestEdit"
      responses:
        200:
          description: "ServiceIcmp6Reply"
          schema:
            $ref: "#/definitions/ServiceIcmp6Reply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-service-other:
    post:
      tags:
      - "Service & Applications: Service Other"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "OtherServiceRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/OtherServiceRequestEdit"
        x-exportParamName: "OtherServiceRequestEdit"
      responses:
        200:
          description: "OtherServiceReply"
          schema:
            $ref: "#/definitions/OtherServiceReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-service-rpc:
    post:
      tags:
      - "Service & Applications: Service RPC"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "RpcServiceRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/RpcServiceRequestEdit"
        x-exportParamName: "RpcServiceRequestEdit"
      responses:
        200:
          description: "RpcServiceReply"
          schema:
            $ref: "#/definitions/RpcServiceReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-service-sctp:
    post:
      tags:
      - "Service & Applications: Service SCTP"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "SctpServiceRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/SctpServiceRequestEdit"
        x-exportParamName: "SctpServiceRequestEdit"
      responses:
        200:
          description: "SctpServiceReply"
          schema:
            $ref: "#/definitions/SctpServiceReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-service-tcp:
    post:
      tags:
      - "Service & Applications: Service TCP"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "TcpServiceRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/TcpServiceRequestEdit"
        x-exportParamName: "TcpServiceRequestEdit"
      responses:
        200:
          description: "TcpServiceReply"
          schema:
            $ref: "#/definitions/TcpServiceReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-service-udp:
    post:
      tags:
      - "Service & Applications: Service UDP"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "UdpServiceRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/UdpServiceRequestEdit"
        x-exportParamName: "UdpServiceRequestEdit"
      responses:
        200:
          description: "UdpServiceReply"
          schema:
            $ref: "#/definitions/UdpServiceReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-session:
    post:
      tags:
      - "Session Management: Session"
      description: "Edit user's current session."
      parameters:
      - in: "body"
        name: "WorkSessionRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/WorkSessionRequestEdit"
        x-exportParamName: "WorkSessionRequestEdit"
      responses:
        200:
          description: "WorkSessionReply"
          schema:
            $ref: "#/definitions/WorkSessionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-simple-gateway:
    post:
      tags:
      - "Network Objects: Simple Gateway"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "GatewayCkpRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/GatewayCkpRequestEdit"
        x-exportParamName: "GatewayCkpRequestEdit"
      responses:
        200:
          description: "GatewayCkpReply"
          schema:
            $ref: "#/definitions/GatewayCkpReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-tag:
    post:
      tags:
      - "Network Objects: Tags"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "TagRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/TagRequestEdit"
        x-exportParamName: "TagRequestEdit"
      responses:
        200:
          description: "TagReply"
          schema:
            $ref: "#/definitions/TagReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-threat-exception:
    post:
      tags:
      - "Threat Prevention: Threat Exception"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ThreatExceptionRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/ThreatExceptionRequestEdit"
        x-exportParamName: "ThreatExceptionRequestEdit"
      responses:
        200:
          description: "ThreatExceptionReply"
          schema:
            $ref: "#/definitions/ThreatExceptionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-threat-indicator:
    post:
      tags:
      - "Threat Prevention: Threat Indicator"
      description: "Edit an existing Threat-Indicator."
      parameters:
      - in: "body"
        name: "IndicatorRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/IndicatorRequestEdit"
        x-exportParamName: "IndicatorRequestEdit"
      responses:
        200:
          description: "IndicatorReply"
          schema:
            $ref: "#/definitions/IndicatorReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-threat-layer:
    post:
      tags:
      - "Threat Prevention: Threat Layer"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ThreatLayerRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/ThreatLayerRequestEdit"
        x-exportParamName: "ThreatLayerRequestEdit"
      responses:
        200:
          description: "ThreatLayerReply"
          schema:
            $ref: "#/definitions/ThreatLayerReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-threat-profile:
    post:
      tags:
      - "Threat Prevention: Threat Profile"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ProfileRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/ProfileRequestEdit"
        x-exportParamName: "ProfileRequestEdit"
      responses:
        200:
          description: "ApiTaskReply"
          schema:
            $ref: "#/definitions/ApiTaskReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-threat-protection:
    post:
      tags:
      - "Threat Prevention: Threat Protection"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ProtectionRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/ProtectionRequestEdit"
        x-exportParamName: "ProtectionRequestEdit"
      responses:
        200:
          description: "ProtectionReply"
          schema:
            $ref: "#/definitions/ProtectionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-threat-rule:
    post:
      tags:
      - "Threat Prevention: Threat Rule"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ThreatRuleRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/ThreatRuleRequestEdit"
        x-exportParamName: "ThreatRuleRequestEdit"
      responses:
        200:
          description: "ThreatRuleReply"
          schema:
            $ref: "#/definitions/ThreatRuleReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-time:
    post:
      tags:
      - "Network Objects: Time"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "TimeRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/TimeRequestEdit"
        x-exportParamName: "TimeRequestEdit"
      responses:
        200:
          description: "TimeReply"
          schema:
            $ref: "#/definitions/TimeReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-time-group:
    post:
      tags:
      - "Network Objects: Time Group"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "TimeGroupRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/TimeGroupRequestEdit"
        x-exportParamName: "TimeGroupRequestEdit"
      responses:
        200:
          description: "TimeGroupReply"
          schema:
            $ref: "#/definitions/TimeGroupReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-trusted-client:
    post:
      tags:
      - "Network Objects: Trusted Client"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "TrustedClientRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/TrustedClientRequestEdit"
        x-exportParamName: "TrustedClientRequestEdit"
      responses:
        200:
          description: "TrustedClientReply"
          schema:
            $ref: "#/definitions/TrustedClientReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-vpn-community-meshed:
    post:
      tags:
      - "VPN: VPN Community Meshed"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "VpnMeshedCommunityRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/VpnMeshedCommunityRequestEdit"
        x-exportParamName: "VpnMeshedCommunityRequestEdit"
      responses:
        200:
          description: "VpnMeshedCommunityReply"
          schema:
            $ref: "#/definitions/VpnMeshedCommunityReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-vpn-community-star:
    post:
      tags:
      - "VPN: VPN Community Star"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "VpnStarCommunityRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/VpnStarCommunityRequestEdit"
        x-exportParamName: "VpnStarCommunityRequestEdit"
      responses:
        200:
          description: "VpnStarCommunityReply"
          schema:
            $ref: "#/definitions/VpnStarCommunityReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /set-wildcard:
    post:
      tags:
      - "Network Objects: Wildcard"
      description: "Edit existing object using object name or uid."
      parameters:
      - in: "body"
        name: "WildcardRequestEdit"
        required: true
        schema:
          $ref: "#/definitions/WildcardRequestEdit"
        x-exportParamName: "WildcardRequestEdit"
      responses:
        200:
          description: "WildcardReply"
          schema:
            $ref: "#/definitions/WildcardReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-access-layer:
    post:
      tags:
      - "Access Control & NAT: Access Layer"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "AccessLayerReply"
          schema:
            $ref: "#/definitions/AccessLayerReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-access-layers:
    post:
      tags:
      - "Access Control & NAT: Access Layer"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "AccessLayersQueryReply"
          schema:
            $ref: "#/definitions/AccessLayersQueryReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-access-role:
    post:
      tags:
      - "Network Objects: Access Role"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "AccessRoleReply"
          schema:
            $ref: "#/definitions/AccessRoleReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-access-roles:
    post:
      tags:
      - "Network Objects: Access Role"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-access-rule:
    post:
      tags:
      - "Access Control & NAT: Access Rule"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "AccessRuleIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/AccessRuleIdentifierRequestShow"
        x-exportParamName: "AccessRuleIdentifierRequestShow"
      responses:
        200:
          description: "AccessRuleReply"
          schema:
            $ref: "#/definitions/AccessRuleReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-access-rulebase:
    post:
      tags:
      - "Access Control & NAT: Access Rule"
      description: "Shows the entire Access Rules layer.  This layer is divided into\
        \ sections. An Access Rule may be within a section, or independent of a section\
        \ (in which case it is said to be under the \"global\" section). The reply\
        \ features a list of objects. Each object may be a section of the layer, with\
        \ all its rules in, or a rule itself, for the case of rules which are under\
        \ the global section. An optional \"filter\" field may be added in order to\
        \ filter out only those rules that match a search criteria."
      parameters:
      - in: "body"
        name: "QueryAccessRulebaseRequest"
        required: true
        schema:
          $ref: "#/definitions/QueryAccessRulebaseRequest"
        x-exportParamName: "QueryAccessRulebaseRequest"
      responses:
        200:
          description: "QueryAccessRulebaseReply"
          schema:
            $ref: "#/definitions/QueryAccessRulebaseReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-access-section:
    post:
      tags:
      - "Access Control & NAT: Access Section"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "AccessSectionIdentifierRequest"
        required: true
        schema:
          $ref: "#/definitions/AccessSectionIdentifierRequest"
        x-exportParamName: "AccessSectionIdentifierRequest"
      responses:
        200:
          description: "AccessSectionReply"
          schema:
            $ref: "#/definitions/AccessSectionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-address-range:
    post:
      tags:
      - "Network Objects: Address Range"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "AddressRangeReply"
          schema:
            $ref: "#/definitions/AddressRangeReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-address-ranges:
    post:
      tags:
      - "Network Objects: Address Range"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "AddressRangeQueryReply"
          schema:
            $ref: "#/definitions/AddressRangeQueryReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-administrator:
    post:
      tags:
      - "Misc.: Administrator"
      description: "Retrieve existing administrator using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "AdministratorReply"
          schema:
            $ref: "#/definitions/AdministratorReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-administrators:
    post:
      tags:
      - "Misc.: Administrator"
      description: "Retrieve all administrators."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-api-settings:
    post:
      tags:
      - "Misc.: API Settings"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiServerSettingsRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiServerSettingsRequestShow"
        x-exportParamName: "ApiServerSettingsRequestShow"
      responses:
        200:
          description: "ApiServerSettingsReply"
          schema:
            $ref: "#/definitions/ApiServerSettingsReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-api-status:
    post:
      tags:
      - "Unknown"
      parameters:
      - in: "body"
        name: "WebApiServerStatusRequest"
        required: true
        schema:
          $ref: "#/definitions/WebApiServerStatusRequest"
        x-exportParamName: "WebApiServerStatusRequest"
      responses:
        200:
          description: "WebApiServerStatusReply"
          schema:
            $ref: "#/definitions/WebApiServerStatusReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-api-versions:
    post:
      tags:
      - "Misc."
      description: "Shows all supported API versions and current API version (the\
        \ latest one)."
      parameters:
      - in: "body"
        name: "EmptyRequest"
        required: true
        schema:
          $ref: "#/definitions/EmptyRequest"
        x-exportParamName: "EmptyRequest"
      responses:
        200:
          description: "ApiVersionsReply"
          schema:
            $ref: "#/definitions/ApiVersionsReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-application-site:
    post:
      tags:
      - "Service & Applications: Application"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApplicationSiteIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApplicationSiteIdentifierRequestShow"
        x-exportParamName: "ApplicationSiteIdentifierRequestShow"
      responses:
        200:
          description: "ApplicationSiteReply"
          schema:
            $ref: "#/definitions/ApplicationSiteReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-application-site-categories:
    post:
      tags:
      - "Service & Applications: Application Category"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-application-site-category:
    post:
      tags:
      - "Service & Applications: Application Category"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "ApplicationSiteCategoryReply"
          schema:
            $ref: "#/definitions/ApplicationSiteCategoryReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-application-site-group:
    post:
      tags:
      - "Service & Applications: Application Group"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "ApplicationSiteGroupReply"
          schema:
            $ref: "#/definitions/ApplicationSiteGroupReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-application-site-groups:
    post:
      tags:
      - "Service & Applications: Application Group"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupWithMembersQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupWithMembersQueryRequest"
        x-exportParamName: "ObjectInGroupWithMembersQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-application-sites:
    post:
      tags:
      - "Service & Applications: Application"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-changes:
    post:
      tags:
      - "Misc."
      parameters:
      - in: "body"
        name: "DiffRequest"
        required: true
        schema:
          $ref: "#/definitions/DiffRequest"
        x-exportParamName: "DiffRequest"
      responses:
        200:
          description: "DiffReplyTask"
          schema:
            $ref: "#/definitions/DiffReplyTask"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-commands:
    post:
      tags:
      - "Misc."
      parameters:
      - in: "body"
        name: "ShowCommandsRequest"
        required: true
        schema:
          $ref: "#/definitions/ShowCommandsRequest"
        x-exportParamName: "ShowCommandsRequest"
      responses:
        200:
          description: "ShowCommandsReply"
          schema:
            $ref: "#/definitions/ShowCommandsReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-data-center:
    post:
      tags:
      - "Data Center: Data Center"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "DataCenterServerReply"
          schema:
            $ref: "#/definitions/DataCenterServerReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-data-center-content:
    post:
      tags:
      - "Data Center"
      description: "Retrieve Data Center Objects from a Data Center."
      parameters:
      - in: "body"
        name: "DataCenterContentRequest"
        required: true
        schema:
          $ref: "#/definitions/DataCenterContentRequest"
        x-exportParamName: "DataCenterContentRequest"
      responses:
        200:
          description: "DataCenterContentQueryReply"
          schema:
            $ref: "#/definitions/DataCenterContentQueryReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-data-center-object:
    post:
      tags:
      - "Data Center: Data Center Object"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "DataCenterObjectReply"
          schema:
            $ref: "#/definitions/DataCenterObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-data-center-objects:
    post:
      tags:
      - "Data Center: Data Center Object"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-data-centers:
    post:
      tags:
      - "Data Center: Data Center"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-dns-domain:
    post:
      tags:
      - "Network Objects: DNS Domain"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "DnsDomainReply"
          schema:
            $ref: "#/definitions/DnsDomainReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-dns-domains:
    post:
      tags:
      - "Network Objects: DNS Domain"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-domain:
    post:
      tags:
      - "Multi-Domain: Domain"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "LocalDomainReply"
          schema:
            $ref: "#/definitions/LocalDomainReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-domains:
    post:
      tags:
      - "Multi-Domain: Domain"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-dynamic-object:
    post:
      tags:
      - "Network Objects: Dynamic Object"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "DynamicObjectReply"
          schema:
            $ref: "#/definitions/DynamicObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-dynamic-objects:
    post:
      tags:
      - "Network Objects: Dynamic Object"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-exception-group:
    post:
      tags:
      - "Threat Prevention: Threat Exception Group"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "ThreatExceptionGroupReply"
          schema:
            $ref: "#/definitions/ThreatExceptionGroupReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-exception-groups:
    post:
      tags:
      - "Threat Prevention: Threat Exception Group"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-gateways-and-servers:
    post:
      tags:
      - "Misc."
      description: "Shows list of Gateways & Servers sorted by name."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "QueryGatewaysServersReply"
          schema:
            $ref: "#/definitions/QueryGatewaysServersReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-global-assignment:
    post:
      tags:
      - "Multi-Domain: Global Assignment"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "GlobalAssignmentIdentifierRequest"
        required: true
        schema:
          $ref: "#/definitions/GlobalAssignmentIdentifierRequest"
        x-exportParamName: "GlobalAssignmentIdentifierRequest"
      responses:
        200:
          description: "GlobalAssignmentReply"
          schema:
            $ref: "#/definitions/GlobalAssignmentReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-global-assignments:
    post:
      tags:
      - "Multi-Domain: Global Assignment"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-global-domain:
    post:
      tags:
      - "Multi-Domain: Global Domain"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "GlobalDomainReply"
          schema:
            $ref: "#/definitions/GlobalDomainReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-group:
    post:
      tags:
      - "Network Objects: Group"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "GroupRequestShow"
        required: true
        schema:
          $ref: "#/definitions/GroupRequestShow"
        x-exportParamName: "GroupRequestShow"
      responses:
        200:
          description: "GroupReply"
          schema:
            $ref: "#/definitions/GroupReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-group-with-exclusion:
    post:
      tags:
      - "Network Objects: Group with exclusion"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "GroupWithExclusionRequestShow"
        required: true
        schema:
          $ref: "#/definitions/GroupWithExclusionRequestShow"
        x-exportParamName: "GroupWithExclusionRequestShow"
      responses:
        200:
          description: "GroupWithExclusionReply"
          schema:
            $ref: "#/definitions/GroupWithExclusionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-groups:
    post:
      tags:
      - "Network Objects: Group"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "GroupRequestQuery"
        required: true
        schema:
          $ref: "#/definitions/GroupRequestQuery"
        x-exportParamName: "GroupRequestQuery"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-groups-with-exclusion:
    post:
      tags:
      - "Network Objects: Group with exclusion"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "GroupWithExclusionRequestQuery"
        required: true
        schema:
          $ref: "#/definitions/GroupWithExclusionRequestQuery"
        x-exportParamName: "GroupWithExclusionRequestQuery"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-host:
    post:
      tags:
      - "Network Objects: Host"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "HostReply"
          schema:
            $ref: "#/definitions/HostReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-hosts:
    post:
      tags:
      - "Network Objects: Host"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "HostQueryReply"
          schema:
            $ref: "#/definitions/HostQueryReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-internal-version:
    post:
      tags:
      - "Unknown"
      parameters:
      - in: "body"
        name: "VersionInternalRequest"
        required: true
        schema:
          $ref: "#/definitions/VersionInternalRequest"
        x-exportParamName: "VersionInternalRequest"
      responses:
        200:
          description: "VersionInternalReply"
          schema:
            $ref: "#/definitions/VersionInternalReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-ips-protection-extended-attribute:
    post:
      tags:
      - "Threat Prevention: IPS Extended Attributes"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "IpsAdditionalPropertiesShowReply"
          schema:
            $ref: "#/definitions/IpsAdditionalPropertiesShowReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-ips-protection-extended-attributes:
    post:
      tags:
      - "Threat Prevention: IPS Extended Attributes"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "IpsAdditionalPropertiesQueryReply"
          schema:
            $ref: "#/definitions/IpsAdditionalPropertiesQueryReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-ips-status:
    post:
      tags:
      - "Threat Prevention: IPS"
      parameters:
      - in: "body"
        name: "IpsStatusRequest"
        required: true
        schema:
          $ref: "#/definitions/IpsStatusRequest"
        x-exportParamName: "IpsStatusRequest"
      responses:
        200:
          description: "IpsStatusReply"
          schema:
            $ref: "#/definitions/IpsStatusReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-ips-update-schedule:
    post:
      tags:
      - "Threat Prevention: IPS"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "IpsUpdateScheduleRequestShow"
        required: true
        schema:
          $ref: "#/definitions/IpsUpdateScheduleRequestShow"
        x-exportParamName: "IpsUpdateScheduleRequestShow"
      responses:
        200:
          description: "IpsUpdateScheduleReply"
          schema:
            $ref: "#/definitions/IpsUpdateScheduleReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-last-published-session:
    post:
      tags:
      - "Session Management: Session"
      description: "Shows the last published session."
      parameters:
      - in: "body"
        name: "EmptyRequest"
        required: true
        schema:
          $ref: "#/definitions/EmptyRequest"
        x-exportParamName: "EmptyRequest"
      responses:
        200:
          description: "WorkSessionReply"
          schema:
            $ref: "#/definitions/WorkSessionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-login-message:
    post:
      tags:
      - "Session Management: Login Message"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "LoginMessageRequestShow"
        required: true
        schema:
          $ref: "#/definitions/LoginMessageRequestShow"
        x-exportParamName: "LoginMessageRequestShow"
      responses:
        200:
          description: "LoginMessageReply"
          schema:
            $ref: "#/definitions/LoginMessageReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-mds:
    post:
      tags:
      - "Multi-Domain: Multi-Domain Server (MDS)"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "MdsReply"
          schema:
            $ref: "#/definitions/MdsReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-mdss:
    post:
      tags:
      - "Multi-Domain: Multi-Domain Server (MDS)"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-multicast-address-range:
    post:
      tags:
      - "Network Objects: Multicast Address Range"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "MultiCastAddressRangeReply"
          schema:
            $ref: "#/definitions/MultiCastAddressRangeReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-multicast-address-ranges:
    post:
      tags:
      - "Network Objects: Multicast Address Range"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "MulticastAddressRangeQueryReply"
          schema:
            $ref: "#/definitions/MulticastAddressRangeQueryReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-nat-rule:
    post:
      tags:
      - "Access Control & NAT: NAT Rule"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "NatRuleIdentifierRequest"
        required: true
        schema:
          $ref: "#/definitions/NatRuleIdentifierRequest"
        x-exportParamName: "NatRuleIdentifierRequest"
      responses:
        200:
          description: "NatRuleReply"
          schema:
            $ref: "#/definitions/NatRuleReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-nat-rulebase:
    post:
      tags:
      - "Access Control & NAT: NAT Rule"
      description: "Shows the entire NAT Rules layer.  This layer is divided into\
        \ sections. A NAT Rule may be within a section, or independent of a section\
        \ (in which case it is said to be under the \"global\" section). There are\
        \ two types of sections: auto generated read only sections and general sections\
        \ which are created manually. The reply features a list of objects. Each object\
        \ may be a section of the layer, within which its rules may be found, or a\
        \ rule itself, for the case of rules which are under the global section. An\
        \ optional \"filter\" field may be added in order to filter out only those\
        \ rules that match a search criteria."
      parameters:
      - in: "body"
        name: "QueryNatRulebaseRequest"
        required: true
        schema:
          $ref: "#/definitions/QueryNatRulebaseRequest"
        x-exportParamName: "QueryNatRulebaseRequest"
      responses:
        200:
          description: "QueryNatRulebaseReply"
          schema:
            $ref: "#/definitions/QueryNatRulebaseReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-nat-section:
    post:
      tags:
      - "Access Control & NAT: NAT Section"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "NatSectionIdentifierRequest"
        required: true
        schema:
          $ref: "#/definitions/NatSectionIdentifierRequest"
        x-exportParamName: "NatSectionIdentifierRequest"
      responses:
        200:
          description: "NatSectionReply"
          schema:
            $ref: "#/definitions/NatSectionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-network:
    post:
      tags:
      - "Network Objects: Network"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "NetworkReply"
          schema:
            $ref: "#/definitions/NetworkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-networks:
    post:
      tags:
      - "Network Objects: Network"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "NetworkQueryReply"
          schema:
            $ref: "#/definitions/NetworkQueryReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-object:
    post:
      tags:
      - "Misc."
      parameters:
      - in: "body"
        name: "ShowObjectRequest"
        required: true
        schema:
          $ref: "#/definitions/ShowObjectRequest"
        x-exportParamName: "ShowObjectRequest"
      responses:
        200:
          description: "ShowObjectReply"
          schema:
            $ref: "#/definitions/ShowObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-objects:
    post:
      tags:
      - "Misc."
      parameters:
      - in: "body"
        name: "QueryObjectsRequest"
        required: true
        schema:
          $ref: "#/definitions/QueryObjectsRequest"
        x-exportParamName: "QueryObjectsRequest"
      responses:
        200:
          description: "QueryObjectsReply"
          schema:
            $ref: "#/definitions/QueryObjectsReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-opsec-application:
    post:
      tags:
      - "Network Objects: OPSEC Application"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "OpsecApplicationReply"
          schema:
            $ref: "#/definitions/OpsecApplicationReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-opsec-applications:
    post:
      tags:
      - "Network Objects: OPSEC Application"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-package:
    post:
      tags:
      - "Policy: Policy Package"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "PolicyPackageReply"
          schema:
            $ref: "#/definitions/PolicyPackageReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-packages:
    post:
      tags:
      - "Policy: Policy Package"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "PackagesQueryReply"
          schema:
            $ref: "#/definitions/PackagesQueryReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-place-holder:
    post:
      tags:
      - "Multi-Domain: Placeholder"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiPlaceHolderIdentifierRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiPlaceHolderIdentifierRequest"
        x-exportParamName: "ApiPlaceHolderIdentifierRequest"
      responses:
        200:
          description: "ApiPlaceHolderReply"
          schema:
            $ref: "#/definitions/ApiPlaceHolderReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-rule-candidates:
    post:
      tags:
      - "Unknown"
      parameters:
      - in: "body"
        name: "ShowRuleCandidateRequest"
        required: true
        schema:
          $ref: "#/definitions/ShowRuleCandidateRequest"
        x-exportParamName: "ShowRuleCandidateRequest"
      responses:
        200:
          description: "ShowRuleCandidateReply"
          schema:
            $ref: "#/definitions/ShowRuleCandidateReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-scada-application:
    post:
      tags:
      - "Unknown"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApplicationSiteIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApplicationSiteIdentifierRequestShow"
        x-exportParamName: "ApplicationSiteIdentifierRequestShow"
      responses:
        200:
          description: "ScadaApplicationReply"
          schema:
            $ref: "#/definitions/ScadaApplicationReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-scada-applications:
    post:
      tags:
      - "Unknown"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-security-zone:
    post:
      tags:
      - "Network Objects: Security Zone"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "SecurityZoneReply"
          schema:
            $ref: "#/definitions/SecurityZoneReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-security-zones:
    post:
      tags:
      - "Network Objects: Security Zone"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-service-dce-rpc:
    post:
      tags:
      - "Service & Applications: Service DCE-RPC"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "DcerpcServiceReply"
          schema:
            $ref: "#/definitions/DcerpcServiceReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-service-group:
    post:
      tags:
      - "Service & Applications: Service Group"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ServiceGroupRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ServiceGroupRequestShow"
        x-exportParamName: "ServiceGroupRequestShow"
      responses:
        200:
          description: "ServiceGroupReply"
          schema:
            $ref: "#/definitions/ServiceGroupReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-service-groups:
    post:
      tags:
      - "Service & Applications: Service Group"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ServiceGroupRequestQuery"
        required: true
        schema:
          $ref: "#/definitions/ServiceGroupRequestQuery"
        x-exportParamName: "ServiceGroupRequestQuery"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-service-icmp:
    post:
      tags:
      - "Service & Applications: Service ICMP"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "ServiceIcmpReply"
          schema:
            $ref: "#/definitions/ServiceIcmpReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-service-icmp6:
    post:
      tags:
      - "Service & Applications: Service ICMP6"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "ServiceIcmp6Reply"
          schema:
            $ref: "#/definitions/ServiceIcmp6Reply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-service-other:
    post:
      tags:
      - "Service & Applications: Service Other"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "OtherServiceReply"
          schema:
            $ref: "#/definitions/OtherServiceReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-service-rpc:
    post:
      tags:
      - "Service & Applications: Service RPC"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "RpcServiceReply"
          schema:
            $ref: "#/definitions/RpcServiceReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-service-sctp:
    post:
      tags:
      - "Service & Applications: Service SCTP"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "SctpServiceReply"
          schema:
            $ref: "#/definitions/SctpServiceReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-service-tcp:
    post:
      tags:
      - "Service & Applications: Service TCP"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "TcpServiceReply"
          schema:
            $ref: "#/definitions/TcpServiceReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-service-udp:
    post:
      tags:
      - "Service & Applications: Service UDP"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "UdpServiceReply"
          schema:
            $ref: "#/definitions/UdpServiceReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-services-dce-rpc:
    post:
      tags:
      - "Service & Applications: Service DCE-RPC"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-services-icmp:
    post:
      tags:
      - "Service & Applications: Service ICMP"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-services-icmp6:
    post:
      tags:
      - "Service & Applications: Service ICMP6"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-services-other:
    post:
      tags:
      - "Service & Applications: Service Other"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-services-rpc:
    post:
      tags:
      - "Service & Applications: Service RPC"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-services-sctp:
    post:
      tags:
      - "Service & Applications: Service SCTP"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-services-tcp:
    post:
      tags:
      - "Service & Applications: Service TCP"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-services-udp:
    post:
      tags:
      - "Service & Applications: Service UDP"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-session:
    post:
      tags:
      - "Session Management: Session"
      description: "Show session."
      parameters:
      - in: "body"
        name: "WorkSessionObjectIdentifierRequest"
        required: true
        schema:
          $ref: "#/definitions/WorkSessionObjectIdentifierRequest"
        x-exportParamName: "WorkSessionObjectIdentifierRequest"
      responses:
        200:
          description: "WorkSessionReply"
          schema:
            $ref: "#/definitions/WorkSessionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-sessions:
    post:
      tags:
      - "Session Management: Session"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "WorkSessionQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/WorkSessionQueryRequest"
        x-exportParamName: "WorkSessionQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-simple-gateway:
    post:
      tags:
      - "Network Objects: Simple Gateway"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "GatewayCkpReply"
          schema:
            $ref: "#/definitions/GatewayCkpReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-simple-gateways:
    post:
      tags:
      - "Network Objects: Simple Gateway"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-tag:
    post:
      tags:
      - "Network Objects: Tags"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "TagReply"
          schema:
            $ref: "#/definitions/TagReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-tags:
    post:
      tags:
      - "Network Objects: Tags"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-task:
    post:
      tags:
      - "Misc."
      parameters:
      - in: "body"
        name: "TaskRequest"
        required: true
        schema:
          $ref: "#/definitions/TaskRequest"
        x-exportParamName: "TaskRequest"
      responses:
        200:
          description: "TaskReply"
          schema:
            $ref: "#/definitions/TaskReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-tasks:
    post:
      tags:
      - "Misc."
      parameters:
      - in: "body"
        name: "TaskQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/TaskQueryRequest"
        x-exportParamName: "TaskQueryRequest"
      responses:
        200:
          description: "TaskQueryReply"
          schema:
            $ref: "#/definitions/TaskQueryReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-threat-exception:
    post:
      tags:
      - "Threat Prevention: Threat Exception"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ThreatExceptionIdentifierRequest"
        required: true
        schema:
          $ref: "#/definitions/ThreatExceptionIdentifierRequest"
        x-exportParamName: "ThreatExceptionIdentifierRequest"
      responses:
        200:
          description: "ThreatExceptionReply"
          schema:
            $ref: "#/definitions/ThreatExceptionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-threat-indicator:
    post:
      tags:
      - "Threat Prevention: Threat Indicator"
      description: "Displays a Threat-Indicator."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "IndicatorReply"
          schema:
            $ref: "#/definitions/IndicatorReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-threat-indicators:
    post:
      tags:
      - "Threat Prevention: Threat Indicator"
      description: "Display a list of Threat-Indicators."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "IndicatorQueryReply"
          schema:
            $ref: "#/definitions/IndicatorQueryReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-threat-layer:
    post:
      tags:
      - "Threat Prevention: Threat Layer"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "ThreatLayerReply"
          schema:
            $ref: "#/definitions/ThreatLayerReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-threat-layers:
    post:
      tags:
      - "Threat Prevention: Threat Layer"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ThreatLayersQueryReply"
          schema:
            $ref: "#/definitions/ThreatLayersQueryReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-threat-profile:
    post:
      tags:
      - "Threat Prevention: Threat Profile"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "ProfileReply"
          schema:
            $ref: "#/definitions/ProfileReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-threat-profiles:
    post:
      tags:
      - "Threat Prevention: Threat Profile"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ProfileQueryReply"
          schema:
            $ref: "#/definitions/ProfileQueryReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-threat-protection:
    post:
      tags:
      - "Threat Prevention: Threat Protection"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "ProtectionReply"
          schema:
            $ref: "#/definitions/ProtectionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-threat-protections:
    post:
      tags:
      - "Threat Prevention: Threat Protection"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ProtectionQueryReply"
          schema:
            $ref: "#/definitions/ProtectionQueryReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-threat-rule:
    post:
      tags:
      - "Threat Prevention: Threat Rule"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ThreatRuleIdentifierRequest"
        required: true
        schema:
          $ref: "#/definitions/ThreatRuleIdentifierRequest"
        x-exportParamName: "ThreatRuleIdentifierRequest"
      responses:
        200:
          description: "ThreatRuleReply"
          schema:
            $ref: "#/definitions/ThreatRuleReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-threat-rule-exception-rulebase:
    post:
      tags:
      - "Threat Prevention: Threat Exception"
      description: "Shows the entire Threat Exceptions layer  generated for a given\
        \ threat rule."
      parameters:
      - in: "body"
        name: "QueryThreatExceptionRulebaseRequest"
        required: true
        schema:
          $ref: "#/definitions/QueryThreatExceptionRulebaseRequest"
        x-exportParamName: "QueryThreatExceptionRulebaseRequest"
      responses:
        200:
          description: "QueryThreatExceptionRulebaseReply"
          schema:
            $ref: "#/definitions/QueryThreatExceptionRulebaseReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-threat-rulebase:
    post:
      tags:
      - "Threat Prevention: Threat Rule"
      description: "Shows the entire Threat Prevention Rules layer. The reply features\
        \ a list of rules. Each rule has the Global Exceptions Group attached and\
        \ may have any number of an Exceptions Group attached. An optional \"filter\"\
        \ field may be added in order to filter out only those rules that match a\
        \ search criteria."
      parameters:
      - in: "body"
        name: "QueryThreatRulebaseRequest"
        required: true
        schema:
          $ref: "#/definitions/QueryThreatRulebaseRequest"
        x-exportParamName: "QueryThreatRulebaseRequest"
      responses:
        200:
          description: "QueryThreatRulebaseReply"
          schema:
            $ref: "#/definitions/QueryThreatRulebaseReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-time:
    post:
      tags:
      - "Network Objects: Time"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "TimeReply"
          schema:
            $ref: "#/definitions/TimeReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-time-group:
    post:
      tags:
      - "Network Objects: Time Group"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "TimeGroupReply"
          schema:
            $ref: "#/definitions/TimeGroupReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-time-groups:
    post:
      tags:
      - "Network Objects: Time Group"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-times:
    post:
      tags:
      - "Network Objects: Time"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-trusted-client:
    post:
      tags:
      - "Network Objects: Trusted Client"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "TrustedClientReply"
          schema:
            $ref: "#/definitions/TrustedClientReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-trusted-clients:
    post:
      tags:
      - "Network Objects: Trusted Client"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-unused-objects:
    post:
      tags:
      - "Misc."
      description: "Retrieve all unused objects."
      parameters:
      - in: "body"
        name: "ObjectInGroupWithMembersQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupWithMembersQueryRequest"
        x-exportParamName: "ObjectInGroupWithMembersQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-updatable-object:
    post:
      tags:
      - "Updatable Objects: Updatable Object"
      description: "Retrieves an existing Updatable Object from the Management server."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "UpdatableObjectReply"
          schema:
            $ref: "#/definitions/UpdatableObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-updatable-objects:
    post:
      tags:
      - "Updatable Objects: Updatable Object"
      description: "Retrieves all Updatable Objects that were imported to the Management\
        \ Server."
      parameters:
      - in: "body"
        name: "ObjectInGroupQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ObjectInGroupQueryRequest"
        x-exportParamName: "ObjectInGroupQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-updatable-objects-repository-content:
    post:
      tags:
      - "Updatable Objects: Updatable Objects Repository"
      description: "Shows the content of the available updatable objects from the\
        \ Check Point User Center."
      parameters:
      - in: "body"
        name: "UpdatableObjectsRepositoryContentRequest"
        required: true
        schema:
          $ref: "#/definitions/UpdatableObjectsRepositoryContentRequest"
        x-exportParamName: "UpdatableObjectsRepositoryContentRequest"
      responses:
        200:
          description: "UpdatableObjectsRepositoryContentReply"
          schema:
            $ref: "#/definitions/UpdatableObjectsRepositoryContentReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-validations:
    post:
      tags:
      - "Misc."
      description: "Show all validation incidents limited to 500."
      parameters:
      - in: "body"
        name: "EmptyRequest"
        required: true
        schema:
          $ref: "#/definitions/EmptyRequest"
        x-exportParamName: "EmptyRequest"
      responses:
        200:
          description: "ValidationsReply"
          schema:
            $ref: "#/definitions/ValidationsReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-version:
    post:
      tags:
      - "Unknown"
      parameters:
      - in: "body"
        name: "VersionRequest"
        required: true
        schema:
          $ref: "#/definitions/VersionRequest"
        x-exportParamName: "VersionRequest"
      responses:
        200:
          description: "VersionReply"
          schema:
            $ref: "#/definitions/VersionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-vpn-communities-meshed:
    post:
      tags:
      - "VPN: VPN Community Meshed"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-vpn-communities-star:
    post:
      tags:
      - "VPN: VPN Community Star"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-vpn-community-meshed:
    post:
      tags:
      - "VPN: VPN Community Meshed"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "VpnMeshedCommunityReply"
          schema:
            $ref: "#/definitions/VpnMeshedCommunityReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-vpn-community-star:
    post:
      tags:
      - "VPN: VPN Community Star"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "VpnStarCommunityReply"
          schema:
            $ref: "#/definitions/VpnStarCommunityReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-wildcard:
    post:
      tags:
      - "Network Objects: Wildcard"
      description: "Retrieve existing object using object name or uid."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "WildcardReply"
          schema:
            $ref: "#/definitions/WildcardReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /show-wildcards:
    post:
      tags:
      - "Network Objects: Wildcard"
      description: "Retrieve all objects."
      parameters:
      - in: "body"
        name: "ApiQueryRequest"
        required: true
        schema:
          $ref: "#/definitions/ApiQueryRequest"
        x-exportParamName: "ApiQueryRequest"
      responses:
        200:
          description: "ApiQueryObjectReply"
          schema:
            $ref: "#/definitions/ApiQueryObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /switch-session:
    post:
      tags:
      - "Session Management: Session"
      description: "Switch to another session."
      parameters:
      - in: "body"
        name: "WorkSessionSwitchRequest"
        required: true
        schema:
          $ref: "#/definitions/WorkSessionSwitchRequest"
        x-exportParamName: "WorkSessionSwitchRequest"
      responses:
        200:
          description: "WorkSessionReply"
          schema:
            $ref: "#/definitions/WorkSessionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /take-over-session:
    post:
      tags:
      - "Session Management: Session"
      description: "Take ownership of another session and start working on it."
      parameters:
      - in: "body"
        name: "WorkSessionTakeOverRequest"
        required: true
        schema:
          $ref: "#/definitions/WorkSessionTakeOverRequest"
        x-exportParamName: "WorkSessionTakeOverRequest"
      responses:
        200:
          description: "WorkSessionReply"
          schema:
            $ref: "#/definitions/WorkSessionReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /unlock-administrator:
    post:
      tags:
      - "Misc.: Administrator"
      description: "Unlock administrator."
      parameters:
      - in: "body"
        name: "ApiVisualCPObjectIdentifierRequestShow"
        required: true
        schema:
          $ref: "#/definitions/ApiVisualCPObjectIdentifierRequestShow"
        x-exportParamName: "ApiVisualCPObjectIdentifierRequestShow"
      responses:
        200:
          description: "ApiOkReply"
          schema:
            $ref: "#/definitions/ApiOkReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /update-updatable-objects-repository-content:
    post:
      tags:
      - "Updatable Objects: Updatable Objects Repository"
      description: "Updates the content of the Updatable Objects repository from the\
        \ Check Point User Center."
      parameters:
      - in: "body"
        name: "EmptyRequest"
        required: true
        schema:
          $ref: "#/definitions/EmptyRequest"
        x-exportParamName: "EmptyRequest"
      responses:
        200:
          description: "ApiTaskReply"
          schema:
            $ref: "#/definitions/ApiTaskReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /verify-policy:
    post:
      tags:
      - "Policy"
      description: "Verifies the policy of the selected package."
      parameters:
      - in: "body"
        name: "VerifyPolicyRequest"
        required: true
        schema:
          $ref: "#/definitions/VerifyPolicyRequest"
        x-exportParamName: "VerifyPolicyRequest"
      responses:
        200:
          description: "VerifyPolicyReply"
          schema:
            $ref: "#/definitions/VerifyPolicyReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
  /where-used:
    post:
      tags:
      - "Misc."
      description: "Searches for usage of the target object in other objects and rules."
      parameters:
      - in: "body"
        name: "WhereUsedObjectRequest"
        required: true
        schema:
          $ref: "#/definitions/WhereUsedObjectRequest"
        x-exportParamName: "WhereUsedObjectRequest"
      responses:
        200:
          description: "WhereUsedObjectReply"
          schema:
            $ref: "#/definitions/WhereUsedObjectReply"
        400:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        401:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        403:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        404:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        409:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        500:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
        501:
          description: "ApiValidationErrorReply"
          schema:
            $ref: "#/definitions/ApiValidationErrorReply"
      security:
      - apiKey: []
securityDefinitions:
  apiKey:
    description: "Session unique identifier as it returned by the login request"
    type: "apiKey"
    name: "X-chkp-sid"
    in: "header"
definitions:
  AccessLayerReply:
    type: "object"
    properties:
      applications-and-url-filtering:
        type: "boolean"
        description: "Whether Applications & URL Filtering blade is enabled on this\
          \ layer."
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      content-awareness:
        type: "boolean"
        description: "Whether Content Awareness blade is enabled on this layer."
      detect-using-x-forward-for:
        type: "boolean"
        description: "Whether X-Forward-For HTTP header is been used."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      firewall:
        type: "boolean"
        description: "Whether Firewall blade is enabled on this layer."
      icon:
        type: "string"
        description: "Object icon."
      implicit-cleanup-action:
        type: "string"
        description: "The default \"catch-all\" action for traffic that does not match\
          \ any explicit or implied rules in the layer."
        enum:
        - "drop"
        - "accept"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      mobile-access:
        type: "boolean"
        description: "Whether Mobile Access blade is enabled on this layer."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      parent-layer:
        type: "string"
        description: "Parent layer of this layer."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      shared:
        type: "boolean"
        description: "Whether this layer is shared."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      implicit-cleanup-action: "drop"
      shared: true
      comments: "comments"
      color: "aquamarine"
      content-awareness: true
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      type: "type"
      detect-using-x-forward-for: true
      applications-and-url-filtering: true
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      firewall: true
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      parent-layer: "parent-layer"
      read-only: true
      mobile-access: true
  AccessLayerRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      applications-and-url-filtering:
        type: "boolean"
        description: "Whether to enable Applications & URL Filtering blade on the\
          \ layer."
        default: false
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      content-awareness:
        type: "boolean"
        description: "Whether to enable Content Awareness blade on the layer."
        default: false
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      detect-using-x-forward-for:
        type: "boolean"
        description: "Whether to use X-Forward-For HTTP header, which is added by\
          \ the  proxy server to keep track of the original source IP."
        default: false
      firewall:
        type: "boolean"
        description: "Whether to enable Firewall blade on the layer."
        default: true
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      implicit-cleanup-action:
        type: "string"
        description: "The default \"catch-all\" action for traffic that does not match\
          \ any explicit or implied rules in the layer."
        default: "drop"
        enum:
        - "drop"
        - "accept"
      mobile-access:
        type: "boolean"
        description: "Whether to enable Mobile Access blade on the layer."
        default: false
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      shared:
        type: "boolean"
        description: "Whether this layer is shared."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      implicit-cleanup-action: "drop"
      shared: true
      comments: "comments"
      color: "black"
      ignore-warnings: false
      content-awareness: false
      new-name: "new-name"
      detect-using-x-forward-for: false
      applications-and-url-filtering: false
      tags:
        add: "add"
      uid: "uid"
      ignore-errors: false
      firewall: true
      name: "name"
      details-level: "standard"
      mobile-access: false
  AccessLayerRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      add-default-rule:
        type: "boolean"
        description: "Indicates whether to include a cleanup rule in the new layer."
        default: true
      applications-and-url-filtering:
        type: "boolean"
        description: "Whether to enable Applications & URL Filtering blade on the\
          \ layer."
        default: false
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      content-awareness:
        type: "boolean"
        description: "Whether to enable Content Awareness blade on the layer."
        default: false
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      detect-using-x-forward-for:
        type: "boolean"
        description: "Whether to use X-Forward-For HTTP header, which is added by\
          \ the  proxy server to keep track of the original source IP."
        default: false
      firewall:
        type: "boolean"
        description: "Whether to enable Firewall blade on the layer."
        default: true
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      implicit-cleanup-action:
        type: "string"
        description: "The default \"catch-all\" action for traffic that does not match\
          \ any explicit or implied rules in the layer."
        default: "drop"
        enum:
        - "drop"
        - "accept"
      mobile-access:
        type: "boolean"
        description: "Whether to enable Mobile Access blade on the layer."
        default: false
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      shared:
        type: "boolean"
        description: "Whether this layer is shared."
        default: false
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      implicit-cleanup-action: "drop"
      shared: false
      comments: "comments"
      color: "black"
      ignore-warnings: false
      content-awareness: false
      detect-using-x-forward-for: false
      applications-and-url-filtering: false
      tags: "tags"
      ignore-errors: false
      firewall: true
      add-default-rule: true
      name: "name"
      details-level: "standard"
      mobile-access: false
  AccessLayersQueryReply:
    type: "object"
    properties:
      access-layers:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      from:
        type: "integer"
        description: "From which element number the query was done."
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
    example:
      access-layers:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      total: 1
      from: 0
      to: 6
  AccessRoleReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      machines:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      networks:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      remote-access-client:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
      users:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
    example:
      comments: "comments"
      color: "aquamarine"
      remote-access-client:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      networks:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      type: "type"
      users:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      machines:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      read-only: true
  AccessRoleRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      machines:
        type: "string"
        description: "Machines that can access the system."
        enum:
        - "any"
        - "all identified"
      name:
        type: "string"
        description: "Object name."
      networks:
        $ref: "#/definitions/add"
      new-name:
        type: "string"
        description: "New name of the object."
      remote-access-clients:
        type: "string"
        description: "Remote access clients identified by name or UID."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
      users:
        type: "string"
        description: "Users that can access the system."
        enum:
        - "any"
        - "all identified"
    example:
      comments: "comments"
      color: "black"
      ignore-warnings: false
      networks:
        add: "add"
      new-name: "new-name"
      users: "any"
      tags:
        add: "add"
      uid: "uid"
      ignore-errors: false
      name: "name"
      details-level: "standard"
      machines: "any"
      remote-access-clients: "remote-access-clients"
  AccessRoleRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      machines:
        type: "string"
        description: "Machines that can access the system."
        enum:
        - "any"
        - "all identified"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      networks:
        type: "string"
        description: "Collection of Network objects identified by the name or UID\
          \ that can access the system."
      remote-access-clients:
        type: "string"
        description: "Remote access clients identified by name or UID."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
      users:
        type: "string"
        description: "Users that can access the system."
        enum:
        - "any"
        - "all identified"
    example:
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      details-level: "standard"
      machines: "any"
      networks: "networks"
      remote-access-clients: "remote-access-clients"
      users: "any"
      tags: "tags"
  AccessRuleIdentifierRequest:
    type: "object"
    required:
    - "layer"
    - "uid"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      layer:
        type: "string"
        description: "Layer that the rule belongs to identified by the name or UID."
      name:
        type: "string"
        description: "Object name."
      rule-number:
        type: "integer"
        description: "Rule number."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      rule-number: 0
      name: "name"
      details-level: "standard"
      layer: "layer"
  AccessRuleIdentifierRequestShow:
    type: "object"
    required:
    - "layer"
    - "uid"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      hits-settings:
        $ref: "#/definitions/HitsSettingsRequest"
      layer:
        type: "string"
        description: "Layer that the rule belongs to identified by the name or UID."
      name:
        type: "string"
        description: "Object name."
      rule-number:
        type: "integer"
        description: "Rule number."
      show-as-ranges:
        type: "boolean"
        description: "When true, the source, destination and services & applications\
          \ parameters are displayed as ranges of IP addresses and port numbers rather\
          \ than network objects.<br /> Objects that are not represented using IP\
          \ addresses or port numbers are presented as objects.<br /> In addition,\
          \ the response of each rule does not contain the parameters: source, source-negate,\
          \ destination, destination-negate, service and service-negate, but instead\
          \ it contains the parameters: source-ranges, destination-ranges and service-ranges.<br\
          \ /><br /> Note: Requesting to show rules as ranges is limited up to 20\
          \ rules per request, otherwise an error is returned. If you wish to request\
          \ more rules, use the offset and limit parameters to limit your request."
        default: false
      show-hits:
        type: "boolean"
        description: "N/A"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      hits-settings:
        to-date: "to-date"
        from-date: "from-date"
        target: "target"
      uid: "uid"
      rule-number: 0
      show-hits: true
      name: "name"
      show-as-ranges: false
      details-level: "standard"
      layer: "layer"
  AccessRuleReply:
    type: "object"
    properties:
      action:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      action-settings:
        $ref: "#/definitions/AdvancedActionSettingsReply"
      comments:
        type: "string"
        description: "Comments string."
      content:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      content-direction:
        type: "string"
        description: "On which direction the file types processing is applied."
        enum:
        - "any"
        - "up"
        - "down"
      content-negate:
        type: "boolean"
        description: "True if negate is set for data."
      custom-fields:
        $ref: "#/definitions/CustomSummaryFieldsReply"
      destination:
        type: "array"
        description: "Collection of Network objects identified by the name or UID.\
          \ How much details are returned depends on the details-level field of the\
          \ request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      destination-negate:
        type: "boolean"
        description: "True if negate is set for destination."
      destination-ranges:
        $ref: "#/definitions/IpRanges"
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      enabled:
        type: "boolean"
        description: "Enable/Disable the rule."
      hits:
        $ref: "#/definitions/HitsReply"
      inline-layer:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      install-on:
        type: "array"
        description: "Which gateway, identified by the name or UID, to install the\
          \ policy. How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      layer:
        type: "string"
        description: "N/A"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      service:
        type: "array"
        description: "Collection of Network objects identified by the name or UID.\
          \ How much details are returned depends on the details-level field of the\
          \ request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      service-negate:
        type: "boolean"
        description: "True if negate is set for service."
      service-ranges:
        $ref: "#/definitions/PortRanges"
      source:
        type: "array"
        description: "Collection of Network objects identified by the name or UID.\
          \ How much details are returned depends on the details-level field of the\
          \ request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      source-negate:
        type: "boolean"
        description: "True if negate is set for source."
      source-ranges:
        $ref: "#/definitions/IpRanges"
      time:
        type: "array"
        description: "List of time objects. For example: \"Weekend\", \"Off-Work\"\
          , \"Every-Day\". How much details are returned depends on the details-level\
          \ field of the request. This table shows the level of detail shown when\
          \ details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      track:
        type: "object"
        description: "Track Settings."
        properties: {}
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
      user-check:
        $ref: "#/definitions/UserCheckReply"
      vpn:
        type: "array"
        description: "VPN settings. How much details are returned depends on the details-level\
          \ field of the request. This table shows the level of detail shown when\
          \ details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
    example:
      destination-negate: true
      destination:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      source:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      content-direction: "any"
      type: "type"
      content:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      enabled: true
      layer: "layer"
      uid: "uid"
      action:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      track: "{}"
      user-check:
        confirm: "per rule"
        custom-frequency:
          unit: "hours"
          every: 6
        interaction:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        frequency: "once a day"
      comments: "comments"
      source-negate: true
      service-negate: true
      hits:
        level: "zero hit count level"
        percentage: "percentage"
        first-date:
          iso-8601: "iso-8601"
          posix: 0
        last-date:
          iso-8601: "iso-8601"
          posix: 0
        value: 0
      inline-layer:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      destination-ranges:
        excluded-others:
        - "{}"
        - "{}"
        ipv4:
        - start: "start"
          end: "end"
        - start: "start"
          end: "end"
        ipv6:
        - start: "start"
          end: "end"
        - start: "start"
          end: "end"
        others:
        - "{}"
        - "{}"
      vpn:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      service:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      content-negate: true
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      install-on:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      time:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      action-settings:
        enable-identity-captive-portal: true
        limit:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
      custom-fields:
        field-1: "field-1"
        field-2: "field-2"
        field-3: "field-3"
      source-ranges:
        excluded-others:
        - "{}"
        - "{}"
        ipv4:
        - start: "start"
          end: "end"
        - start: "start"
          end: "end"
        ipv6:
        - start: "start"
          end: "end"
        - start: "start"
          end: "end"
        others:
        - "{}"
        - "{}"
      service-ranges:
        tcp:
        - start: "start"
          end: "end"
        - start: "start"
          end: "end"
        udp:
        - start: "start"
          end: "end"
        - start: "start"
          end: "end"
        excluded-others:
        - "{}"
        - "{}"
        others:
        - "{}"
        - "{}"
  AccessRuleRequestEdit:
    type: "object"
    required:
    - "layer"
    - "uid"
    properties:
      action:
        type: "string"
        description: "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User\
          \ Auth\", \"Client Auth\", \"Apply Layer\"."
      action-settings:
        $ref: "#/definitions/AdvancedActionSettingsRequest"
      comments:
        type: "string"
        description: "Comments string."
      content:
        type: "object"
        description: "List of processed file types that this rule applies on."
        properties: {}
      content-direction:
        type: "string"
        description: "On which direction the file types processing is applied."
        enum:
        - "any"
        - "up"
        - "down"
      content-negate:
        type: "boolean"
        description: "True if negate is set for data."
      custom-fields:
        $ref: "#/definitions/CustomSummaryFieldsRequest"
      destination:
        $ref: "#/definitions/add"
      destination-negate:
        type: "boolean"
        description: "True if negate is set for destination."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      enabled:
        type: "boolean"
        description: "Enable/Disable the rule."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      inline-layer:
        type: "string"
        description: "Inline Layer identified by the name or UID. Relevant only if\
          \ \"Action\" was set to \"Apply Layer\"."
      install-on:
        $ref: "#/definitions/add"
      layer:
        type: "string"
        description: "Layer that the rule belongs to identified by the name or UID."
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      new-position:
        type: "integer"
        description: "New position in the rulebase."
      rule-number:
        type: "integer"
        description: "Rule number."
      service:
        $ref: "#/definitions/add"
      service-negate:
        type: "boolean"
        description: "True if negate is set for service."
      source:
        $ref: "#/definitions/add"
      source-negate:
        type: "boolean"
        description: "True if negate is set for source."
      time:
        $ref: "#/definitions/add"
      track:
        $ref: "#/definitions/TrackSettingsForRequest"
      uid:
        type: "string"
        description: "Object unique identifier."
      user-check:
        $ref: "#/definitions/UserCheckRequest"
      vpn:
        type: "string"
        description: "Communities or Directional."
        enum:
        - "Any"
        - "All_GwToGw"
    example:
      destination-negate: true
      destination:
        add: "add"
      source:
        add: "add"
      content-direction: "any"
      new-name: "new-name"
      content: "{}"
      enabled: true
      layer: "layer"
      uid: "uid"
      rule-number: 6
      action: "action"
      details-level: "standard"
      track:
        per-session: true
        per-connection: true
        alert: "none"
        enable-firewall-session: true
        accounting: true
        type: "type"
      user-check:
        confirm: "per rule"
        custom-frequency:
          unit: "hours"
          every: 6
        interaction: "interaction"
        frequency: "once a day"
      comments: "comments"
      source-negate: true
      ignore-warnings: false
      service-negate: true
      inline-layer: "inline-layer"
      ignore-errors: false
      vpn: "Any"
      service:
        add: "add"
      content-negate: true
      name: "name"
      install-on:
        add: "add"
      new-position: 0
      time:
        add: "add"
      action-settings:
        enable-identity-captive-portal: true
        limit: "limit"
      custom-fields:
        field-1: "field-1"
        field-2: "field-2"
        field-3: "field-3"
  AccessRuleRequestNew:
    type: "object"
    required:
    - "layer"
    - "position"
    properties:
      action:
        type: "string"
        description: "\"Accept\", \"Drop\", \"Ask\", \"Inform\", \"Reject\", \"User\
          \ Auth\", \"Client Auth\", \"Apply Layer\"."
        default: "Drop"
      action-settings:
        $ref: "#/definitions/AdvancedActionSettingsRequest"
      comments:
        type: "string"
        description: "Comments string."
      content:
        type: "object"
        description: "List of processed file types that this rule applies on."
        properties: {}
      content-direction:
        type: "string"
        description: "On which direction the file types processing is applied."
        enum:
        - "any"
        - "up"
        - "down"
      content-negate:
        type: "boolean"
        description: "True if negate is set for data."
      custom-fields:
        $ref: "#/definitions/CustomSummaryFieldsRequest"
      destination:
        type: "string"
        description: "Collection of Network objects identified by the name or UID."
      destination-negate:
        type: "boolean"
        description: "True if negate is set for destination."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      enabled:
        type: "boolean"
        description: "Enable/Disable the rule."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      inline-layer:
        type: "string"
        description: "Inline Layer identified by the name or UID. Relevant only if\
          \ \"Action\" was set to \"Apply Layer\"."
      install-on:
        type: "string"
        description: "Which Gateways identified by the name or UID to install the\
          \ policy on."
      layer:
        type: "string"
        description: "Layer that the rule belongs to identified by the name or UID."
      name:
        type: "string"
        description: "Rule name."
      position:
        type: "integer"
        description: "Position in the rulebase."
      service:
        type: "string"
        description: "Collection of Network objects identified by the name or UID."
      service-negate:
        type: "boolean"
        description: "True if negate is set for service."
      source:
        type: "string"
        description: "Collection of Network objects identified by the name or UID."
      source-negate:
        type: "boolean"
        description: "True if negate is set for source."
      time:
        type: "string"
        description: "List of time objects. For example: \"Weekend\", \"Off-Work\"\
          , \"Every-Day\"."
        default: "Any"
      track:
        $ref: "#/definitions/TrackSettingsForRequest"
      user-check:
        $ref: "#/definitions/UserCheckRequest"
      vpn:
        type: "string"
        description: "Communities or Directional."
        enum:
        - "Any"
        - "All_GwToGw"
    example:
      destination-negate: true
      destination: "destination"
      source: "source"
      content-direction: "any"
      content: "{}"
      enabled: true
      layer: "layer"
      action: "Drop"
      details-level: "standard"
      track:
        per-session: true
        per-connection: true
        alert: "none"
        enable-firewall-session: true
        accounting: true
        type: "type"
      user-check:
        confirm: "per rule"
        custom-frequency:
          unit: "hours"
          every: 6
        interaction: "interaction"
        frequency: "once a day"
      comments: "comments"
      source-negate: true
      ignore-warnings: false
      service-negate: true
      inline-layer: "inline-layer"
      ignore-errors: false
      vpn: "Any"
      service: "service"
      content-negate: true
      name: "name"
      install-on: "install-on"
      position: 0
      time: "Any"
      action-settings:
        enable-identity-captive-portal: true
        limit: "limit"
      custom-fields:
        field-1: "field-1"
        field-2: "field-2"
        field-3: "field-3"
  AccessSectionIdentifierRequest:
    type: "object"
    required:
    - "layer"
    - "uid"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      layer:
        type: "string"
        description: "Layer that the rule belongs to identified by the name or UID."
      name:
        type: "string"
        description: "Object name."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      name: "name"
      details-level: "standard"
      layer: "layer"
  AccessSectionReply:
    type: "object"
    properties:
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      name: "name"
      read-only: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  AccessSectionRequestEdit:
    type: "object"
    required:
    - "layer"
    - "uid"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      layer:
        type: "string"
        description: "Layer that the rule belongs to identified by the name or UID."
      name:
        type: "string"
        description: "Section name."
      new-name:
        type: "string"
        description: "New name of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      details-level: "standard"
      new-name: "new-name"
      layer: "layer"
  AccessSectionRequestNew:
    type: "object"
    required:
    - "layer"
    - "position"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      layer:
        type: "string"
        description: "Layer that the rule belongs to identified by the name or UID."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      position:
        type: "integer"
        description: "Position in the rulebase."
    example:
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      details-level: "standard"
      position: 0
      layer: "layer"
  ActivationReply:
    type: "object"
    properties:
      action:
        type: "string"
        description: "Protection action."
        enum:
        - "Inactive"
        - "Detect"
        - "Prevent"
        - "Drop"
        - "Accept"
      capture-packets:
        type: "boolean"
        description: "Capture packets."
      track:
        type: "string"
        description: "Tracking method for protection."
        enum:
        - "none"
        - "log"
        - "alert"
        - "mail"
        - "snmp trap"
        - "user alert"
        - "user alert 1"
        - "user alert 2"
    description: "Settings overrides."
    example:
      action: "Inactive"
      track: "none"
      capture-packets: true
  AddProtectionsRequest:
    type: "object"
    properties:
      package-format:
        type: "string"
        description: "Protections package format."
        enum:
        - "snort"
      package-path:
        type: "string"
        description: "Protections package path."
    example:
      package-path: "package-path"
      package-format: "snort"
  AddWithPosition:
    type: "object"
    required:
    - "name"
    - "position"
    properties:
      name:
        type: "string"
        description: "Layer name or UID."
      position:
        type: "integer"
        description: "Layer position."
    example:
      name: "name"
      position: 0
  AddressRangeQueryReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      objects:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/AddressRangeStandardReply"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
    example:
      total: 1
      objects:
      - uid: "uid"
        ipv4-address-last: "ipv4-address-last"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        ipv6-address-last: "ipv6-address-last"
        name: "name"
        ipv6-address-first: "ipv6-address-first"
        type: "type"
        ipv4-address-first: "ipv4-address-first"
      - uid: "uid"
        ipv4-address-last: "ipv4-address-last"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        ipv6-address-last: "ipv6-address-last"
        name: "name"
        ipv6-address-first: "ipv6-address-first"
        type: "type"
        ipv4-address-first: "ipv4-address-first"
      from: 0
      to: 6
  AddressRangeReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      ipv4-address-first:
        type: "string"
        description: "First IPv4 address in the range."
      ipv4-address-last:
        type: "string"
        description: "Last IPv4 address in the range."
      ipv6-address-first:
        type: "string"
        description: "First IPv6 address in the range."
      ipv6-address-last:
        type: "string"
        description: "Last IPv6 address in the range."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      nat-settings:
        $ref: "#/definitions/NatSettingsReply"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      nat-settings:
        ipv4-address: "ipv4-address"
        method: "hide"
        hide-behind: "gateway"
        install-on: "install-on"
        auto-rule: true
        ipv6-address: "ipv6-address"
      comments: "comments"
      color: "aquamarine"
      ipv4-address-last: "ipv4-address-last"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      ipv6-address-last: "ipv6-address-last"
      name: "name"
      ipv6-address-first: "ipv6-address-first"
      read-only: true
      ipv4-address-first: "ipv4-address-first"
  AddressRangeRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      ip-address-first:
        type: "string"
        description: "First IP address in the range. If both IPv4 and IPv6 address\
          \ ranges are required, use the ipv4-address-first and the ipv6-address-first\
          \ fields instead."
      ip-address-last:
        type: "string"
        description: "Last IP address in the range. If both IPv4 and IPv6 address\
          \ ranges are required, use the ipv4-address-first and the ipv6-address-first\
          \ fields instead."
      ipv4-address-first:
        type: "string"
        description: "First IPv4 address in the range."
      ipv4-address-last:
        type: "string"
        description: "Last IPv4 address in the range."
      ipv6-address-first:
        type: "string"
        description: "First IPv6 address in the range."
      ipv6-address-last:
        type: "string"
        description: "Last IPv6 address in the range."
      name:
        type: "string"
        description: "Object name."
      nat-settings:
        $ref: "#/definitions/NatSettingsRequest"
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      nat-settings:
        ip-address: "ip-address"
        ipv4-address: "ipv4-address"
        method: "hide"
        hide-behind: "gateway"
        install-on: "install-on"
        auto-rule: false
        ipv6-address: "ipv6-address"
      comments: "comments"
      color: "black"
      ignore-warnings: false
      ipv4-address-last: "ipv4-address-last"
      groups:
        add: "add"
      new-name: "new-name"
      tags:
        add: "add"
      uid: "uid"
      ignore-errors: false
      ipv6-address-last: "ipv6-address-last"
      name: "name"
      ipv6-address-first: "ipv6-address-first"
      details-level: "standard"
      ip-address-first: "ip-address-first"
      ip-address-last: "ip-address-last"
      ipv4-address-first: "ipv4-address-first"
  AddressRangeRequestNew:
    type: "object"
    required:
    - "ip-address-first"
    - "ip-address-last"
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      ip-address-first:
        type: "string"
        description: "First IP address in the range. If both IPv4 and IPv6 address\
          \ ranges are required, use the ipv4-address-first and the ipv6-address-first\
          \ fields instead."
      ip-address-last:
        type: "string"
        description: "Last IP address in the range. If both IPv4 and IPv6 address\
          \ ranges are required, use the ipv4-address-first and the ipv6-address-first\
          \ fields instead."
      ipv4-address-first:
        type: "string"
        description: "First IPv4 address in the range."
      ipv4-address-last:
        type: "string"
        description: "Last IPv4 address in the range."
      ipv6-address-first:
        type: "string"
        description: "First IPv6 address in the range."
      ipv6-address-last:
        type: "string"
        description: "Last IPv6 address in the range."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      nat-settings:
        $ref: "#/definitions/NatSettingsRequest"
      set-if-exists:
        type: "boolean"
        description: "If another object with the same identifier already exists, it\
          \ will be updated. The command behaviour will be the same as if originally\
          \ a set command was called. Pay attention that original object's fields\
          \ will be overwritten by the fields provided in the request payload!"
        default: false
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      nat-settings:
        ip-address: "ip-address"
        ipv4-address: "ipv4-address"
        method: "hide"
        hide-behind: "gateway"
        install-on: "install-on"
        auto-rule: false
        ipv6-address: "ipv6-address"
      set-if-exists: false
      comments: "comments"
      color: "black"
      ignore-warnings: false
      ipv4-address-last: "ipv4-address-last"
      groups: "groups"
      tags: "tags"
      ignore-errors: false
      ipv6-address-last: "ipv6-address-last"
      name: "name"
      ipv6-address-first: "ipv6-address-first"
      details-level: "standard"
      ip-address-first: "ip-address-first"
      ip-address-last: "ip-address-last"
      ipv4-address-first: "ipv4-address-first"
  AddressRangeStandardReply:
    type: "object"
    properties:
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      ipv4-address-first:
        type: "string"
        description: "First IPv4 address in the range."
      ipv4-address-last:
        type: "string"
        description: "Last IPv4 address in the range."
      ipv6-address-first:
        type: "string"
        description: "First IPv6 address in the range."
      ipv6-address-last:
        type: "string"
        description: "Last IPv6 address in the range."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      ipv4-address-last: "ipv4-address-last"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      ipv6-address-last: "ipv6-address-last"
      name: "name"
      ipv6-address-first: "ipv6-address-first"
      type: "type"
      ipv4-address-first: "ipv4-address-first"
  AdministratorReply:
    type: "object"
    properties:
      authentication-method:
        type: "string"
        description: "Authentication method."
        enum:
        - "undefined"
        - "check point password"
        - "os password"
        - "securid"
        - "radius"
        - "tacacs"
        - "ad authentication"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      email:
        type: "string"
        description: "Administrator email."
      expiration-date:
        $ref: "#/definitions/ApiDateReply"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      multi-domain-profile:
        type: "array"
        description: "Administrator multi-domain profile. How much details are returned\
          \ depends on the details-level field of the request. This table shows the\
          \ level of detail shown when details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      must-change-password:
        type: "boolean"
        description: "True if administrator must change password on the next login."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      permissions-profile:
        type: "array"
        description: "Administrator permissions profile. How much details are returned\
          \ depends on the details-level field of the request. This table shows the\
          \ level of detail shown when details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      phone-number:
        type: "string"
        description: "Administrator phone number."
      radius-server:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      sic-name:
        type: "string"
        description: "Name of the Secure Internal Connection Trust."
      tacacs-server:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      phone-number: "phone-number"
      comments: "comments"
      color: "aquamarine"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      permissions-profile:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      multi-domain-profile:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      authentication-method: "undefined"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      radius-server:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      sic-name: "sic-name"
      tacacs-server:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      read-only: true
      must-change-password: true
      email: "email"
      expiration-date:
        iso-8601: "iso-8601"
        posix: 0
  AdministratorRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      authentication-method:
        type: "string"
        description: "Authentication method."
        enum:
        - "undefined"
        - "check point password"
        - "os password"
        - "securid"
        - "radius"
        - "tacacs"
        - "ad authentication"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      email:
        type: "string"
        description: "Administrator email."
      expiration-date:
        type: "string"
        description: "Format: YYYY-MM-DD, YYYY-mm-ddThh:mm:ss."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      multi-domain-profile:
        type: "string"
        description: "Administrator multi-domain profile."
      must-change-password:
        type: "boolean"
        description: "True if administrator must change password on the next login."
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      password:
        type: "string"
        description: "Administrator password."
      password-hash:
        type: "string"
        description: "Administrator password hash."
      permissions-profile:
        $ref: "#/definitions/add"
      phone-number:
        type: "string"
        description: "Administrator phone number."
      radius-server:
        type: "string"
        description: "RADIUS server object identified by the name or UID. Must be\
          \ set when \"authentication-method\" was selected to be \"RADIUS\"."
      tacacs-server:
        type: "string"
        description: "TACACS server object identified by the name or UID. Must be\
          \ set when \"authentication-method\" was selected to be \"TACACS\"."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      phone-number: "phone-number"
      comments: "comments"
      color: "black"
      password-hash: "password-hash"
      ignore-warnings: false
      permissions-profile:
        add: "add"
      multi-domain-profile: "multi-domain-profile"
      new-name: "new-name"
      tags:
        add: "add"
      uid: "uid"
      password: "password"
      ignore-errors: false
      authentication-method: "undefined"
      name: "name"
      radius-server: "radius-server"
      tacacs-server: "tacacs-server"
      details-level: "standard"
      must-change-password: true
      email: "email"
      expiration-date: "expiration-date"
  AdministratorRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      authentication-method:
        type: "string"
        description: "Authentication method."
        enum:
        - "undefined"
        - "check point password"
        - "os password"
        - "securid"
        - "radius"
        - "tacacs"
        - "ad authentication"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      email:
        type: "string"
        description: "Administrator email."
      expiration-date:
        type: "string"
        description: "Format: YYYY-MM-DD, YYYY-mm-ddThh:mm:ss."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      multi-domain-profile:
        type: "string"
        description: "Administrator multi-domain profile."
      must-change-password:
        type: "boolean"
        description: "True if administrator must change password on the next login."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      password:
        type: "string"
        description: "Administrator password."
      password-hash:
        type: "string"
        description: "Administrator password hash."
      permissions-profile:
        $ref: "#/definitions/PermissionsRoleRequest"
      phone-number:
        type: "string"
        description: "Administrator phone number."
      radius-server:
        type: "string"
        description: "RADIUS server object identified by the name or UID. Must be\
          \ set when \"authentication-method\" was selected to be \"RADIUS\"."
      tacacs-server:
        type: "string"
        description: "TACACS server object identified by the name or UID. Must be\
          \ set when \"authentication-method\" was selected to be \"TACACS\"."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      phone-number: "phone-number"
      comments: "comments"
      color: "black"
      password-hash: "password-hash"
      ignore-warnings: false
      permissions-profile:
        profile: "profile"
      multi-domain-profile: "multi-domain-profile"
      tags: "tags"
      password: "password"
      ignore-errors: false
      authentication-method: "undefined"
      name: "name"
      radius-server: "radius-server"
      tacacs-server: "tacacs-server"
      details-level: "standard"
      must-change-password: true
      email: "email"
      expiration-date: "expiration-date"
  AdvancedActionSettingsReply:
    type: "object"
    properties:
      enable-identity-captive-portal:
        type: "boolean"
        description: "N/A"
      limit:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
    description: "Action settings."
    example:
      enable-identity-captive-portal: true
      limit:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  AdvancedActionSettingsRequest:
    type: "object"
    properties:
      enable-identity-captive-portal:
        type: "boolean"
        description: "N/A"
      limit:
        type: "string"
        description: "N/A"
    description: "Action settings."
    example:
      enable-identity-captive-portal: true
      limit: "limit"
  AggressiveAgingReply:
    type: "object"
    properties:
      default-timeout:
        type: "integer"
        description: "Default aggressive aging timeout in seconds."
      enable:
        type: "boolean"
        description: "N/A"
      timeout:
        type: "integer"
        description: "Aggressive aging timeout in seconds."
      use-default-timeout:
        type: "boolean"
        description: "N/A"
    description: "Sets short (aggressive) timeouts for idle connections."
    example:
      enable: true
      default-timeout: 0
      use-default-timeout: true
      timeout: 6
  AggressiveAgingRequest:
    type: "object"
    properties:
      default-timeout:
        type: "integer"
        description: "Default aggressive aging timeout in seconds."
      enable:
        type: "boolean"
        description: "N/A"
      timeout:
        type: "integer"
        description: "Aggressive aging timeout in seconds."
      use-default-timeout:
        type: "boolean"
        description: "N/A"
    description: "Sets short (aggressive) timeouts for idle connections."
    example:
      enable: true
      default-timeout: 0
      use-default-timeout: true
      timeout: 6
  AllActivationsByProfileReply:
    type: "object"
    properties:
      default:
        $ref: "#/definitions/ActivationReply"
      final:
        $ref: "#/definitions/ActivationReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      override:
        $ref: "#/definitions/ActivationReply"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      default:
        action: "Inactive"
        track: "none"
        capture-packets: true
      final:
        action: "Inactive"
        track: "none"
        capture-packets: true
      name: "name"
      override:
        action: "Inactive"
        track: "none"
        capture-packets: true
  AllActivationsByProtectionReply:
    type: "object"
    properties:
      default:
        $ref: "#/definitions/ActivationReply"
      final:
        $ref: "#/definitions/ActivationReply"
      override:
        $ref: "#/definitions/ActivationReply"
      protection:
        type: "string"
        description: "IPS protection name."
      protection-uid:
        type: "string"
        description: "IPS protection unique identifier."
    example:
      default:
        action: "Inactive"
        track: "none"
        capture-packets: true
      protection-uid: "protection-uid"
      final:
        action: "Inactive"
        track: "none"
        capture-packets: true
      protection: "protection"
      override:
        action: "Inactive"
        track: "none"
        capture-packets: true
  AntiSpoofingSettingsReply:
    type: "object"
    properties:
      action:
        type: "string"
        description: "If packets will be rejected (the Prevent option) or whether\
          \ the packets will be monitored (the Detect option)."
        enum:
        - "prevent"
        - "detect"
    description: "N/A"
    example:
      action: "prevent"
  AntiSpoofingSettingsRequest:
    type: "object"
    properties:
      action:
        type: "string"
        description: "If packets will be rejected (the Prevent option) or whether\
          \ the packets will be monitored (the Detect option)."
        enum:
        - "prevent"
        - "detect"
    description: "N/A"
    example:
      action: "prevent"
  ApiDateReply:
    type: "object"
    properties:
      iso-8601:
        type: "string"
        description: "Date and time represented in international ISO 8601 format."
      posix:
        type: "integer"
        description: "Number of milliseconds that have elapsed since 00:00:00, 1 January\
          \ 1970."
    description: "Timestamp when administrator last accessed the management server."
    example:
      iso-8601: "iso-8601"
      posix: 0
  ApiDomainIdentifier:
    type: "object"
    properties:
      domain-type:
        type: "string"
        description: "Domain type."
        enum:
        - "mds"
        - "data domain"
        - "domain"
        - "global domain"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      uid:
        type: "string"
        description: "Object unique identifier."
    description: "Information about the domain the object belongs to."
    example:
      uid: "uid"
      domain-type: "mds"
      name: "name"
  ApiObjectStandardIdentifier:
    type: "object"
    properties:
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    description: "The imported management object (if exists). How much details are\
      \ returned depends on the details-level field of the request. This table shows\
      \ the level of detail shown when details-level is set to standard."
    example:
      uid: "uid"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      type: "type"
  ApiOkReply:
    type: "object"
    properties:
      message:
        type: "string"
        description: "Operation status."
    example:
      message: "message"
  ApiPlaceHolderIdentifierRequest:
    type: "object"
    required:
    - "uid"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      details-level: "standard"
  ApiPlaceHolderReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "aquamarine"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      name: "name"
      read-only: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  ApiQueryObjectReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      objects:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
    example:
      total: 1
      objects:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      from: 0
      to: 6
  ApiQueryOrderRequest:
    type: "object"
    properties:
      ASC:
        type: "string"
        description: "Sorts results by the given field in ascending order."
        enum:
        - "name"
      DESC:
        type: "string"
        description: "Sorts results by the given field in descending order."
        enum:
        - "name"
    example:
      ASC: "name"
      DESC: "name"
  ApiQueryRequest:
    type: "object"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      limit:
        type: "integer"
        description: "No more than that many results will be returned."
      offset:
        type: "integer"
        description: "Skip that many results before beginning to return them."
      order:
        type: "array"
        description: "Sorts results by the given field. By default the results are\
          \ sorted in the ascending order by name."
        items:
          $ref: "#/definitions/ApiQueryOrderRequest"
    example:
      offset: 6
      limit: 0
      details-level: "standard"
      order:
      - ASC: "name"
        DESC: "name"
      - ASC: "name"
        DESC: "name"
  ApiRulebaseFilterSettingsRequest:
    type: "object"
    properties:
      packet-search-settings:
        $ref: "#/definitions/ApiRulebaseFilterSettingsRequestPacketSearchSettings"
      search-mode:
        type: "string"
        description: "When set to 'general', both the Full Text Search and Packet\
          \ Search are enabled. In this mode, Packet Search will not match on 'Any'\
          \ object, a negated cell or a group-with-exclusion. When the search-mode\
          \ is set to 'packet', by default, the match on 'Any' object, a negated cell\
          \ or a group-with-exclusion are enabled. packet-search-settings may be provided\
          \ to change the default behavior."
        default: "general"
        enum:
        - "general"
        - "packet"
    description: "Sets filter preferences."
    example:
      search-mode: "general"
      packet-search-settings:
        expand-group-members: false
        expand-group-with-exclusion-members: false
        match-on-group-with-exclusion: true
        match-on-negate: true
        match-on-any: true
  ApiRulebaseFilterSettingsRequestPacketSearchSettings:
    type: "object"
    properties:
      expand-group-members:
        type: "boolean"
        description: "When true, if the search expression contains a UID or a name\
          \ of a group object, results will include rules that match on at least one\
          \ member of the group."
        default: false
      expand-group-with-exclusion-members:
        type: "boolean"
        description: "When true, if the search expression contains a UID or a name\
          \ of a group-with-exclusion object, results will include rules that match\
          \ at least one member of the \"include\" part and is not a member of the\
          \ \"except\" part."
        default: false
      match-on-any:
        type: "boolean"
        description: "Whether to match on 'Any' object."
        default: true
      match-on-group-with-exclusion:
        type: "boolean"
        description: "Whether to match on a group-with-exclusion."
        default: true
      match-on-negate:
        type: "boolean"
        description: "Whether to match on a negated cell."
        default: true
    description: "When 'search-mode' is set to 'packet', this object allows to set\
      \ the packet search preferences."
    example:
      expand-group-members: false
      expand-group-with-exclusion-members: false
      match-on-group-with-exclusion: true
      match-on-negate: true
      match-on-any: true
  ApiServerSettingsReply:
    type: "object"
    properties:
      accepted-api-calls-from:
        type: "string"
        description: "Clients allowed to connect to the API Server."
        enum:
        - "management server only"
        - "all ip addresses that can be used for gui clients"
        - "all ip addresses"
      automatic-start:
        type: "boolean"
        description: "MGMT API will start after server will start."
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "aquamarine"
      automatic-start: true
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      name: "name"
      accepted-api-calls-from: "management server only"
      read-only: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  ApiServerSettingsRequestEdit:
    type: "object"
    properties:
      accepted-api-calls-from:
        type: "string"
        description: "Clients allowed to connect to the API Server."
        enum:
        - "management server only"
        - "all ip addresses that can be used for gui clients"
        - "all ip addresses"
      automatic-start:
        type: "boolean"
        description: "MGMT API will start after server will start."
    example:
      automatic-start: true
      accepted-api-calls-from: "management server only"
  ApiServerSettingsRequestShow:
    type: "object"
  ApiTaskReply:
    type: "object"
    properties:
      task-id:
        type: "string"
        description: "Asynchronous task unique identifier."
    example:
      task-id: "task-id"
  ApiTasksReply:
    type: "object"
    properties:
      tasks:
        type: "array"
        description: "Asynchronous task unique identifiers."
        items:
          type: "string"
    example:
      tasks:
      - "tasks"
      - "tasks"
  ApiValidationErrorReply:
    type: "object"
    properties:
      blocking-errors:
        type: "array"
        description: "Blocking validation errors."
        items:
          $ref: "#/definitions/ValidationIncidentReply"
      code:
        type: "string"
        description: "Error code."
        enum:
        - "generic_error"
        - "generic_err_invalid_syntax"
        - "generic_err_invalid_parameter_name"
        - "not_implemented"
        - "generic_internal_error"
        - "generic_server_error"
        - "generic_server_initializing"
        - "generic_err_command_not_found"
        - "generic_err_command_version_not_found"
        - "generic_err_invalid_api_type"
        - "generic_err_invalid_api_object_feature"
        - "generic_err_missing_required_parameters"
        - "generic_err_missing_required_header"
        - "generic_err_invalid_header"
        - "generic_err_invalid_parameter"
        - "generic_err_normalize"
        - "err_bad_url"
        - "err_unknown_api_version"
        - "err_login_failed_wrong_username_or_password"
        - "err_login_failed_more_than_one_opened_session"
        - "err_login_failed"
        - "err_normalization_failed"
        - "err_validation_failed"
        - "err_publish_failed"
        - "generic_err_missing_session_id"
        - "generic_err_wrong_session_id"
        - "generic_err_session_expired"
        - "generic_err_session_in_use"
        - "err_switch_session_failed"
        - "err_assign_session_failed"
        - "err_take_over_session_failed"
        - "generic_err_no_permissions"
        - "err_forbidden"
        - "err_not_a_system_domain_session"
        - "err_inappropriate_domain_type"
        - "generic_err_object_not_found"
        - "generic_err_object_field_not_unique"
        - "generic_err_object_type_wrong"
        - "generic_err_object_locked"
        - "generic_err_object_deletion"
        - "err_policy_installation_failed"
        - "err_rulebase_invalid_operation"
      errors:
        type: "array"
        description: "Validation errors."
        items:
          $ref: "#/definitions/ValidationIncidentReply"
      message:
        type: "string"
        description: "Operation status."
      warnings:
        type: "array"
        description: "Validation warnings."
        items:
          $ref: "#/definitions/ValidationIncidentReply"
  ApiVersionsReply:
    type: "object"
    properties:
      current-version:
        type: "string"
        description: "N/A"
      supported-versions:
        type: "array"
        description: "N/A"
        items:
          type: "string"
    example:
      current-version: "current-version"
      supported-versions:
      - "supported-versions"
      - "supported-versions"
  ApiVisualCPObjectIdentifierRequestDelete:
    type: "object"
    required:
    - "uid"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name."
      uid:
        type: "string"
        description: "Object unique identifier."
  ApiVisualCPObjectIdentifierRequestShow:
    type: "object"
    required:
    - "uid"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      name:
        type: "string"
        description: "Object name."
      uid:
        type: "string"
        description: "Object unique identifier."
  ApplicationSiteCategoryReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      description:
        type: "string"
        description: "N/A"
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
      user-defined:
        type: "boolean"
        description: "True if application site category was defined by user (not predefined\
          \ one)."
    example:
      comments: "comments"
      color: "aquamarine"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      description: "description"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      user-defined: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      read-only: true
  ApplicationSiteCategoryRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      description:
        type: "string"
        description: "N/A"
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      description: "description"
      groups:
        add: "add"
      details-level: "standard"
      new-name: "new-name"
      tags:
        add: "add"
  ApplicationSiteCategoryRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      description:
        type: "string"
        description: "N/A"
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      description: "description"
      groups: "groups"
      details-level: "standard"
      tags: "tags"
  ApplicationSiteGroupReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      members:
        type: "array"
        description: "Collection of application and URL filtering objects identified\
          \ by the name or UID. How much details are returned depends on the details-level\
          \ field of the request. This table shows the level of detail shown when\
          \ details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "aquamarine"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      members:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      name: "name"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      read-only: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  ApplicationSiteGroupRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      members:
        $ref: "#/definitions/add"
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      members:
        add: "add"
      name: "name"
      groups:
        add: "add"
      details-level: "standard"
      new-name: "new-name"
      tags:
        add: "add"
  ApplicationSiteGroupRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      members:
        type: "string"
        description: "Collection of application and URL filtering objects identified\
          \ by the name or UID."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      members: "members"
      name: "name"
      groups: "groups"
      details-level: "standard"
      tags: "tags"
  ApplicationSiteIdentifierRequestShow:
    type: "object"
    required:
    - "uid"
    properties:
      application-id:
        type: "string"
        description: "Object application identifier."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      name:
        type: "string"
        description: "Object name."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      name: "name"
      details-level: "standard"
      application-id: "application-id"
  ApplicationSiteReply:
    type: "object"
    properties:
      additional-categories:
        type: "array"
        description: "N/A"
        items:
          type: "string"
      application-id:
        type: "integer"
        description: "N/A"
      application-signature:
        type: "string"
        description: "Application signature generated by <a href=\"https://supportcenter.checkpoint.com/supportcenter/portal?eventSubmit_doGoviewsolutiondetails=&solutionid=sk103051\"\
          >Signature Tool</a>."
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      description:
        type: "string"
        description: "N/A"
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      primary-category:
        type: "string"
        description: "N/A"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      risk:
        type: "string"
        description: "N/A"
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
      url-list:
        type: "array"
        description: "URLs that determine this particular application."
        items:
          type: "string"
      urls-defined-as-regular-expression:
        type: "boolean"
        description: "N/A"
      user-defined:
        type: "boolean"
        description: "True if this application site was defined by user (not predefined\
          \ one)."
    example:
      comments: "comments"
      color: "aquamarine"
      primary-category: "primary-category"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      description: "description"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      user-defined: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      url-list:
      - "url-list"
      - "url-list"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      risk: "risk"
      application-signature: "application-signature"
      additional-categories:
      - "additional-categories"
      - "additional-categories"
      read-only: true
      urls-defined-as-regular-expression: true
      application-id: 0
  ApplicationSiteRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      additional-categories:
        $ref: "#/definitions/add"
      application-signature:
        type: "string"
        description: "Application signature generated by <a href=\"https://supportcenter.checkpoint.com/supportcenter/portal?eventSubmit_doGoviewsolutiondetails=&solutionid=sk103051\"\
          >Signature Tool</a>."
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      description:
        type: "string"
        description: "A description for the application."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      primary-category:
        type: "string"
        description: "Each application is assigned to one primary category based on\
          \ its most defining aspect."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
      url-list:
        $ref: "#/definitions/add"
      urls-defined-as-regular-expression:
        type: "boolean"
        description: "States whether the URL is defined as a Regular Expression or\
          \ not."
    example:
      comments: "comments"
      color: "black"
      ignore-warnings: false
      primary-category: "primary-category"
      description: "description"
      groups:
        add: "add"
      new-name: "new-name"
      tags:
        add: "add"
      uid: "uid"
      ignore-errors: false
      url-list:
        add: "add"
      name: "name"
      application-signature: "application-signature"
      details-level: "standard"
      additional-categories:
        add: "add"
      urls-defined-as-regular-expression: true
  ApplicationSiteRequestNew:
    type: "object"
    required:
    - "name"
    - "primary-category"
    - "url-list"
    properties:
      additional-categories:
        type: "string"
        description: "Used to configure or edit the additional categories of a custom\
          \ application / site used in the Application and URL Filtering or Threat\
          \ Prevention."
      application-signature:
        type: "string"
        description: "Application signature generated by <a href=\"https://supportcenter.checkpoint.com/supportcenter/portal?eventSubmit_doGoviewsolutiondetails=&solutionid=sk103051\"\
          >Signature Tool</a>."
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      description:
        type: "string"
        description: "A description for the application."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      primary-category:
        type: "string"
        description: "Each application is assigned to one primary category based on\
          \ its most defining aspect."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
      url-list:
        type: "string"
        description: "URLs that determine this particular application."
      urls-defined-as-regular-expression:
        type: "boolean"
        description: "States whether the URL is defined as a Regular Expression or\
          \ not."
        default: false
    example:
      comments: "comments"
      color: "black"
      ignore-warnings: false
      primary-category: "primary-category"
      description: "description"
      groups: "groups"
      tags: "tags"
      ignore-errors: false
      url-list: "url-list"
      name: "name"
      application-signature: "application-signature"
      details-level: "standard"
      additional-categories: "additional-categories"
      urls-defined-as-regular-expression: false
  AssignGlobalPolicyReply:
    type: "object"
    properties:
      tasks:
        type: "array"
        description: "Asynchronous task unique identifiers."
        items:
          type: "string"
    example:
      tasks:
      - "tasks"
      - "tasks"
  AssignGlobalPolicyRequest:
    type: "object"
    properties:
      dependent-domains:
        type: "string"
        description: "N/A"
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      global-domains:
        type: "string"
        description: "N/A"
    example:
      global-domains: "global-domains"
      details-level: "standard"
      dependent-domains: "dependent-domains"
  AutoCompleteDataReply:
    type: "object"
    properties:
      description:
        type: "string"
        description: "N/A"
      name:
        type: "string"
        description: "N/A"
    example:
      name: "name"
      description: "description"
  AutoCompleteReply:
    type: "object"
    properties:
      data:
        type: "array"
        description: "N/A"
        items:
          $ref: "#/definitions/AutoCompleteDataReply"
    example:
      data:
      - name: "name"
        description: "description"
      - name: "name"
        description: "description"
  AutoCompleteRequest:
    type: "object"
    properties:
      cursor-position:
        type: "integer"
        description: "N/A"
      prefix:
        type: "string"
        description: "N/A"
    example:
      cursor-position: 0
      prefix: "prefix"
  BaseDomainServerReply:
    type: "object"
    properties:
      active:
        type: "boolean"
        description: "Domain server status."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      multi-domain-server:
        type: "string"
        description: "Multi Domain server name or UID."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      skip-start-domain-server:
        type: "boolean"
        description: "Set this value to be true to prevent starting the new created\
          \ domain."
      type:
        type: "string"
        description: "Domain server type."
        enum:
        - "management server"
        - "log server"
    example:
      multi-domain-server: "multi-domain-server"
      ipv4-address: "ipv4-address"
      name: "name"
      skip-start-domain-server: true
      active: true
      type: "management server"
      ipv6-address: "ipv6-address"
  CdmCommandReply:
    type: "object"
    properties:
      tasks:
        type: "array"
        description: "Asynchronous task unique identifiers."
        items:
          type: "string"
    example:
      tasks:
      - "tasks"
      - "tasks"
  CpmiReply:
    type: "object"
    properties:
      administrator-profile:
        type: "string"
        description: "A profile to set the log reading permissions by for the client\
          \ entity."
      enabled:
        type: "boolean"
        description: "N/A"
      use-administrator-credentials:
        type: "boolean"
        description: "Whether to use the Admin's credentials to login to the security\
          \ management server."
    description: "Used to setup the CPMI client entity."
    example:
      use-administrator-credentials: true
      administrator-profile: "administrator-profile"
      enabled: true
  CpmiRequest:
    type: "object"
    properties:
      administrator-profile:
        type: "string"
        description: "A profile to set the log reading permissions by for the client\
          \ entity."
        enum:
        - "read only all"
        - "read write all"
        - "super user"
      enabled:
        type: "boolean"
        description: "Whether to enable this client entity on the Opsec Application."
      use-administrator-credentials:
        type: "boolean"
        description: "Whether to use the Admin's credentials to login to the security\
          \ management server."
    description: "Used to setup the CPMI client entity."
    example:
      use-administrator-credentials: true
      administrator-profile: "read only all"
      enabled: true
  CustomFrequencySettings:
    type: "object"
    properties:
      every:
        type: "integer"
        description: "N/A"
      unit:
        type: "string"
        description: "N/A"
        enum:
        - "hours"
        - "days"
        - "weeks"
        - "months"
    description: "N/A"
    example:
      unit: "hours"
      every: 6
  CustomSummaryFieldsReply:
    type: "object"
    properties:
      field-1:
        type: "string"
        description: "First custom field."
      field-2:
        type: "string"
        description: "Second custom field."
      field-3:
        type: "string"
        description: "Third custom field."
    description: "Custom fields."
    example:
      field-1: "field-1"
      field-2: "field-2"
      field-3: "field-3"
  CustomSummaryFieldsRequest:
    type: "object"
    properties:
      field-1:
        type: "string"
        description: "First custom field."
      field-2:
        type: "string"
        description: "Second custom field."
      field-3:
        type: "string"
        description: "Third custom field."
    description: "Custom fields."
    example:
      field-1: "field-1"
      field-2: "field-2"
      field-3: "field-3"
  DataCenterContentObjectFilter:
    type: "object"
    properties:
      parent-uid-in-data-center:
        type: "string"
        description: "Return results under the specified Data Center Object (identified\
          \ by UID)."
      text:
        type: "string"
        description: "Return results containing the specified text value."
      uri:
        type: "string"
        description: "Return results under the specified Data Center Object (identified\
          \ by URI)."
    description: "Return results matching the specified filter."
    example:
      parent-uid-in-data-center: "parent-uid-in-data-center"
      text: "text"
      uri: "uri"
  DataCenterContentObjectReply:
    type: "object"
    properties:
      additional-properties:
        type: "array"
        description: "Additional properties on the object."
        items:
          $ref: "#/definitions/DataCenterObjectProperty"
      data-center-object:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      name:
        type: "string"
        description: "Object management name."
      name-in-data-center:
        type: "string"
        description: "Object name in the Data Center."
      type-in-data-center:
        type: "string"
        description: "Object type in Data Center."
      uid-in-data-center:
        type: "string"
        description: "Unique identifier of the object in the Data Center."
    example:
      uid-in-data-center: "uid-in-data-center"
      name-in-data-center: "name-in-data-center"
      name: "name"
      data-center-object:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      additional-properties:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
      type-in-data-center: "type-in-data-center"
  DataCenterContentQueryReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      objects:
        type: "array"
        description: "Remote objects views."
        items:
          $ref: "#/definitions/DataCenterContentObjectReply"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
    example:
      total: 1
      objects:
      - uid-in-data-center: "uid-in-data-center"
        name-in-data-center: "name-in-data-center"
        name: "name"
        data-center-object:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        additional-properties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        type-in-data-center: "type-in-data-center"
      - uid-in-data-center: "uid-in-data-center"
        name-in-data-center: "name-in-data-center"
        name: "name"
        data-center-object:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        additional-properties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        type-in-data-center: "type-in-data-center"
      from: 0
      to: 6
  DataCenterContentRequest:
    type: "object"
    required:
    - "data-center-name"
    properties:
      data-center-name:
        type: "string"
        description: "Name of the Data Center where to search for objects."
      data-center-uid:
        type: "string"
        description: "Unique identifier of the Data Center where to search for objects."
      details-level:
        type: "string"
        description: "Standard and Full description are the same."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      filter:
        $ref: "#/definitions/DataCenterContentObjectFilter"
      limit:
        type: "integer"
        description: "No more than that many results will be returned."
      offset:
        type: "integer"
        description: "Skip that many results before beginning to return them."
      order:
        type: "array"
        description: "Sorts results by the given field. By default the results are\
          \ sorted in the ascending order by name."
        items:
          $ref: "#/definitions/ApiQueryOrderRequest"
      uid-in-data-center:
        type: "string"
        description: "Return result matching the unique identifier of the object on\
          \ the Data Center."
    example:
      filter:
        parent-uid-in-data-center: "parent-uid-in-data-center"
        text: "text"
        uri: "uri"
      uid-in-data-center: "uid-in-data-center"
      data-center-name: "data-center-name"
      offset: 6
      limit: 0
      data-center-uid: "data-center-uid"
      details-level: "standard"
      order:
      - ASC: "name"
        DESC: "name"
      - ASC: "name"
        DESC: "name"
  DataCenterObjectProperty:
    type: "object"
    properties:
      name:
        type: "string"
        description: "N/A"
      value:
        type: "string"
        description: "N/A"
    example:
      name: "name"
      value: "value"
  DataCenterObjectReply:
    type: "object"
    properties:
      additional-properties:
        type: "array"
        description: "Additional properties on the object."
        items:
          $ref: "#/definitions/DataCenterObjectProperty"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      data-center:
        $ref: "#/definitions/DataCenterServerReply"
      data-center-object-meta-info:
        $ref: "#/definitions/RemoteDataCenterObjectMetaData"
      deleted:
        type: "boolean"
        description: "Indicates if the object is inaccessible or deleted on Data Center\
          \ Server."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object management name."
      name-in-data-center:
        type: "string"
        description: "Object name in the Data Center."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      type-in-data-center:
        type: "string"
        description: "Object type in Data Center."
      uid:
        type: "string"
        description: "Object unique identifier."
      uid-in-data-center:
        type: "string"
        description: "Unique identifier of the object in the Data Center."
    example:
      uid-in-data-center: "uid-in-data-center"
      comments: "comments"
      color: "aquamarine"
      name-in-data-center: "name-in-data-center"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      data-center-object-meta-info:
        updated-on-data-center:
          iso-8601: "iso-8601"
          posix: 0
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      data-center:
        uid: "uid"
        comments: "comments"
        color: "aquamarine"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        icon: "icon"
        meta-info:
          creator: "creator"
          last-modify-time:
            iso-8601: "iso-8601"
            posix: 0
          validation-state: "ok"
          creation-time:
            iso-8601: "iso-8601"
            posix: 0
          lock: "unlocked"
          last-modifier: "last-modifier"
        name: "name"
        data-center-type: "data-center-type"
        read-only: true
        type: "type"
        properties:
        - name: "name"
          value: "value"
        - name: "name"
          value: "value"
        tags:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
      uid: "uid"
      deleted: true
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      additional-properties:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
      read-only: true
      type-in-data-center: "type-in-data-center"
  DataCenterObjectRequestNew:
    type: "object"
    required:
    - "data-center-name"
    - "uri"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      data-center-name:
        type: "string"
        description: "Name of the Data Center the object is in."
      data-center-uid:
        type: "string"
        description: "Unique identifier of the Data Center the object is in."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "object"
        description: "Collection of group identifiers."
        properties: {}
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Override default name on data-center."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
      uid-in-data-center:
        type: "string"
        description: "Unique identifier of the object in the Data Center."
      uri:
        type: "string"
        description: "URI of the object in the Data Center."
    example:
      uid-in-data-center: "uid-in-data-center"
      comments: "comments"
      data-center-name: "data-center-name"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      groups: "{}"
      data-center-uid: "data-center-uid"
      details-level: "standard"
      uri: "uri"
      tags: "tags"
  DataCenterProperty:
    type: "object"
    properties:
      name:
        type: "string"
        description: "N/A"
      value:
        type: "string"
        description: "N/A"
    example:
      name: "name"
      value: "value"
  DataCenterServerReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      data-center-type:
        type: "string"
        description: "Data Center type."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      properties:
        type: "array"
        description: "Data Center properties."
        items:
          $ref: "#/definitions/DataCenterProperty"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    description: "The Data Center the object is on."
    example:
      uid: "uid"
      comments: "comments"
      color: "aquamarine"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      name: "name"
      data-center-type: "data-center-type"
      read-only: true
      type: "type"
      properties:
      - name: "name"
        value: "value"
      - name: "name"
        value: "value"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  DateReply:
    type: "object"
    properties:
      iso-8601:
        type: "string"
        description: "N/A"
      posix:
        type: "integer"
        description: "N/A"
    description: "Last update time from the Updatable Objects Repository."
    example:
      iso-8601: "iso-8601"
      posix: 0
  DayRecurrence:
    type: "object"
    properties:
      days:
        type: "array"
        description: "Valid on specific days. Multiple options, support range of days\
          \ in months. Example:[\"1\",\"3\",\"9-20\"]."
        items:
          type: "string"
      month:
        type: "string"
        description: "Valid on month. Example: \"1\", \"2\",\"12\",\"Any\"."
      pattern:
        type: "string"
        description: "Valid on \"Daily\", \"Weekly\", \"Monthly\" base."
      weekdays:
        type: "array"
        description: "Valid on weekdays. Example: \"Sun\", \"Mon\"...\"Sat\"."
        items:
          type: "string"
    description: "Days recurrence."
    example:
      month: "month"
      weekdays:
      - "weekdays"
      - "weekdays"
      pattern: "pattern"
      days:
      - "days"
      - "days"
  DcerpcServiceReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      interface-uuid:
        type: "string"
        description: "Network interface UUID."
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "aquamarine"
      keep-connections-open-after-policy-installation: true
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      interface-uuid: "interface-uuid"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      read-only: true
  DcerpcServiceRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      interface-uuid:
        type: "string"
        description: "Network interface UUID."
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      interface-uuid: "interface-uuid"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      keep-connections-open-after-policy-installation: true
      name: "name"
      groups:
        add: "add"
      details-level: "standard"
      new-name: "new-name"
      tags:
        add: "add"
  DcerpcServiceRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      interface-uuid:
        type: "string"
        description: "Network interface UUID."
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      set-if-exists:
        type: "boolean"
        description: "If another object with the same identifier already exists, it\
          \ will be updated. The command behaviour will be the same as if originally\
          \ a set command was called. Pay attention that original object's fields\
          \ will be overwritten by the fields provided in the request payload!"
        default: false
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      set-if-exists: false
      comments: "comments"
      interface-uuid: "interface-uuid"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      keep-connections-open-after-policy-installation: true
      name: "name"
      groups: "groups"
      details-level: "standard"
      tags: "tags"
  DeleteProtectionsRequest:
    type: "object"
    properties:
      package-format:
        type: "string"
        description: "Protections package format."
        enum:
        - "snort"
    example:
      package-format: "snort"
  DiffReplyTask:
    type: "object"
    properties:
      task-id:
        type: "string"
        description: "Diff task UID. Use show-task command to check the progress of\
          \ the task."
    example:
      task-id: "task-id"
  DiffRequest:
    type: "object"
    properties:
      dereference-group-members:
        type: "boolean"
        description: "Indicates whether to dereference \"members\" field by details\
          \ level for every object in reply."
        default: true
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      from-date:
        type: "string"
        description: "The date from which tracking changes is to be performed. ISO\
          \ 8601. If timezone isn't specified in the input, the Management server's\
          \ timezone is used."
      from-session:
        type: "string"
        description: "The session UID from which tracking changes is to be performed."
        default: "The session before to-session"
      limit:
        type: "integer"
        description: "Maximum number of sessions to analyze."
      offset:
        type: "integer"
        description: "Number of sessions to skip (beginning with from-session)."
      show-membership:
        type: "boolean"
        description: "Indicates whether to calculate and show \"groups\" field for\
          \ every object in reply."
        default: true
      to-date:
        type: "string"
        description: "The date until which tracking changes is to be performed. ISO\
          \ 8601. If timezone isn't specified in the input, the Management server's\
          \ timezone is used."
      to-session:
        type: "string"
        description: "The session UID until which tracking changes is to be performed."
        default: "The last published session"
    example:
      from-session: "The session before to-session"
      offset: 6
      to-date: "to-date"
      from-date: "from-date"
      limit: 0
      show-membership: true
      dereference-group-members: true
      details-level: "standard"
      to-session: "The last published session"
  DiscardReply:
    type: "object"
    properties:
      message:
        type: "string"
        description: "Operation status."
      number-of-discarded-changes:
        type: "integer"
        description: "Number of discarded changes."
    example:
      number-of-discarded-changes: 0
      message: "message"
  DiscardRequest:
    type: "object"
    properties:
      uid:
        type: "string"
        description: "Session unique identifier. Specify it to discard a different\
          \ session than the one you currently use."
    example:
      uid: "uid"
  DisconnectReply:
    type: "object"
    properties:
      message:
        type: "string"
        description: "Operation status."
    example:
      message: "message"
  DisconnectRequest:
    type: "object"
    required:
    - "uid"
    properties:
      discard:
        type: "boolean"
        description: "Discard all changes committed during the session."
        default: false
      uid:
        type: "string"
        description: "Session unique identifier."
    example:
      discard: false
      uid: "uid"
  DnsDomainReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      is-sub-domain:
        type: "boolean"
        description: "Whether to match sub-domains in addition to the domain itself."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "DNS domain name. Should always start with a '.' character. Should\
          \ be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "aquamarine"
      is-sub-domain: true
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      name: "name"
      read-only: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  DnsDomainRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      is-sub-domain:
        type: "boolean"
        description: "Whether to match sub-domains in addition to the domain itself."
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the DNS domain. Should always start with a '.' character.\
          \ Should be unique in the domain."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      is-sub-domain: true
      name: "name"
      details-level: "standard"
      new-name: "new-name"
      tags:
        add: "add"
  DnsDomainRequestNew:
    type: "object"
    required:
    - "is-sub-domain"
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      is-sub-domain:
        type: "boolean"
        description: "Whether to match sub-domains in addition to the domain itself."
      name:
        type: "string"
        description: "DNS domain name. Should always start with a '.' character. Should\
          \ be unique in the domain."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      is-sub-domain: true
      name: "name"
      details-level: "standard"
      tags: "tags"
  DynamicObjectReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "aquamarine"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      name: "name"
      read-only: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  DynamicObjectRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      details-level: "standard"
      new-name: "new-name"
      tags:
        add: "add"
  DynamicObjectRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      details-level: "standard"
      tags: "tags"
  EmptyRequest:
    type: "object"
  FirewallSettingsReply:
    type: "object"
    properties:
      auto-calculate-connections-hash-table-size-and-memory-pool:
        type: "boolean"
        description: "N/A"
      auto-maximum-limit-for-concurrent-connections:
        type: "boolean"
        description: "N/A"
      connections-hash-size:
        type: "integer"
        description: "N/A"
      maximum-limit-for-concurrent-connections:
        type: "integer"
        description: "N/A"
      maximum-memory-pool-size:
        type: "integer"
        description: "N/A"
      memory-pool-size:
        type: "integer"
        description: "N/A"
    description: "N/A"
    example:
      maximum-limit-for-concurrent-connections: 6
      auto-maximum-limit-for-concurrent-connections: true
      auto-calculate-connections-hash-table-size-and-memory-pool: true
      maximum-memory-pool-size: 1
      memory-pool-size: 5
      connections-hash-size: 0
  FirewallSettingsRequestEdit:
    type: "object"
    properties:
      auto-calculate-connections-hash-table-size-and-memory-pool:
        type: "boolean"
        description: "N/A"
      auto-maximum-limit-for-concurrent-connections:
        type: "boolean"
        description: "N/A"
      connections-hash-size:
        type: "integer"
        description: "N/A"
      maximum-limit-for-concurrent-connections:
        type: "integer"
        description: "N/A"
      maximum-memory-pool-size:
        type: "integer"
        description: "N/A"
      memory-pool-size:
        type: "integer"
        description: "N/A"
    description: "N/A"
    example:
      maximum-limit-for-concurrent-connections: 6
      auto-maximum-limit-for-concurrent-connections: true
      auto-calculate-connections-hash-table-size-and-memory-pool: true
      maximum-memory-pool-size: 1
      memory-pool-size: 5
      connections-hash-size: 0
  FirewallSettingsRequestNew:
    type: "object"
    properties:
      auto-calculate-connections-hash-table-size-and-memory-pool:
        type: "boolean"
        description: "N/A"
      auto-maximum-limit-for-concurrent-connections:
        type: "boolean"
        description: "N/A"
      connections-hash-size:
        type: "integer"
        description: "N/A"
      maximum-limit-for-concurrent-connections:
        type: "integer"
        description: "N/A"
      maximum-memory-pool-size:
        type: "integer"
        description: "N/A"
      memory-pool-size:
        type: "integer"
        description: "N/A"
    description: "N/A"
    example:
      maximum-limit-for-concurrent-connections: 6
      auto-maximum-limit-for-concurrent-connections: true
      auto-calculate-connections-hash-table-size-and-memory-pool: true
      maximum-memory-pool-size: 1
      memory-pool-size: 5
      connections-hash-size: 0
  GatewayCkpReply:
    type: "object"
    properties:
      anti-bot:
        type: "boolean"
        description: "Anti-Bot blade enabled."
      anti-virus:
        type: "boolean"
        description: "Anti-Virus blade enabled."
      application-control:
        type: "boolean"
        description: "Application Control blade enabled."
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      content-awareness:
        type: "boolean"
        description: "Content Awareness blade enabled."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      dynamic-ip:
        type: "boolean"
        description: "Dynamic IP address."
      firewall:
        type: "boolean"
        description: "Firewall blade enabled."
      firewall-settings:
        $ref: "#/definitions/FirewallSettingsReply"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      hardware:
        type: "string"
        description: "Gateway platform hardware type."
      icon:
        type: "string"
        description: "Object icon."
      interfaces:
        type: "array"
        description: "Network interfaces."
        items:
          $ref: "#/definitions/NetworkInterfaceReply"
      ips:
        type: "boolean"
        description: "Intrusion Prevention System blade enabled."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      logs-settings:
        $ref: "#/definitions/LogsSettingsReply"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      os-name:
        type: "string"
        description: "Gateway platform operating system."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      save-logs-locally:
        type: "boolean"
        description: "Save logs locally on the gateway."
      send-alerts-to-server:
        type: "array"
        description: "Server(s) to send alerts to."
        items:
          type: "string"
      send-logs-to-backup-server:
        type: "array"
        description: "Backup server(s) to send logs to."
        items:
          type: "string"
      send-logs-to-server:
        type: "array"
        description: "Servers(s) to send logs to."
        items:
          type: "string"
      sic-name:
        type: "string"
        description: "Secure Internal Communication name."
      sic-state:
        type: "string"
        description: "Secure Internal Communication state."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      threat-emulation:
        type: "boolean"
        description: "Threat Emulation blade enabled."
      threat-extraction:
        type: "boolean"
        description: "Threat Extraction blade enabled."
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
      url-filtering:
        type: "boolean"
        description: "URL Filtering blade enabled."
      version:
        type: "string"
        description: "Gateway platform version."
      vpn:
        type: "boolean"
        description: "VPN blade enabled."
      vpn-settings:
        $ref: "#/definitions/VpnSettingsReply"
    example:
      color: "aquamarine"
      content-awareness: true
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      send-logs-to-backup-server:
      - "send-logs-to-backup-server"
      - "send-logs-to-backup-server"
      type: "type"
      dynamic-ip: true
      save-logs-locally: true
      uid: "uid"
      anti-bot: true
      ipv4-address: "ipv4-address"
      send-alerts-to-server:
      - "send-alerts-to-server"
      - "send-alerts-to-server"
      url-filtering: true
      vpn-settings:
        maximum-concurrent-tunnels: 7
        maximum-concurrent-ike-negotiations: 6
      logs-settings:
        alert-when-free-disk-space-below-threshold: 7
        delete-when-free-disk-space-below-threshold: 4
        stop-logging-when-free-disk-space-below-threshold: 1
        delete-index-files-older-than-days: true
        reject-connections-when-free-disk-space-below-threshold: true
        before-delete-run-script: true
        stop-logging-when-free-disk-space-below: true
        forward-logs-to-log-server-schedule-name: "forward-logs-to-log-server-schedule-name"
        rotate-log-on-schedule: true
        alert-when-free-disk-space-below-type: "none"
        rotate-log-by-file-size: true
        rotate-log-schedule-name: "rotate-log-schedule-name"
        delete-index-files-when-index-size-above-threshold: 2
        before-delete-keep-logs-from-the-last-days-threshold: 9
        forward-logs-to-log-server-name: "forward-logs-to-log-server-name"
        alert-when-free-disk-space-below-metrics: "percent"
        delete-index-files-older-than-days-threshold: 3
        update-account-log-every: 1
        before-delete-run-script-command: "before-delete-run-script-command"
        forward-logs-to-log-server: true
        reserve-for-packet-capture-threshold: 7
        rotate-log-file-size-threshold: 1
        before-delete-keep-logs-from-the-last-days: true
        delete-when-free-disk-space-below-metrics: "percent"
        stop-logging-when-free-disk-space-below-metrics: "percent"
        turn-on-qos-logging: true
        delete-index-files-when-index-size-above: true
        alert-when-free-disk-space-below: true
        perform-log-rotate-before-log-forwarding: true
        delete-index-files-when-index-size-above-metrics: "percent"
        detect-new-citrix-ica-application-names: true
        reserve-for-packet-capture-metrics: "percent"
        delete-when-free-disk-space-below: true
      read-only: true
      send-logs-to-server:
      - "send-logs-to-server"
      - "send-logs-to-server"
      application-control: true
      hardware: "hardware"
      threat-emulation: true
      firewall-settings:
        maximum-limit-for-concurrent-connections: 6
        auto-maximum-limit-for-concurrent-connections: true
        auto-calculate-connections-hash-table-size-and-memory-pool: true
        maximum-memory-pool-size: 1
        memory-pool-size: 5
        connections-hash-size: 0
      interfaces:
      - ipv6-mask-length: 2
        comments: "comments"
        color: "aquamarine"
        ipv4-mask-length: 5
        topology: "automatic"
        icon: "icon"
        ipv6-address: "ipv6-address"
        security-zone: true
        ipv6-network-mask: "ipv6-network-mask"
        topology-settings:
          interface-leads-to-dmz: true
          specific-network: "specific-network"
          ip-address-behind-this-interface: "not defined"
        ipv4-address: "ipv4-address"
        topology-automatic-calculation: "external"
        anti-spoofing-settings:
          action: "prevent"
        name: "name"
        security-zone-settings:
          auto-calculated: true
          specific-zone: "specific-zone"
        ipv4-network-mask: "ipv4-network-mask"
        anti-spoofing: true
      - ipv6-mask-length: 2
        comments: "comments"
        color: "aquamarine"
        ipv4-mask-length: 5
        topology: "automatic"
        icon: "icon"
        ipv6-address: "ipv6-address"
        security-zone: true
        ipv6-network-mask: "ipv6-network-mask"
        topology-settings:
          interface-leads-to-dmz: true
          specific-network: "specific-network"
          ip-address-behind-this-interface: "not defined"
        ipv4-address: "ipv4-address"
        topology-automatic-calculation: "external"
        anti-spoofing-settings:
          action: "prevent"
        name: "name"
        security-zone-settings:
          auto-calculated: true
          specific-zone: "specific-zone"
        ipv4-network-mask: "ipv4-network-mask"
        anti-spoofing: true
      comments: "comments"
      sic-state: "sic-state"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      os-name: "os-name"
      ips: true
      version: "version"
      threat-extraction: true
      ipv6-address: "ipv6-address"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      firewall: true
      vpn: true
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      sic-name: "sic-name"
      anti-virus: true
  GatewayCkpRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      anti-bot:
        type: "boolean"
        description: "Anti-Bot blade enabled."
      anti-virus:
        type: "boolean"
        description: "Anti-Virus blade enabled."
      application-control:
        type: "boolean"
        description: "Application Control blade enabled."
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      content-awareness:
        type: "boolean"
        description: "Content Awareness blade enabled."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      firewall:
        type: "boolean"
        description: "Firewall blade enabled."
      firewall-settings:
        $ref: "#/definitions/FirewallSettingsRequestEdit"
      groups:
        $ref: "#/definitions/add"
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      interfaces:
        type: "array"
        description: "Network interfaces. When a gateway is updated with a new interfaces,\
          \ the existing interfaces are removed."
        items:
          $ref: "#/definitions/NetworkInterfaceRequestEdit"
      ip-address:
        type: "string"
        description: "IPv4 or IPv6 address. If both addresses are required use ipv4-address\
          \ and ipv6-address fields explicitly."
      ips:
        type: "boolean"
        description: "Intrusion Prevention System blade enabled."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      logs-settings:
        $ref: "#/definitions/LogsSettingsRequest"
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      one-time-password:
        type: "string"
        description: "N/A"
      os-name:
        type: "string"
        description: "Gateway platform operating system."
      save-logs-locally:
        type: "boolean"
        description: "Save logs locally on the gateway."
      send-alerts-to-server:
        $ref: "#/definitions/add"
      send-logs-to-backup-server:
        $ref: "#/definitions/add"
      send-logs-to-server:
        $ref: "#/definitions/add"
      tags:
        $ref: "#/definitions/add"
      threat-emulation:
        type: "boolean"
        description: "Threat Emulation blade enabled."
      threat-extraction:
        type: "boolean"
        description: "Threat Extraction blade enabled."
      uid:
        type: "string"
        description: "Object unique identifier."
      url-filtering:
        type: "boolean"
        description: "URL Filtering blade enabled."
      version:
        type: "string"
        description: "Gateway platform version."
      vpn:
        type: "boolean"
        description: "VPN blade enabled."
      vpn-settings:
        $ref: "#/definitions/VpnSettingsRequest"
    example:
      color: "black"
      content-awareness: true
      new-name: "new-name"
      send-logs-to-backup-server:
        add: "add"
      save-logs-locally: true
      uid: "uid"
      anti-bot: true
      ipv4-address: "ipv4-address"
      send-alerts-to-server:
        add: "add"
      url-filtering: true
      vpn-settings:
        maximum-concurrent-tunnels: 1
        maximum-concurrent-ike-negotiations: 1
      logs-settings:
        alert-when-free-disk-space-below-threshold: 5
        delete-when-free-disk-space-below-threshold: 3
        stop-logging-when-free-disk-space-below-threshold: 7
        delete-index-files-older-than-days: true
        free-disk-space-metrics: "mbytes"
        reject-connections-when-free-disk-space-below-threshold: true
        before-delete-run-script: true
        stop-logging-when-free-disk-space-below: true
        forward-logs-to-log-server-schedule-name: "forward-logs-to-log-server-schedule-name"
        rotate-log-on-schedule: true
        alert-when-free-disk-space-below-type: "none"
        rotate-log-by-file-size: true
        rotate-log-schedule-name: "rotate-log-schedule-name"
        delete-index-files-when-index-size-above-threshold: 9
        before-delete-keep-logs-from-the-last-days-threshold: 2
        forward-logs-to-log-server-name: "forward-logs-to-log-server-name"
        delete-index-files-older-than-days-threshold: 7
        update-account-log-every: 1
        before-delete-run-script-command: "before-delete-run-script-command"
        forward-logs-to-log-server: true
        reserve-for-packet-capture-threshold: 2
        rotate-log-file-size-threshold: 4
        before-delete-keep-logs-from-the-last-days: true
        turn-on-qos-logging: true
        delete-index-files-when-index-size-above: true
        alert-when-free-disk-space-below: true
        perform-log-rotate-before-log-forwarding: true
        detect-new-citrix-ica-application-names: true
        reserve-for-packet-capture-metrics: "percent"
        delete-when-free-disk-space-below: true
      details-level: "standard"
      send-logs-to-server:
        add: "add"
      application-control: true
      threat-emulation: true
      firewall-settings:
        maximum-limit-for-concurrent-connections: 6
        auto-maximum-limit-for-concurrent-connections: true
        auto-calculate-connections-hash-table-size-and-memory-pool: true
        maximum-memory-pool-size: 1
        memory-pool-size: 5
        connections-hash-size: 0
      interfaces:
      - ipv6-mask-length: "ipv6-mask-length"
        comments: "comments"
        color: "black"
        ipv4-mask-length: "ipv4-mask-length"
        ignore-warnings: false
        topology: "automatic"
        new-name: "new-name"
        ipv6-address: "ipv6-address"
        tags: "{}"
        security-zone: true
        mask-length: "mask-length"
        uid: "uid"
        ip-address: "ip-address"
        ipv6-network-mask: "ipv6-network-mask"
        topology-settings:
          interface-leads-to-dmz: true
          specific-network: "specific-network"
          ip-address-behind-this-interface: "not defined"
        ignore-errors: false
        ipv4-address: "ipv4-address"
        anti-spoofing-settings:
          action: "prevent"
        name: "name"
        network-mask: "network-mask"
        security-zone-settings:
          auto-calculated: true
          specific-zone: "specific-zone"
        details-level: "standard"
        ipv4-network-mask: "ipv4-network-mask"
        anti-spoofing: true
      - ipv6-mask-length: "ipv6-mask-length"
        comments: "comments"
        color: "black"
        ipv4-mask-length: "ipv4-mask-length"
        ignore-warnings: false
        topology: "automatic"
        new-name: "new-name"
        ipv6-address: "ipv6-address"
        tags: "{}"
        security-zone: true
        mask-length: "mask-length"
        uid: "uid"
        ip-address: "ip-address"
        ipv6-network-mask: "ipv6-network-mask"
        topology-settings:
          interface-leads-to-dmz: true
          specific-network: "specific-network"
          ip-address-behind-this-interface: "not defined"
        ignore-errors: false
        ipv4-address: "ipv4-address"
        anti-spoofing-settings:
          action: "prevent"
        name: "name"
        network-mask: "network-mask"
        security-zone-settings:
          auto-calculated: true
          specific-zone: "specific-zone"
        details-level: "standard"
        ipv4-network-mask: "ipv4-network-mask"
        anti-spoofing: true
      comments: "comments"
      ignore-warnings: false
      groups:
        add: "add"
      os-name: "os-name"
      ips: true
      version: "version"
      threat-extraction: true
      ipv6-address: "ipv6-address"
      tags:
        add: "add"
      ip-address: "ip-address"
      firewall: true
      vpn: true
      name: "name"
      one-time-password: "one-time-password"
      anti-virus: true
  GatewayCkpRequestNew:
    type: "object"
    required:
    - "ip-address"
    - "name"
    properties:
      anti-bot:
        type: "boolean"
        description: "Anti-Bot blade enabled."
      anti-virus:
        type: "boolean"
        description: "Anti-Virus blade enabled."
      application-control:
        type: "boolean"
        description: "Application Control blade enabled."
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      content-awareness:
        type: "boolean"
        description: "Content Awareness blade enabled."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      firewall:
        type: "boolean"
        description: "Firewall blade enabled."
      firewall-settings:
        $ref: "#/definitions/FirewallSettingsRequestNew"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      interfaces:
        type: "array"
        description: "Network interfaces."
        items:
          $ref: "#/definitions/NetworkInterfaceRequestNew"
      ip-address:
        type: "string"
        description: "IPv4 or IPv6 address. If both addresses are required use ipv4-address\
          \ and ipv6-address fields explicitly."
      ips:
        type: "boolean"
        description: "Intrusion Prevention System blade enabled."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      logs-settings:
        $ref: "#/definitions/LogsSettingsRequest"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      one-time-password:
        type: "string"
        description: "N/A"
      os-name:
        type: "string"
        description: "Gateway platform operating system."
      save-logs-locally:
        type: "boolean"
        description: "Save logs locally on the gateway."
      send-alerts-to-server:
        type: "string"
        description: "Server(s) to send alerts to."
      send-logs-to-backup-server:
        type: "string"
        description: "Backup server(s) to send logs to."
      send-logs-to-server:
        type: "string"
        description: "Server(s) to send logs to."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
      threat-emulation:
        type: "boolean"
        description: "Threat Emulation blade enabled."
      threat-extraction:
        type: "boolean"
        description: "Threat Extraction blade enabled."
      url-filtering:
        type: "boolean"
        description: "URL Filtering blade enabled."
      version:
        type: "string"
        description: "Gateway platform version."
      vpn:
        type: "boolean"
        description: "VPN blade enabled."
      vpn-settings:
        $ref: "#/definitions/VpnSettingsRequest"
    example:
      color: "black"
      content-awareness: true
      send-logs-to-backup-server: "send-logs-to-backup-server"
      save-logs-locally: true
      anti-bot: true
      ipv4-address: "ipv4-address"
      send-alerts-to-server: "send-alerts-to-server"
      url-filtering: true
      vpn-settings:
        maximum-concurrent-tunnels: 1
        maximum-concurrent-ike-negotiations: 1
      logs-settings:
        alert-when-free-disk-space-below-threshold: 5
        delete-when-free-disk-space-below-threshold: 3
        stop-logging-when-free-disk-space-below-threshold: 7
        delete-index-files-older-than-days: true
        free-disk-space-metrics: "mbytes"
        reject-connections-when-free-disk-space-below-threshold: true
        before-delete-run-script: true
        stop-logging-when-free-disk-space-below: true
        forward-logs-to-log-server-schedule-name: "forward-logs-to-log-server-schedule-name"
        rotate-log-on-schedule: true
        alert-when-free-disk-space-below-type: "none"
        rotate-log-by-file-size: true
        rotate-log-schedule-name: "rotate-log-schedule-name"
        delete-index-files-when-index-size-above-threshold: 9
        before-delete-keep-logs-from-the-last-days-threshold: 2
        forward-logs-to-log-server-name: "forward-logs-to-log-server-name"
        delete-index-files-older-than-days-threshold: 7
        update-account-log-every: 1
        before-delete-run-script-command: "before-delete-run-script-command"
        forward-logs-to-log-server: true
        reserve-for-packet-capture-threshold: 2
        rotate-log-file-size-threshold: 4
        before-delete-keep-logs-from-the-last-days: true
        turn-on-qos-logging: true
        delete-index-files-when-index-size-above: true
        alert-when-free-disk-space-below: true
        perform-log-rotate-before-log-forwarding: true
        detect-new-citrix-ica-application-names: true
        reserve-for-packet-capture-metrics: "percent"
        delete-when-free-disk-space-below: true
      details-level: "standard"
      send-logs-to-server: "send-logs-to-server"
      application-control: true
      threat-emulation: true
      firewall-settings:
        maximum-limit-for-concurrent-connections: 6
        auto-maximum-limit-for-concurrent-connections: true
        auto-calculate-connections-hash-table-size-and-memory-pool: true
        maximum-memory-pool-size: 1
        memory-pool-size: 5
        connections-hash-size: 0
      interfaces:
      - ipv6-mask-length: "ipv6-mask-length"
        comments: "comments"
        color: "black"
        ipv4-mask-length: "ipv4-mask-length"
        ignore-warnings: false
        topology: "automatic"
        ipv6-address: "ipv6-address"
        tags: "{}"
        security-zone: false
        mask-length: "mask-length"
        ip-address: "ip-address"
        ipv6-network-mask: "ipv6-network-mask"
        topology-settings:
          interface-leads-to-dmz: true
          specific-network: "specific-network"
          ip-address-behind-this-interface: "not defined"
        ignore-errors: false
        ipv4-address: "ipv4-address"
        anti-spoofing-settings:
          action: "prevent"
        name: "name"
        network-mask: "network-mask"
        security-zone-settings:
          auto-calculated: true
          specific-zone: "specific-zone"
        details-level: "standard"
        ipv4-network-mask: "ipv4-network-mask"
        anti-spoofing: true
      - ipv6-mask-length: "ipv6-mask-length"
        comments: "comments"
        color: "black"
        ipv4-mask-length: "ipv4-mask-length"
        ignore-warnings: false
        topology: "automatic"
        ipv6-address: "ipv6-address"
        tags: "{}"
        security-zone: false
        mask-length: "mask-length"
        ip-address: "ip-address"
        ipv6-network-mask: "ipv6-network-mask"
        topology-settings:
          interface-leads-to-dmz: true
          specific-network: "specific-network"
          ip-address-behind-this-interface: "not defined"
        ignore-errors: false
        ipv4-address: "ipv4-address"
        anti-spoofing-settings:
          action: "prevent"
        name: "name"
        network-mask: "network-mask"
        security-zone-settings:
          auto-calculated: true
          specific-zone: "specific-zone"
        details-level: "standard"
        ipv4-network-mask: "ipv4-network-mask"
        anti-spoofing: true
      comments: "comments"
      ignore-warnings: false
      groups: "groups"
      os-name: "os-name"
      ips: true
      version: "version"
      threat-extraction: true
      ipv6-address: "ipv6-address"
      tags: "tags"
      ip-address: "ip-address"
      firewall: true
      vpn: true
      name: "name"
      one-time-password: "one-time-password"
      anti-virus: true
  GatewayServerInterfaceReply:
    type: "object"
    properties:
      dynamic-ip:
        type: "boolean"
        description: "Gets true if IP address was assigned by the DHCP server."
      interface-name:
        type: "string"
        description: "Interface name."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv4-mask-length:
        type: "integer"
        description: "IPv4 network mask length."
      ipv4-network-mask:
        type: "string"
        description: "IPv4 network mask."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      ipv6-mask-length:
        type: "integer"
        description: "IPv6 network mask length."
      ipv6-network-mask:
        type: "string"
        description: "IPv6 network mask."
      topology:
        $ref: "#/definitions/GatewayServerInterfaceTopologyReply"
    example:
      ipv6-mask-length: 1
      ipv6-network-mask: "ipv6-network-mask"
      ipv4-address: "ipv4-address"
      ipv4-mask-length: 6
      topology:
        security-zone:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        leads-to-specific-network:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        leads-to-dmz: true
        ip-address-behind-this-interface: "not defined"
        leads-to-internet: true
      interface-name: "interface-name"
      ipv4-network-mask: "ipv4-network-mask"
      dynamic-ip: true
      ipv6-address: "ipv6-address"
  GatewayServerInterfaceTopologyReply:
    type: "object"
    properties:
      ip-address-behind-this-interface:
        type: "string"
        description: "If the interface is internal, this field specifies to which\
          \ network it leads."
        enum:
        - "not defined"
        - "network defined by the interface ip and net mask"
        - "specific"
      leads-to-dmz:
        type: "boolean"
        description: "Gets true if the interface leads to DMZ."
      leads-to-internet:
        type: "boolean"
        description: "Gets true if the interface is external."
      leads-to-specific-network:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      security-zone:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
    description: "Interface topology."
    example:
      security-zone:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      leads-to-specific-network:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      leads-to-dmz: true
      ip-address-behind-this-interface: "not defined"
      leads-to-internet: true
  GatewayServerManagementBladesReply:
    type: "object"
    properties:
      compliance:
        type: "boolean"
        description: "Compliance blade."
      endpoint-policy:
        type: "boolean"
        description: "Endpoint policy blade."
      identity-awareness:
        type: "boolean"
        description: "Identity awareness blade."
      identity-logging:
        type: "boolean"
        description: "Identity logging blade."
      logging-and-status:
        type: "boolean"
        description: "Logging & Status blade."
      monitoring:
        type: "boolean"
        description: "Monitoring blade."
      network-policy-management:
        type: "boolean"
        description: "Network policy management blade."
      secondary:
        type: "boolean"
        description: "Secondary blade."
      smart-event-correlation:
        type: "boolean"
        description: "SmartEvent correlation blade."
      smart-event-server:
        type: "boolean"
        description: "SmartEvent server blade."
    description: "Management blades."
    example:
      secondary: true
      identity-awareness: true
      logging-and-status: true
      compliance: true
      smart-event-server: true
      endpoint-policy: true
      network-policy-management: true
      monitoring: true
      identity-logging: true
      smart-event-correlation: true
  GatewayServerNetworkBladesReply:
    type: "object"
    properties:
      anti-bot:
        type: "boolean"
        description: "Anti-Bot blade."
      anti-spam:
        type: "boolean"
        description: "Anti-Spam & Email Security blade."
      anti-virus:
        type: "boolean"
        description: "Anti-Virus blade."
      application-control:
        type: "boolean"
        description: "Application control blade."
      content-awareness:
        type: "boolean"
        description: "Content awareness blade."
      data-loss-prevention:
        type: "boolean"
        description: "Data loss prevention blade."
      firewall:
        type: "boolean"
        description: "Firewall blade."
      identity-awareness:
        type: "boolean"
        description: "Identity awareness blade."
      ips:
        type: "boolean"
        description: "IPS blade."
      mobile-access:
        type: "boolean"
        description: "Mobile access blade."
      monitoring:
        type: "boolean"
        description: "Monitoring blade."
      qos:
        type: "boolean"
        description: "QoS blade."
      site-to-site-vpn:
        type: "boolean"
        description: "Site to site VPN blade."
      threat-emulation:
        type: "boolean"
        description: "Threat emulation blade."
      threat-extraction:
        type: "boolean"
        description: "Threat extraction blade."
      traditional-anti-virus:
        type: "boolean"
        description: "Traditional Anti-Virus blade."
      url-filtering:
        type: "boolean"
        description: "URL filtering blade."
    description: "Network security blades."
    example:
      identity-awareness: true
      site-to-site-vpn: true
      traditional-anti-virus: true
      content-awareness: true
      anti-spam: true
      monitoring: true
      ips: true
      threat-extraction: true
      anti-bot: true
      qos: true
      firewall: true
      url-filtering: true
      application-control: true
      anti-virus: true
      data-loss-prevention: true
      mobile-access: true
      threat-emulation: true
  GatewayServerPolicyReply:
    type: "object"
    properties:
      access-policy-installation-date:
        $ref: "#/definitions/ApiDateReply"
      access-policy-installed:
        type: "boolean"
        description: "Gets true if access-policy was installed."
      access-policy-name:
        type: "string"
        description: "Name of the access-policy."
      access-policy-revision:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      cluster-members-access-policy-revision:
        type: "array"
        description: "Revisions of the access policy installed on each cluster member."
        items:
          $ref: "#/definitions/GatewayServerPolicyReplyClusterMemberReply"
      cluster-members-threat-policy-revision:
        type: "array"
        description: "Revisions of the threat policy installed on each cluster member."
        items:
          $ref: "#/definitions/GatewayServerPolicyReplyClusterMemberReply"
      threat-policy-installation-date:
        $ref: "#/definitions/ApiDateReply"
      threat-policy-installed:
        type: "boolean"
        description: "Gets true if threat-policy was installed."
      threat-policy-name:
        type: "string"
        description: "Name of the threat-policy."
      threat-policy-revision:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
    description: "Installed policy package."
    example:
      access-policy-revision:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      cluster-members-access-policy-revision:
      - uid: "uid"
        policy-name: "policy-name"
        name: "name"
        revision:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
      - uid: "uid"
        policy-name: "policy-name"
        name: "name"
        revision:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
      threat-policy-name: "threat-policy-name"
      access-policy-installation-date:
        iso-8601: "iso-8601"
        posix: 0
      access-policy-name: "access-policy-name"
      threat-policy-revision:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      access-policy-installed: true
      threat-policy-installation-date:
        iso-8601: "iso-8601"
        posix: 0
      cluster-members-threat-policy-revision:
      - uid: "uid"
        policy-name: "policy-name"
        name: "name"
        revision:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
      - uid: "uid"
        policy-name: "policy-name"
        name: "name"
        revision:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
      threat-policy-installed: true
  GatewayServerPolicyReplyClusterMemberReply:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Cluster member name."
      policy-name:
        type: "string"
        description: "The name of the installed policy."
      revision:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      uid:
        type: "string"
        description: "Cluster member unique identifier."
    example:
      uid: "uid"
      policy-name: "policy-name"
      name: "name"
      revision:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  GatewayServerReply:
    type: "object"
    properties:
      cluster-member-names:
        type: "array"
        description: "Names of cluster members."
        items:
          type: "string"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      hardware:
        type: "string"
        description: "Appliance type."
      icon:
        type: "string"
        description: "Object icon."
      interfaces:
        type: "array"
        description: "Network interfaces."
        items:
          $ref: "#/definitions/GatewayServerInterfaceReply"
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      management-blades:
        $ref: "#/definitions/GatewayServerManagementBladesReply"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      network-security-blades:
        $ref: "#/definitions/GatewayServerNetworkBladesReply"
      operating-system:
        type: "string"
        description: "Operating System."
      policy:
        $ref: "#/definitions/GatewayServerPolicyReply"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      sic-status:
        type: "string"
        description: "Secure Internal Communication status."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID."
        items:
          type: "string"
      type:
        type: "string"
        description: "Object type."
      uid:
        type: "string"
        description: "Object unique identifier."
      version:
        type: "string"
        description: "Version."
      vpn-encryption-domain:
        type: "string"
        description: "VPN domain."
        enum:
        - "manual"
        - "addresses_behind_gw"
        - "ranges"
        - "addresses_behind_nat"
      vpn-encryption-domain-manually-defined:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
    example:
      interfaces:
      - ipv6-mask-length: 1
        ipv6-network-mask: "ipv6-network-mask"
        ipv4-address: "ipv4-address"
        ipv4-mask-length: 6
        topology:
          security-zone:
            uid: "uid"
            domain:
              uid: "uid"
              domain-type: "mds"
              name: "name"
            name: "name"
            type: "type"
          leads-to-specific-network:
            uid: "uid"
            domain:
              uid: "uid"
              domain-type: "mds"
              name: "name"
            name: "name"
            type: "type"
          leads-to-dmz: true
          ip-address-behind-this-interface: "not defined"
          leads-to-internet: true
        interface-name: "interface-name"
        ipv4-network-mask: "ipv4-network-mask"
        dynamic-ip: true
        ipv6-address: "ipv6-address"
      - ipv6-mask-length: 1
        ipv6-network-mask: "ipv6-network-mask"
        ipv4-address: "ipv4-address"
        ipv4-mask-length: 6
        topology:
          security-zone:
            uid: "uid"
            domain:
              uid: "uid"
              domain-type: "mds"
              name: "name"
            name: "name"
            type: "type"
          leads-to-specific-network:
            uid: "uid"
            domain:
              uid: "uid"
              domain-type: "mds"
              name: "name"
            name: "name"
            type: "type"
          leads-to-dmz: true
          ip-address-behind-this-interface: "not defined"
          leads-to-internet: true
        interface-name: "interface-name"
        ipv4-network-mask: "ipv4-network-mask"
        dynamic-ip: true
        ipv6-address: "ipv6-address"
      comments: "comments"
      color: "aquamarine"
      operating-system: "operating-system"
      cluster-member-names:
      - "cluster-member-names"
      - "cluster-member-names"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      type: "type"
      vpn-encryption-domain: "manual"
      version: "version"
      ipv6-address: "ipv6-address"
      tags:
      - "tags"
      - "tags"
      management-blades:
        secondary: true
        identity-awareness: true
        logging-and-status: true
        compliance: true
        smart-event-server: true
        endpoint-policy: true
        network-policy-management: true
        monitoring: true
        identity-logging: true
        smart-event-correlation: true
      uid: "uid"
      ipv4-address: "ipv4-address"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      network-security-blades:
        identity-awareness: true
        site-to-site-vpn: true
        traditional-anti-virus: true
        content-awareness: true
        anti-spam: true
        monitoring: true
        ips: true
        threat-extraction: true
        anti-bot: true
        qos: true
        firewall: true
        url-filtering: true
        application-control: true
        anti-virus: true
        data-loss-prevention: true
        mobile-access: true
        threat-emulation: true
      vpn-encryption-domain-manually-defined:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      name: "name"
      sic-status: "sic-status"
      read-only: true
      hardware: "hardware"
      policy:
        access-policy-revision:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        cluster-members-access-policy-revision:
        - uid: "uid"
          policy-name: "policy-name"
          name: "name"
          revision:
            uid: "uid"
            domain:
              uid: "uid"
              domain-type: "mds"
              name: "name"
            name: "name"
            type: "type"
        - uid: "uid"
          policy-name: "policy-name"
          name: "name"
          revision:
            uid: "uid"
            domain:
              uid: "uid"
              domain-type: "mds"
              name: "name"
            name: "name"
            type: "type"
        threat-policy-name: "threat-policy-name"
        access-policy-installation-date:
          iso-8601: "iso-8601"
          posix: 0
        access-policy-name: "access-policy-name"
        threat-policy-revision:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        access-policy-installed: true
        threat-policy-installation-date:
          iso-8601: "iso-8601"
          posix: 0
        cluster-members-threat-policy-revision:
        - uid: "uid"
          policy-name: "policy-name"
          name: "name"
          revision:
            uid: "uid"
            domain:
              uid: "uid"
              domain-type: "mds"
              name: "name"
            name: "name"
            type: "type"
        - uid: "uid"
          policy-name: "policy-name"
          name: "name"
          revision:
            uid: "uid"
            domain:
              uid: "uid"
              domain-type: "mds"
              name: "name"
            name: "name"
            type: "type"
        threat-policy-installed: true
  GetInterfacesRequest:
    type: "object"
    required:
    - "target-uid"
    properties:
      target-name:
        type: "string"
        description: "Target name."
      target-uid:
        type: "string"
        description: "Target unique identifier."
    example:
      target-name: "target-name"
      target-uid: "target-uid"
  GlobalAssignmentIdentifierRequest:
    type: "object"
    required:
    - "uid"
    properties:
      dependent-domain:
        type: "string"
        description: "N/A"
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      global-domain:
        type: "string"
        description: "N/A"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      dependent-domain: "dependent-domain"
      global-domain: "global-domain"
      details-level: "standard"
  GlobalAssignmentReply:
    type: "object"
    properties:
      assignment-status:
        type: "string"
        description: "N/A"
        enum:
        - "not assigned"
        - "up to date"
        - "not up to date"
      assignment-up-to-date:
        $ref: "#/definitions/ApiDateReply"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      dependent-domain:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      global-access-policy:
        type: "string"
        description: "Global domain access policy that is assigned to a dependent\
          \ domain."
      global-domain:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      global-threat-prevention-policy:
        type: "string"
        description: "Global domain threat prevention policy that is assigned to a\
          \ dependent domain."
      icon:
        type: "string"
        description: "Object icon."
      manage-protection-actions:
        type: "boolean"
        description: "N/A"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      global-threat-prevention-policy: "global-threat-prevention-policy"
      comments: "comments"
      color: "aquamarine"
      global-domain:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      dependent-domain:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      global-access-policy: "global-access-policy"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      assignment-status: "not assigned"
      manage-protection-actions: true
      assignment-up-to-date:
        iso-8601: "iso-8601"
        posix: 0
      read-only: true
  GlobalAssignmentRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      dependent-domain:
        type: "string"
        description: "N/A"
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      global-access-policy:
        type: "string"
        description: "Global domain access policy that is assigned to a dependent\
          \ domain."
      global-domain:
        type: "string"
        description: "Global domain name or UID."
      global-threat-prevention-policy:
        type: "string"
        description: "Global domain threat prevention policy that is assigned to a\
          \ dependent domain."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      manage-protection-actions:
        type: "boolean"
        description: "N/A"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      global-threat-prevention-policy: "global-threat-prevention-policy"
      uid: "uid"
      dependent-domain: "dependent-domain"
      ignore-errors: false
      ignore-warnings: false
      global-access-policy: "global-access-policy"
      global-domain: "global-domain"
      manage-protection-actions: true
      details-level: "standard"
  GlobalAssignmentRequestNew:
    type: "object"
    properties:
      dependent-domain:
        type: "string"
        description: "N/A"
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      global-access-policy:
        type: "string"
        description: "Global domain access policy that is assigned to a dependent\
          \ domain."
      global-domain:
        type: "string"
        description: "Global domain name or UID."
      global-threat-prevention-policy:
        type: "string"
        description: "Global domain threat prevention policy that is assigned to a\
          \ dependent domain."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      manage-protection-actions:
        type: "boolean"
        description: "N/A"
    example:
      global-threat-prevention-policy: "global-threat-prevention-policy"
      dependent-domain: "dependent-domain"
      ignore-errors: false
      ignore-warnings: false
      global-access-policy: "global-access-policy"
      global-domain: "global-domain"
      manage-protection-actions: true
      details-level: "standard"
  GlobalAssignmentWithDependentReply:
    type: "object"
    properties:
      assignment-status:
        type: "string"
        description: "N/A"
        enum:
        - "not assigned"
        - "up to date"
        - "not up to date"
      assignment-up-to-date:
        $ref: "#/definitions/ApiDateReply"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      dependent-domain:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      global-access-policy:
        type: "string"
        description: "Global domain access policy that is assigned to a dependent\
          \ domain."
      global-threat-prevention-policy:
        type: "string"
        description: "Global domain threat prevention policy that is assigned to a\
          \ dependent domain."
      icon:
        type: "string"
        description: "Object icon."
      manage-protection-actions:
        type: "boolean"
        description: "N/A"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      global-threat-prevention-policy: "global-threat-prevention-policy"
      comments: "comments"
      color: "aquamarine"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      dependent-domain:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      global-access-policy: "global-access-policy"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      assignment-status: "not assigned"
      manage-protection-actions: true
      assignment-up-to-date:
        iso-8601: "iso-8601"
        posix: 0
      read-only: true
  GlobalAssignmentWithGlobalReply:
    type: "object"
    properties:
      assignment-status:
        type: "string"
        description: "N/A"
        enum:
        - "not assigned"
        - "up to date"
        - "not up to date"
      assignment-up-to-date:
        $ref: "#/definitions/ApiDateReply"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      global-access-policy:
        type: "string"
        description: "Global domain access policy that is assigned to a dependent\
          \ domain."
      global-domain:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      global-threat-prevention-policy:
        type: "string"
        description: "Global domain threat prevention policy that is assigned to a\
          \ dependent domain."
      icon:
        type: "string"
        description: "Object icon."
      manage-protection-actions:
        type: "boolean"
        description: "N/A"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      global-threat-prevention-policy: "global-threat-prevention-policy"
      comments: "comments"
      color: "aquamarine"
      global-domain:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      global-access-policy: "global-access-policy"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      assignment-status: "not assigned"
      manage-protection-actions: true
      assignment-up-to-date:
        iso-8601: "iso-8601"
        posix: 0
      read-only: true
  GlobalDomainEditReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      domain-type:
        type: "string"
        description: "N/A"
        enum:
        - "mds"
        - "data domain"
        - "domain"
        - "global domain"
      global-domain-assignments:
        type: "array"
        description: "N/A"
        items:
          $ref: "#/definitions/GlobalAssignmentWithDependentReply"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      servers:
        type: "array"
        description: "Domain servers."
        items:
          $ref: "#/definitions/BaseDomainServerReply"
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      tasks:
        type: "array"
        description: "Asynchronous task unique identifiers. This field is an alternative\
          \ to all the fields presented below and is populated if 'set-global-domain'\
          \ command was executed asynchronously. This happens when 'servers' field\
          \ was provided in the request."
        items:
          $ref: "#/definitions/ApiTaskReply"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "aquamarine"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      servers:
      - multi-domain-server: "multi-domain-server"
        ipv4-address: "ipv4-address"
        name: "name"
        skip-start-domain-server: true
        active: true
        type: "management server"
        ipv6-address: "ipv6-address"
      - multi-domain-server: "multi-domain-server"
        ipv4-address: "ipv4-address"
        name: "name"
        skip-start-domain-server: true
        active: true
        type: "management server"
        ipv6-address: "ipv6-address"
      domain-type: "mds"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      global-domain-assignments:
      - global-threat-prevention-policy: "global-threat-prevention-policy"
        comments: "comments"
        color: "aquamarine"
        icon: "icon"
        meta-info:
          creator: "creator"
          last-modify-time:
            iso-8601: "iso-8601"
            posix: 0
          validation-state: "ok"
          creation-time:
            iso-8601: "iso-8601"
            posix: 0
          lock: "unlocked"
          last-modifier: "last-modifier"
        type: "type"
        tags:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        uid: "uid"
        dependent-domain:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        global-access-policy: "global-access-policy"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        assignment-status: "not assigned"
        manage-protection-actions: true
        assignment-up-to-date:
          iso-8601: "iso-8601"
          posix: 0
        read-only: true
      - global-threat-prevention-policy: "global-threat-prevention-policy"
        comments: "comments"
        color: "aquamarine"
        icon: "icon"
        meta-info:
          creator: "creator"
          last-modify-time:
            iso-8601: "iso-8601"
            posix: 0
          validation-state: "ok"
          creation-time:
            iso-8601: "iso-8601"
            posix: 0
          lock: "unlocked"
          last-modifier: "last-modifier"
        type: "type"
        tags:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        uid: "uid"
        dependent-domain:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        global-access-policy: "global-access-policy"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        assignment-status: "not assigned"
        manage-protection-actions: true
        assignment-up-to-date:
          iso-8601: "iso-8601"
          posix: 0
        read-only: true
      read-only: true
      tasks:
      - task-id: "task-id"
      - task-id: "task-id"
  GlobalDomainReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      domain-type:
        type: "string"
        description: "N/A"
        enum:
        - "mds"
        - "data domain"
        - "domain"
        - "global domain"
      global-domain-assignments:
        type: "array"
        description: "N/A"
        items:
          $ref: "#/definitions/GlobalAssignmentWithDependentReply"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      servers:
        type: "array"
        description: "Domain servers."
        items:
          $ref: "#/definitions/BaseDomainServerReply"
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "aquamarine"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      servers:
      - multi-domain-server: "multi-domain-server"
        ipv4-address: "ipv4-address"
        name: "name"
        skip-start-domain-server: true
        active: true
        type: "management server"
        ipv6-address: "ipv6-address"
      - multi-domain-server: "multi-domain-server"
        ipv4-address: "ipv4-address"
        name: "name"
        skip-start-domain-server: true
        active: true
        type: "management server"
        ipv6-address: "ipv6-address"
      domain-type: "mds"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      global-domain-assignments:
      - global-threat-prevention-policy: "global-threat-prevention-policy"
        comments: "comments"
        color: "aquamarine"
        icon: "icon"
        meta-info:
          creator: "creator"
          last-modify-time:
            iso-8601: "iso-8601"
            posix: 0
          validation-state: "ok"
          creation-time:
            iso-8601: "iso-8601"
            posix: 0
          lock: "unlocked"
          last-modifier: "last-modifier"
        type: "type"
        tags:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        uid: "uid"
        dependent-domain:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        global-access-policy: "global-access-policy"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        assignment-status: "not assigned"
        manage-protection-actions: true
        assignment-up-to-date:
          iso-8601: "iso-8601"
          posix: 0
        read-only: true
      - global-threat-prevention-policy: "global-threat-prevention-policy"
        comments: "comments"
        color: "aquamarine"
        icon: "icon"
        meta-info:
          creator: "creator"
          last-modify-time:
            iso-8601: "iso-8601"
            posix: 0
          validation-state: "ok"
          creation-time:
            iso-8601: "iso-8601"
            posix: 0
          lock: "unlocked"
          last-modifier: "last-modifier"
        type: "type"
        tags:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        uid: "uid"
        dependent-domain:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        global-access-policy: "global-access-policy"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        assignment-status: "not assigned"
        manage-protection-actions: true
        assignment-up-to-date:
          iso-8601: "iso-8601"
          posix: 0
        read-only: true
      read-only: true
  GlobalDomainRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name."
      servers:
        $ref: "#/definitions/add"
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      servers:
        add: "add"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      details-level: "standard"
      tags:
        add: "add"
  GroupReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      members:
        type: "array"
        description: "Collection of network objects identified by the name or UID.\
          \ How much details are returned depends on the details-level field of the\
          \ request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      ranges:
        $ref: "#/definitions/IpRanges"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "aquamarine"
      ranges:
        excluded-others:
        - "{}"
        - "{}"
        ipv4:
        - start: "start"
          end: "end"
        - start: "start"
          end: "end"
        ipv6:
        - start: "start"
          end: "end"
        - start: "start"
          end: "end"
        others:
        - "{}"
        - "{}"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      members:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      name: "name"
      read-only: true
  GroupRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      members:
        $ref: "#/definitions/add"
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      members:
        add: "add"
      name: "name"
      groups:
        add: "add"
      details-level: "standard"
      new-name: "new-name"
      tags:
        add: "add"
  GroupRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      members:
        type: "string"
        description: "Collection of Network objects identified by the name or UID."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      members: "members"
      name: "name"
      groups: "groups"
      details-level: "standard"
      tags: "tags"
  GroupRequestQuery:
    type: "object"
    properties:
      dereference-group-members:
        type: "boolean"
        description: "Indicates whether to dereference \"members\" field by details\
          \ level for every object in reply."
        default: true
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      limit:
        type: "integer"
        description: "No more than that many results will be returned."
      offset:
        type: "integer"
        description: "Skip that many results before beginning to return them."
      order:
        type: "array"
        description: "Sorts results by the given field. By default the results are\
          \ sorted in the ascending order by name."
        items:
          $ref: "#/definitions/ApiQueryOrderRequest"
      show-as-ranges:
        type: "boolean"
        description: "When true, the group's matched content is displayed as ranges\
          \ of IP addresses rather than network objects.<br />Objects that are not\
          \ represented using IP addresses are presented as objects.<br />The 'members'\
          \ parameter is omitted from the response and instead the 'ranges' parameter\
          \ is displayed."
        default: false
      show-membership:
        type: "boolean"
        description: "Indicates whether to calculate and show \"groups\" field for\
          \ every object in reply."
        default: true
    example:
      offset: 6
      limit: 0
      show-membership: true
      dereference-group-members: true
      show-as-ranges: false
      details-level: "standard"
      order:
      - ASC: "name"
        DESC: "name"
      - ASC: "name"
        DESC: "name"
  GroupRequestShow:
    type: "object"
    required:
    - "uid"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      name:
        type: "string"
        description: "Object name."
      show-as-ranges:
        type: "boolean"
        description: "When true, the group's matched content is displayed as ranges\
          \ of IP addresses rather than network objects.<br />Objects that are not\
          \ represented using IP addresses are presented as objects.<br />The 'members'\
          \ parameter is omitted from the response and instead the 'ranges' parameter\
          \ is displayed."
        default: false
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      name: "name"
      show-as-ranges: false
      details-level: "standard"
  GroupWithExclusionReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      except:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      include:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      ranges:
        $ref: "#/definitions/IpRanges"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      include:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      comments: "comments"
      color: "aquamarine"
      ranges:
        excluded-others:
        - "{}"
        - "{}"
        ipv4:
        - start: "start"
          end: "end"
        - start: "start"
          end: "end"
        ipv6:
        - start: "start"
          end: "end"
        - start: "start"
          end: "end"
        others:
        - "{}"
        - "{}"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      except:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      read-only: true
  GroupWithExclusionRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      except:
        type: "string"
        description: "Name or UID of an object which the group excludes."
      groups:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      include:
        type: "string"
        description: "Name or UID of an object which the group includes."
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      include: "include"
      uid: "uid"
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      groups:
        add: "add"
      except: "except"
      details-level: "standard"
      new-name: "new-name"
      tags:
        add: "add"
  GroupWithExclusionRequestNew:
    type: "object"
    required:
    - "except"
    - "include"
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      except:
        type: "string"
        description: "Name or UID of an object which the group excludes."
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      include:
        type: "string"
        description: "Name or UID of an object which the group includes."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      include: "include"
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      groups: "groups"
      except: "except"
      details-level: "standard"
      tags: "tags"
  GroupWithExclusionRequestQuery:
    type: "object"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      limit:
        type: "integer"
        description: "No more than that many results will be returned."
      offset:
        type: "integer"
        description: "Skip that many results before beginning to return them."
      order:
        type: "array"
        description: "Sorts results by the given field. By default the results are\
          \ sorted in the ascending order by name."
        items:
          $ref: "#/definitions/ApiQueryOrderRequest"
      show-as-ranges:
        type: "boolean"
        description: "When true, the group with exclusion's matched content is displayed\
          \ as ranges of IP addresses rather than network objects.<br />Objects that\
          \ are not represented using IP addresses are presented as objects.<br />The\
          \ 'include' and 'except' parameters are omitted from the response and instead\
          \ the 'ranges' parameter is displayed."
        default: false
    example:
      offset: 6
      limit: 0
      show-as-ranges: false
      details-level: "standard"
      order:
      - ASC: "name"
        DESC: "name"
      - ASC: "name"
        DESC: "name"
  GroupWithExclusionRequestShow:
    type: "object"
    required:
    - "uid"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      name:
        type: "string"
        description: "Object name."
      show-as-ranges:
        type: "boolean"
        description: "When true, the group with exclusion's matched content is displayed\
          \ as ranges of IP addresses rather than network objects.<br />Objects that\
          \ are not represented using IP addresses are presented as objects.<br />The\
          \ 'include' and 'except' parameters are omitted from the response and instead\
          \ the 'ranges' parameter is displayed."
        default: false
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      name: "name"
      show-as-ranges: false
      details-level: "standard"
  HitsReply:
    type: "object"
    properties:
      first-date:
        $ref: "#/definitions/ApiDateReply"
      last-date:
        $ref: "#/definitions/ApiDateReply"
      level:
        type: "string"
        description: "N/A"
        enum:
        - "zero hit count level"
        - "zero"
        - "low"
        - "medium"
        - "high"
        - "very high"
      percentage:
        type: "string"
        description: "N/A"
      value:
        type: "integer"
        description: "N/A"
    description: "Hits count object."
    example:
      level: "zero hit count level"
      percentage: "percentage"
      first-date:
        iso-8601: "iso-8601"
        posix: 0
      last-date:
        iso-8601: "iso-8601"
        posix: 0
      value: 0
  HitsSettingsRequest:
    type: "object"
    properties:
      from-date:
        type: "string"
        description: "Format: YYYY-MM-DD, YYYY-mm-ddThh:mm:ss."
      target:
        type: "string"
        description: "Target gateway name or UID."
      to-date:
        type: "string"
        description: "Format: YYYY-MM-DD, YYYY-mm-ddThh:mm:ss."
    description: "N/A"
    example:
      to-date: "to-date"
      from-date: "from-date"
      target: "target"
  HostInterfaceReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      mask-length4:
        type: "integer"
        description: "IPv4 network mask length."
      mask-length6:
        type: "integer"
        description: "IPv6 network mask length."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      subnet-mask:
        type: "string"
        description: "IPv4 network mask."
      subnet4:
        type: "string"
        description: "IPv4 network address."
      subnet6:
        type: "string"
        description: "IPv6 network address."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "aquamarine"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      subnet-mask: "subnet-mask"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      subnet6: "subnet6"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      subnet4: "subnet4"
      mask-length4: 6
      read-only: true
      mask-length6: 1
  HostInterfaceRequestNew:
    type: "object"
    required:
    - "mask-length"
    - "name"
    - "subnet"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      mask-length:
        type: "integer"
        description: "IPv4 or IPv6 network mask length. If both masks are required\
          \ use mask-length4 and mask-length6 fields explicitly. Instead of IPv4 mask\
          \ length it is possible to specify IPv4 mask itself in subnet-mask field."
      mask-length4:
        type: "integer"
        description: "IPv4 network mask length."
      mask-length6:
        type: "integer"
        description: "IPv6 network mask length."
      name:
        type: "string"
        description: "Interface name."
      subnet:
        type: "string"
        description: "IPv4 or IPv6 network address. If both addresses are required\
          \ use subnet4 and subnet6 fields explicitly."
      subnet-mask:
        type: "string"
        description: "IPv4 network mask."
      subnet4:
        type: "string"
        description: "IPv4 network address."
      subnet6:
        type: "string"
        description: "IPv6 network address."
    description: "Host interfaces."
    example:
      subnet: "subnet"
      comments: "comments"
      color: "black"
      ignore-warnings: false
      subnet-mask: "subnet-mask"
      mask-length: 0
      ignore-errors: false
      subnet6: "subnet6"
      name: "name"
      details-level: "standard"
      subnet4: "subnet4"
      mask-length4: 6
      mask-length6: 1
  HostQueryReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      objects:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/HostStandardReply"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
    example:
      total: 1
      objects:
      - uid: "uid"
        ipv4-address: "ipv4-address"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
        ipv6-address: "ipv6-address"
      - uid: "uid"
        ipv4-address: "ipv4-address"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
        ipv6-address: "ipv6-address"
      from: 0
      to: 6
  HostReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      host-servers:
        $ref: "#/definitions/HostServersReply"
      icon:
        type: "string"
        description: "Object icon."
      interfaces:
        type: "array"
        description: "Host interfaces."
        items:
          $ref: "#/definitions/HostInterfaceReply"
      ipv4-address:
        type: "string"
        description: "IPv4 host address."
      ipv6-address:
        type: "string"
        description: "IPv6 host address."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      nat-settings:
        $ref: "#/definitions/NatSettingsReply"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      nat-settings:
        ipv4-address: "ipv4-address"
        method: "hide"
        hide-behind: "gateway"
        install-on: "install-on"
        auto-rule: true
        ipv6-address: "ipv6-address"
      interfaces:
      - comments: "comments"
        color: "aquamarine"
        icon: "icon"
        meta-info:
          creator: "creator"
          last-modify-time:
            iso-8601: "iso-8601"
            posix: 0
          validation-state: "ok"
          creation-time:
            iso-8601: "iso-8601"
            posix: 0
          lock: "unlocked"
          last-modifier: "last-modifier"
        subnet-mask: "subnet-mask"
        type: "type"
        tags:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        uid: "uid"
        subnet6: "subnet6"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        subnet4: "subnet4"
        mask-length4: 6
        read-only: true
        mask-length6: 1
      - comments: "comments"
        color: "aquamarine"
        icon: "icon"
        meta-info:
          creator: "creator"
          last-modify-time:
            iso-8601: "iso-8601"
            posix: 0
          validation-state: "ok"
          creation-time:
            iso-8601: "iso-8601"
            posix: 0
          lock: "unlocked"
          last-modifier: "last-modifier"
        subnet-mask: "subnet-mask"
        type: "type"
        tags:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        uid: "uid"
        subnet6: "subnet6"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        subnet4: "subnet4"
        mask-length4: 6
        read-only: true
        mask-length6: 1
      comments: "comments"
      color: "aquamarine"
      host-servers:
        mail-server: true
        web-server-config:
          operating-system: "sparc linux"
          application-engines:
          - "application-engines"
          - "application-engines"
          listen-standard-port: true
          standard-port-number: 0
          additional-ports:
          - "additional-ports"
          - "additional-ports"
          protected-by: "protected-by"
        web-server: true
        dns-server: true
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      type: "type"
      ipv6-address: "ipv6-address"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      ipv4-address: "ipv4-address"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      read-only: true
  HostRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      host-servers:
        $ref: "#/definitions/HostServersRequestEdit"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      interfaces:
        $ref: "#/definitions/add"
      ip-address:
        type: "string"
        description: "IPv4 or IPv6 address. If both addresses are required use ipv4-address\
          \ and ipv6-address fields explicitly."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      name:
        type: "string"
        description: "Object name."
      nat-settings:
        $ref: "#/definitions/NatSettingsRequest"
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      nat-settings:
        ip-address: "ip-address"
        ipv4-address: "ipv4-address"
        method: "hide"
        hide-behind: "gateway"
        install-on: "install-on"
        auto-rule: false
        ipv6-address: "ipv6-address"
      interfaces:
        add: "add"
      comments: "comments"
      color: "black"
      ignore-warnings: false
      host-servers:
        mail-server: true
        web-server-config:
          operating-system: "sparc linux"
          application-engines:
            add: "add"
          listen-standard-port: true
          additional-ports:
            add: "add"
          protected-by: "protected-by"
        web-server: true
        dns-server: true
      groups:
        add: "add"
      new-name: "new-name"
      ipv6-address: "ipv6-address"
      tags:
        add: "add"
      uid: "uid"
      ip-address: "ip-address"
      ignore-errors: false
      ipv4-address: "ipv4-address"
      name: "name"
      details-level: "standard"
  HostRequestNew:
    type: "object"
    required:
    - "ip-address"
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      host-servers:
        $ref: "#/definitions/HostServersRequestNew"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      interfaces:
        $ref: "#/definitions/HostInterfaceRequestNew"
      ip-address:
        type: "string"
        description: "IPv4 or IPv6 address. If both addresses are required use ipv4-address\
          \ and ipv6-address fields explicitly."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      nat-settings:
        $ref: "#/definitions/NatSettingsRequest"
      set-if-exists:
        type: "boolean"
        description: "If another object with the same identifier already exists, it\
          \ will be updated. The command behaviour will be the same as if originally\
          \ a set command was called. Pay attention that original object's fields\
          \ will be overwritten by the fields provided in the request payload!"
        default: false
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      nat-settings:
        ip-address: "ip-address"
        ipv4-address: "ipv4-address"
        method: "hide"
        hide-behind: "gateway"
        install-on: "install-on"
        auto-rule: false
        ipv6-address: "ipv6-address"
      interfaces:
        subnet: "subnet"
        comments: "comments"
        color: "black"
        ignore-warnings: false
        subnet-mask: "subnet-mask"
        mask-length: 0
        ignore-errors: false
        subnet6: "subnet6"
        name: "name"
        details-level: "standard"
        subnet4: "subnet4"
        mask-length4: 6
        mask-length6: 1
      set-if-exists: false
      comments: "comments"
      color: "black"
      ignore-warnings: false
      host-servers:
        mail-server: true
        web-server-config:
          operating-system: "sparc linux"
          application-engines: "application-engines"
          listen-standard-port: true
          additional-ports: "additional-ports"
          protected-by: "protected-by"
        web-server: true
        dns-server: true
      groups: "groups"
      ipv6-address: "ipv6-address"
      tags: "tags"
      ip-address: "ip-address"
      ignore-errors: false
      ipv4-address: "ipv4-address"
      name: "name"
      details-level: "standard"
  HostServersReply:
    type: "object"
    properties:
      dns-server:
        type: "boolean"
        description: "Gets True if this server is a DNS Server."
      mail-server:
        type: "boolean"
        description: "Gets True if this server is a Mail Server."
      web-server:
        type: "boolean"
        description: "Gets True if this server is a Web Server."
      web-server-config:
        $ref: "#/definitions/WebServerReply"
    description: "Servers Configuration."
    example:
      mail-server: true
      web-server-config:
        operating-system: "sparc linux"
        application-engines:
        - "application-engines"
        - "application-engines"
        listen-standard-port: true
        standard-port-number: 0
        additional-ports:
        - "additional-ports"
        - "additional-ports"
        protected-by: "protected-by"
      web-server: true
      dns-server: true
  HostServersRequestEdit:
    type: "object"
    properties:
      dns-server:
        type: "boolean"
        description: "Gets True if this server is a DNS Server."
      mail-server:
        type: "boolean"
        description: "Gets True if this server is a Mail Server."
      web-server:
        type: "boolean"
        description: "Gets True if this server is a Web Server."
      web-server-config:
        $ref: "#/definitions/WebServerRequestEdit"
    description: "Servers Configuration."
    example:
      mail-server: true
      web-server-config:
        operating-system: "sparc linux"
        application-engines:
          add: "add"
        listen-standard-port: true
        additional-ports:
          add: "add"
        protected-by: "protected-by"
      web-server: true
      dns-server: true
  HostServersRequestNew:
    type: "object"
    properties:
      dns-server:
        type: "boolean"
        description: "Gets True if this server is a DNS Server."
      mail-server:
        type: "boolean"
        description: "Gets True if this server is a Mail Server."
      web-server:
        type: "boolean"
        description: "Gets True if this server is a Web Server."
      web-server-config:
        $ref: "#/definitions/WebServerRequestNew"
    description: "Servers Configuration."
    example:
      mail-server: true
      web-server-config:
        operating-system: "sparc linux"
        application-engines: "application-engines"
        listen-standard-port: true
        additional-ports: "additional-ports"
        protected-by: "protected-by"
      web-server: true
      dns-server: true
  HostStandardReply:
    type: "object"
    properties:
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      ipv4-address:
        type: "string"
        description: "IPv4 host address."
      ipv6-address:
        type: "string"
        description: "IPv6 host address."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      ipv4-address: "ipv4-address"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      type: "type"
      ipv6-address: "ipv6-address"
  HourRange:
    type: "object"
    properties:
      enabled:
        type: "boolean"
        description: "Is hour range enabled."
      from:
        type: "string"
        description: "Time in format HH:MM."
      index:
        type: "integer"
        description: "Hour range index."
      to:
        type: "string"
        description: "Time in format HH:MM."
    example:
      index: 6
      from: "from"
      to: "to"
      enabled: true
  IEntityInRulebase:
    type: "object"
    properties:
      type:
        type: "string"
        description: "N/A"
    example:
      type: "type"
  IkeP1Reply:
    type: "object"
    properties:
      data-integrity:
        type: "string"
        description: "The hash algorithm to be used."
        enum:
        - "aes-xcbc"
        - "sha1"
        - "sha256"
        - "sha384"
        - "md5"
      diffie-hellman-group:
        type: "string"
        description: "The Diffie-Hellman group to be used."
        enum:
        - "group-1"
        - "group-2"
        - "group-5"
        - "group-14"
        - "group-19"
        - "group-20"
      encryption-algorithm:
        type: "string"
        description: "The encryption algorithm to be used."
        enum:
        - "cast"
        - "aes-256"
        - "des"
        - "aes-128"
        - "3des"
    description: "Ike Phase 1 settings. Only applicable when the encryption-suite\
      \ is set to [custom]."
    example:
      encryption-algorithm: "cast"
      diffie-hellman-group: "group-1"
      data-integrity: "aes-xcbc"
  IkeP1Request:
    type: "object"
    properties:
      data-integrity:
        type: "string"
        description: "The hash algorithm to be used."
        enum:
        - "aes-xcbc"
        - "sha1"
        - "sha256"
        - "sha384"
        - "md5"
      diffie-hellman-group:
        type: "string"
        description: "The Diffie-Hellman group to be used."
        enum:
        - "group-1"
        - "group-2"
        - "group-5"
        - "group-14"
        - "group-19"
        - "group-20"
      encryption-algorithm:
        type: "string"
        description: "The encryption algorithm to be used."
        enum:
        - "cast"
        - "aes-256"
        - "des"
        - "aes-128"
        - "3des"
    description: "Ike Phase 1 settings. Only applicable when the encryption-suite\
      \ is set to [custom]."
    example:
      encryption-algorithm: "cast"
      diffie-hellman-group: "group-1"
      data-integrity: "aes-xcbc"
  IkeP2Reply:
    type: "object"
    properties:
      data-integrity:
        type: "string"
        description: "The hash algorithm to be used."
        enum:
        - "aes-xcbc"
        - "sha1"
        - "sha256"
        - "sha384"
        - "md5"
      encryption-algorithm:
        type: "string"
        description: "The encryption algorithm to be used."
        enum:
        - "cast"
        - "aes-gcm-256"
        - "cast-40"
        - "aes-256"
        - "des"
        - "aes-128"
        - "3des"
        - "des-40cp"
        - "aes-gcm-128"
        - "none"
    description: "Ike Phase 2 settings. Only applicable when the encryption-suite\
      \ is set to [custom]."
    example:
      encryption-algorithm: "cast"
      data-integrity: "aes-xcbc"
  IkeP2Request:
    type: "object"
    properties:
      data-integrity:
        type: "string"
        description: "The hash algorithm to be used."
        enum:
        - "aes-xcbc"
        - "sha1"
        - "sha256"
        - "sha384"
        - "md5"
      encryption-algorithm:
        type: "string"
        description: "The encryption algorithm to be used."
        enum:
        - "cast"
        - "aes-gcm-256"
        - "cast-40"
        - "aes-256"
        - "des"
        - "aes-128"
        - "3des"
        - "des-40cp"
        - "aes-gcm-128"
        - "none"
    description: "Ike Phase 2 settings. Only applicable when the encryption-suite\
      \ is set to [custom]."
    example:
      encryption-algorithm: "cast"
      data-integrity: "aes-xcbc"
  IndicatorObservableRequest:
    type: "object"
    required:
    - "md5"
    - "name"
    properties:
      comments:
        type: "string"
        description: "Comments string."
      confidence:
        type: "string"
        description: "The confidence level the indicator has that a real threat has\
          \ been uncovered."
        default: "high"
        enum:
        - "low"
        - "medium"
        - "high"
        - "critical"
      domain:
        type: "string"
        description: "The name of a domain."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      ip-address:
        type: "string"
        description: "A valid IP-Address."
      ip-address-first:
        type: "string"
        description: "A valid IP-Address, the beginning of the range. If you configure\
          \ this parameter with a value, you must also configure the value of the\
          \ 'ip-address-last' parameter."
      ip-address-last:
        type: "string"
        description: "A valid IP-Address, the end of the range. If you configure this\
          \ parameter with a value, you must also configure the value of the 'ip-address-first'\
          \ parameter."
      mail-cc:
        type: "string"
        description: "A valid E-Mail address, cc field."
      mail-from:
        type: "string"
        description: "A valid E-Mail address, sender field."
      mail-reply-to:
        type: "string"
        description: "A valid E-Mail address, reply-to field."
      mail-subject:
        type: "string"
        description: "Subject of E-Mail."
      mail-to:
        type: "string"
        description: "A valid E-Mail address, recipient filed."
      md5:
        type: "string"
        description: "A valid MD5 sequence."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      product:
        type: "string"
        description: "The software blade that processes the observable: AV - AntiVirus,\
          \ AB - AntiBot."
        default: "AV"
        enum:
        - "AV"
        - "AB"
      severity:
        type: "string"
        description: "The severity level of the threat."
        default: "high"
        enum:
        - "low"
        - "medium"
        - "high"
        - "critical"
      url:
        type: "string"
        description: "A valid URL."
    description: "The indicator's observables."
    example:
      severity: "high"
      product: "AV"
      comments: "comments"
      ignore-warnings: false
      confidence: "high"
      url: "url"
      mail-cc: "mail-cc"
      ip-address: "ip-address"
      ignore-errors: false
      domain: "domain"
      mail-to: "mail-to"
      name: "name"
      mail-from: "mail-from"
      mail-reply-to: "mail-reply-to"
      ip-address-first: "ip-address-first"
      ip-address-last: "ip-address-last"
      mail-subject: "mail-subject"
      md5: "md5"
  IndicatorOverrideRequest:
    type: "object"
    properties:
      action:
        type: "string"
        description: "The indicator's action in this profile."
        enum:
        - "Inactive"
        - "Ask"
        - "Prevent"
        - "Detect"
      profile:
        type: "string"
        description: "The profile in which to override the indicator's action."
    description: "Profiles in which to override the indicator's default action."
    example:
      profile: "profile"
      action: "Inactive"
  IndicatorQueryReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      indicators:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
    example:
      total: 1
      from: 0
      to: 6
      indicators:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  IndicatorReply:
    type: "object"
    properties:
      action:
        type: "string"
        description: "The indicator's action."
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      number-of-observables:
        type: "integer"
        description: "The amount of observables in the indicator."
      profile-overrides:
        type: "array"
        description: "A list of profiles where the default action of this indicator\
          \ is overridden, along with the overriding action."
        items:
          $ref: "#/definitions/IndicatorOverrideRequest"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "aquamarine"
      number-of-observables: 0
      profile-overrides:
      - profile: "profile"
        action: "Inactive"
      - profile: "profile"
        action: "Inactive"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      action: "action"
      read-only: true
  IndicatorRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      action:
        type: "string"
        description: "The indicator's action."
        default: "Prevent"
        enum:
        - "Inactive"
        - "Ask"
        - "Prevent"
        - "Detect"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      profile-overrides:
        $ref: "#/definitions/add"
      tags:
        type: "object"
        description: "Collection of tag identifiers."
        properties: {}
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      profile-overrides:
        add: "add"
      name: "name"
      action: "Prevent"
      details-level: "standard"
      new-name: "new-name"
      tags: "{}"
  IndicatorRequestNew:
    type: "object"
    required:
    - "name"
    - "observables"
    properties:
      action:
        type: "string"
        description: "The indicator's action."
        default: "Prevent"
        enum:
        - "Inactive"
        - "Ask"
        - "Prevent"
        - "Detect"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      observables:
        $ref: "#/definitions/IndicatorObservableRequest"
      observables-raw-data:
        type: "string"
        description: "The contents of a file containing the indicator's observables."
      profile-overrides:
        $ref: "#/definitions/IndicatorOverrideRequest"
      tags:
        type: "object"
        description: "Collection of tag identifiers."
        properties: {}
    example:
      observables:
        severity: "high"
        product: "AV"
        comments: "comments"
        ignore-warnings: false
        confidence: "high"
        url: "url"
        mail-cc: "mail-cc"
        ip-address: "ip-address"
        ignore-errors: false
        domain: "domain"
        mail-to: "mail-to"
        name: "name"
        mail-from: "mail-from"
        mail-reply-to: "mail-reply-to"
        ip-address-first: "ip-address-first"
        ip-address-last: "ip-address-last"
        mail-subject: "mail-subject"
        md5: "md5"
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      profile-overrides:
        profile: "profile"
        action: "Inactive"
      observables-raw-data: "observables-raw-data"
      name: "name"
      action: "Prevent"
      details-level: "standard"
      tags: "{}"
  InstallationTargetRevisionFullReply:
    type: "object"
    properties:
      cluster-members-revision:
        type: "array"
        description: "If this target is a cluster, this list shows a revision which\
          \ was installed on each cluster member."
        items:
          $ref: "#/definitions/InstallationTargetRevisionReply"
      revision:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      target-name:
        type: "string"
        description: "The name of the installation target."
      target-uid:
        type: "string"
        description: "Installation target unique identifier."
    example:
      cluster-members-revision:
      - target-name: "target-name"
        target-uid: "target-uid"
        revision:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
      - target-name: "target-name"
        target-uid: "target-uid"
        revision:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
      target-name: "target-name"
      target-uid: "target-uid"
      revision:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  InstallationTargetRevisionReply:
    type: "object"
    properties:
      revision:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      target-name:
        type: "string"
        description: "The name of the installation target."
      target-uid:
        type: "string"
        description: "Installation target unique identifier."
    example:
      target-name: "target-name"
      target-uid: "target-uid"
      revision:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  InternalTopologySettingsReply:
    type: "object"
    properties:
      interface-leads-to-dmz:
        type: "boolean"
        description: "Whether this interface leads to demilitarized zone (perimeter\
          \ network)."
      ip-address-behind-this-interface:
        type: "string"
        description: "N/A"
        enum:
        - "not defined"
        - "network defined by the interface ip and net mask"
        - "network defined by routing"
        - "specific"
      specific-network:
        type: "string"
        description: "Network behind this interface."
    description: "Internal topology settings."
    example:
      interface-leads-to-dmz: true
      specific-network: "specific-network"
      ip-address-behind-this-interface: "not defined"
  InternalTopologySettingsRequest:
    type: "object"
    properties:
      interface-leads-to-dmz:
        type: "boolean"
        description: "Whether this interface leads to demilitarized zone (perimeter\
          \ network)."
      ip-address-behind-this-interface:
        type: "string"
        description: "N/A"
        enum:
        - "not defined"
        - "network defined by the interface ip and net mask"
        - "network defined by routing"
        - "specific"
      specific-network:
        type: "string"
        description: "Network behind this interface."
    description: "N/A"
    example:
      interface-leads-to-dmz: true
      specific-network: "specific-network"
      ip-address-behind-this-interface: "not defined"
  IpRanges:
    type: "object"
    properties:
      excluded-others:
        type: "array"
        description: "Objects which are not represented as IP addresses and are negated\
          \ in the given rule - for example if negate is set for the source or destination\
          \ of this rule, or if they appear in the 'exclude' member of a group-with-exclusion\
          \ object. The details-level parameter of the request determines whether\
          \ they are displayed as UID's or objects."
        items:
          type: "object"
          properties: {}
      ipv4:
        type: "array"
        description: "Range of IPv4 addresses that match in the given rule."
        items:
          $ref: "#/definitions/Range"
      ipv6:
        type: "array"
        description: "Range of IPv6 addresses that match in the given rule."
        items:
          $ref: "#/definitions/Range"
      others:
        type: "array"
        description: "Objects which are not represented as IP addresses and match\
          \ the given rule. The details-level parameter of the request determines\
          \ whether they are displayed as UID's or objects."
        items:
          type: "object"
          properties: {}
    description: "Displays the group's matched content as ranges of IP addresses,\
      \ in case 'show-as-ranges' is set to true.<br />In this case, the 'members'\
      \ parameter is omitted."
    example:
      excluded-others:
      - "{}"
      - "{}"
      ipv4:
      - start: "start"
        end: "end"
      - start: "start"
        end: "end"
      ipv6:
      - start: "start"
        end: "end"
      - start: "start"
        end: "end"
      others:
      - "{}"
      - "{}"
  IpsAdditionalPropertiesQueryReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      objects:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
    example:
      total: 1
      objects:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      from: 0
      to: 6
  IpsAdditionalPropertiesReply:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      uid:
        type: "string"
        description: "Object unique identifier."
      values:
        type: "array"
        description: "N/A"
        items:
          $ref: "#/definitions/ObjIdNamePair"
    description: "N/A"
    example:
      uid: "uid"
      values:
      - uid: "uid"
        name: "name"
      - uid: "uid"
        name: "name"
      name: "name"
  IpsAdditionalPropertiesShowReply:
    type: "object"
    properties:
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      object:
        $ref: "#/definitions/IpsAdditionalPropertiesReply"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      type: "type"
      object:
        uid: "uid"
        values:
        - uid: "uid"
          name: "name"
        - uid: "uid"
          name: "name"
        name: "name"
  IpsSettingsReply:
    type: "object"
    properties:
      exclude-protection-with-performance-impact:
        type: "boolean"
        description: "Whether to exclude protections depending on their level of performance\
          \ impact."
      exclude-protection-with-performance-impact-mode:
        type: "string"
        description: "Exclude protections with this level of performance impact."
        enum:
        - "very low"
        - "low or lower"
        - "medium or lower"
        - "high or lower"
      exclude-protection-with-severity:
        type: "boolean"
        description: "Whether to exclude protections depending on their level of severity."
      exclude-protection-with-severity-mode:
        type: "string"
        description: "Exclude protections with this level of severity."
        enum:
        - "low or above"
        - "medium or above"
        - "high or above"
        - "critical"
      newly-updated-protections:
        type: "string"
        description: "Activation of newly updated protections."
        enum:
        - "active"
        - "inactive"
        - "staging"
    description: "IPS blade settings."
    example:
      exclude-protection-with-severity: true
      exclude-protection-with-performance-impact: true
      newly-updated-protections: "active"
      exclude-protection-with-severity-mode: "low or above"
      exclude-protection-with-performance-impact-mode: "very low"
  IpsSettingsRequest:
    type: "object"
    properties:
      exclude-protection-with-performance-impact:
        type: "boolean"
        description: "Whether to exclude protections depending on their level of performance\
          \ impact."
      exclude-protection-with-performance-impact-mode:
        type: "string"
        description: "Exclude protections with this level of performance impact."
        enum:
        - "very low"
        - "low or lower"
        - "medium or lower"
        - "high or lower"
      exclude-protection-with-severity:
        type: "boolean"
        description: "Whether to exclude protections depending on their level of severity."
      exclude-protection-with-severity-mode:
        type: "string"
        description: "Exclude protections with this level of severity."
        enum:
        - "low or above"
        - "medium or above"
        - "high or above"
        - "critical"
      newly-updated-protections:
        type: "string"
        description: "Activation of newly updated protections."
        enum:
        - "active"
        - "inactive"
        - "staging"
    description: "IPS blade settings."
    example:
      exclude-protection-with-severity: true
      exclude-protection-with-performance-impact: true
      newly-updated-protections: "active"
      exclude-protection-with-severity-mode: "low or above"
      exclude-protection-with-performance-impact-mode: "very low"
  IpsStatusReply:
    type: "object"
    properties:
      installed-version:
        type: "string"
        description: "Installed IPS version."
      installed-version-creation-time:
        $ref: "#/definitions/ApiDateReply"
      last-updated:
        $ref: "#/definitions/ApiDateReply"
      latest-version:
        type: "string"
        description: "Latest IPS version available on User Center."
      latest-version-creation-time:
        $ref: "#/definitions/ApiDateReply"
      update-available:
        type: "boolean"
        description: "Is IPS update available."
    example:
      last-updated:
        iso-8601: "iso-8601"
        posix: 0
      update-available: true
      installed-version-creation-time:
        iso-8601: "iso-8601"
        posix: 0
      latest-version: "latest-version"
      latest-version-creation-time:
        iso-8601: "iso-8601"
        posix: 0
      installed-version: "installed-version"
  IpsStatusRequest:
    type: "object"
  IpsUpdateReply:
    type: "object"
    properties:
      task-id:
        type: "string"
        description: "Asynchronous task unique identifier."
    example:
      task-id: "task-id"
  IpsUpdateRequest:
    type: "object"
    properties:
      package-path:
        type: "string"
        description: "Offline update package path."
    example:
      package-path: "package-path"
  IpsUpdateScheduleDayRecurrence:
    type: "object"
    properties:
      days:
        type: "array"
        description: "Valid on specific days. Multiple options, support range of days\
          \ in months. Example:[\"1\",\"3\",\"9-20\"]."
        items:
          type: "string"
      minutes:
        type: "integer"
        description: "Valid on interval. The length of time in minutes between updates."
      pattern:
        type: "string"
        description: "Valid on \"Interval\", \"Daily\", \"Weekly\", \"Monthly\" base."
      weekdays:
        type: "array"
        description: "Valid on weekdays. Example: \"Sun\", \"Mon\"...\"Sat\"."
        items:
          type: "string"
    description: "Days recurrence."
    example:
      minutes: 0
      weekdays:
      - "weekdays"
      - "weekdays"
      pattern: "pattern"
      days:
      - "days"
      - "days"
  IpsUpdateScheduleReply:
    type: "object"
    properties:
      enabled:
        type: "boolean"
        description: "IPS Update Schedule status."
      recurrence:
        $ref: "#/definitions/IpsUpdateScheduleDayRecurrence"
      time:
        type: "string"
        description: "Time in format HH:mm."
    example:
      recurrence:
        minutes: 0
        weekdays:
        - "weekdays"
        - "weekdays"
        pattern: "pattern"
        days:
        - "days"
        - "days"
      time: "time"
      enabled: true
  IpsUpdateScheduleRequestEdit:
    type: "object"
    properties:
      enabled:
        type: "boolean"
        description: "Enable/Disable IPS Update Schedule."
      recurrence:
        $ref: "#/definitions/IpsUpdateScheduleDayRecurrence"
      time:
        type: "string"
        description: "Time in format HH:mm."
    example:
      recurrence:
        minutes: 0
        weekdays:
        - "weekdays"
        - "weekdays"
        pattern: "pattern"
        days:
        - "days"
        - "days"
      time: "time"
      enabled: true
  IpsUpdateScheduleRequestShow:
    type: "object"
  KeepAliveReply:
    type: "object"
    properties:
      message:
        type: "string"
        description: "Operation status."
    example:
      message: "message"
  KeepAliveRequest:
    type: "object"
  LeaReply:
    type: "object"
    properties:
      access-permissions:
        type: "string"
        description: "Log reading permissions for the LEA client entity."
        enum:
        - "show all"
        - "hide all"
        - "by profile"
      administrator-profile:
        type: "string"
        description: "A profile to set the log reading permissions by for the client\
          \ entity."
      enabled:
        type: "boolean"
        description: "N/A"
    description: "Used to setup the LEA client entity."
    example:
      access-permissions: "show all"
      administrator-profile: "administrator-profile"
      enabled: true
  LeaRequest:
    type: "object"
    properties:
      access-permissions:
        type: "string"
        description: "Log reading permissions for the LEA client entity."
        default: "show all"
        enum:
        - "show all"
        - "hide all"
        - "by profile"
      administrator-profile:
        type: "string"
        description: "A profile to set the log reading permissions by for the client\
          \ entity."
        enum:
        - "read only all"
        - "read write all"
        - "super user"
      enabled:
        type: "boolean"
        description: "Whether to enable this client entity on the Opsec Application."
    description: "Used to setup the LEA client entity."
    example:
      access-permissions: "show all"
      administrator-profile: "read only all"
      enabled: true
  LocalDomainEditReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      domain-type:
        type: "string"
        description: "N/A"
        enum:
        - "mds"
        - "data domain"
        - "domain"
        - "global domain"
      global-domain-assignments:
        type: "array"
        description: "N/A"
        items:
          $ref: "#/definitions/GlobalAssignmentWithGlobalReply"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      servers:
        type: "array"
        description: "Domain servers."
        items:
          $ref: "#/definitions/BaseDomainServerReply"
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      tasks:
        type: "array"
        description: "Asynchronous task unique identifiers. This field is an alternative\
          \ to all the fields presented below and is populated if 'set-domain' command\
          \ was executed asynchronously. This happens when 'servers' field was provided\
          \ in the request."
        items:
          $ref: "#/definitions/ApiTaskReply"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "aquamarine"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      servers:
      - multi-domain-server: "multi-domain-server"
        ipv4-address: "ipv4-address"
        name: "name"
        skip-start-domain-server: true
        active: true
        type: "management server"
        ipv6-address: "ipv6-address"
      - multi-domain-server: "multi-domain-server"
        ipv4-address: "ipv4-address"
        name: "name"
        skip-start-domain-server: true
        active: true
        type: "management server"
        ipv6-address: "ipv6-address"
      domain-type: "mds"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      global-domain-assignments:
      - global-threat-prevention-policy: "global-threat-prevention-policy"
        comments: "comments"
        color: "aquamarine"
        global-domain:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        icon: "icon"
        meta-info:
          creator: "creator"
          last-modify-time:
            iso-8601: "iso-8601"
            posix: 0
          validation-state: "ok"
          creation-time:
            iso-8601: "iso-8601"
            posix: 0
          lock: "unlocked"
          last-modifier: "last-modifier"
        type: "type"
        tags:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        uid: "uid"
        global-access-policy: "global-access-policy"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        assignment-status: "not assigned"
        manage-protection-actions: true
        assignment-up-to-date:
          iso-8601: "iso-8601"
          posix: 0
        read-only: true
      - global-threat-prevention-policy: "global-threat-prevention-policy"
        comments: "comments"
        color: "aquamarine"
        global-domain:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        icon: "icon"
        meta-info:
          creator: "creator"
          last-modify-time:
            iso-8601: "iso-8601"
            posix: 0
          validation-state: "ok"
          creation-time:
            iso-8601: "iso-8601"
            posix: 0
          lock: "unlocked"
          last-modifier: "last-modifier"
        type: "type"
        tags:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        uid: "uid"
        global-access-policy: "global-access-policy"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        assignment-status: "not assigned"
        manage-protection-actions: true
        assignment-up-to-date:
          iso-8601: "iso-8601"
          posix: 0
        read-only: true
      read-only: true
      tasks:
      - task-id: "task-id"
      - task-id: "task-id"
  LocalDomainReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      domain-type:
        type: "string"
        description: "N/A"
        enum:
        - "mds"
        - "data domain"
        - "domain"
        - "global domain"
      global-domain-assignments:
        type: "array"
        description: "N/A"
        items:
          $ref: "#/definitions/GlobalAssignmentWithGlobalReply"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      servers:
        type: "array"
        description: "Domain servers."
        items:
          $ref: "#/definitions/BaseDomainServerReply"
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "aquamarine"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      servers:
      - multi-domain-server: "multi-domain-server"
        ipv4-address: "ipv4-address"
        name: "name"
        skip-start-domain-server: true
        active: true
        type: "management server"
        ipv6-address: "ipv6-address"
      - multi-domain-server: "multi-domain-server"
        ipv4-address: "ipv4-address"
        name: "name"
        skip-start-domain-server: true
        active: true
        type: "management server"
        ipv6-address: "ipv6-address"
      domain-type: "mds"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      global-domain-assignments:
      - global-threat-prevention-policy: "global-threat-prevention-policy"
        comments: "comments"
        color: "aquamarine"
        global-domain:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        icon: "icon"
        meta-info:
          creator: "creator"
          last-modify-time:
            iso-8601: "iso-8601"
            posix: 0
          validation-state: "ok"
          creation-time:
            iso-8601: "iso-8601"
            posix: 0
          lock: "unlocked"
          last-modifier: "last-modifier"
        type: "type"
        tags:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        uid: "uid"
        global-access-policy: "global-access-policy"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        assignment-status: "not assigned"
        manage-protection-actions: true
        assignment-up-to-date:
          iso-8601: "iso-8601"
          posix: 0
        read-only: true
      - global-threat-prevention-policy: "global-threat-prevention-policy"
        comments: "comments"
        color: "aquamarine"
        global-domain:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        icon: "icon"
        meta-info:
          creator: "creator"
          last-modify-time:
            iso-8601: "iso-8601"
            posix: 0
          validation-state: "ok"
          creation-time:
            iso-8601: "iso-8601"
            posix: 0
          lock: "unlocked"
          last-modifier: "last-modifier"
        type: "type"
        tags:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        uid: "uid"
        global-access-policy: "global-access-policy"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        assignment-status: "not assigned"
        manage-protection-actions: true
        assignment-up-to-date:
          iso-8601: "iso-8601"
          posix: 0
        read-only: true
      read-only: true
  LocalDomainRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name."
      servers:
        $ref: "#/definitions/add"
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      servers:
        add: "add"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      details-level: "standard"
      tags:
        add: "add"
  LocalDomainRequestNew:
    type: "object"
    required:
    - "name"
    - "servers"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      servers:
        $ref: "#/definitions/LocalDomainServerRequest"
    example:
      comments: "comments"
      servers:
        ip-address: "ip-address"
        multi-domain-server: "multi-domain-server"
        ipv4-address: "ipv4-address"
        name: "name"
        skip-start-domain-server: false
        active: true
        type: "management server"
        ipv6-address: "ipv6-address"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      details-level: "standard"
  LocalDomainServerRequest:
    type: "object"
    required:
    - "ip-address"
    - "multi-domain-server"
    - "name"
    properties:
      active:
        type: "boolean"
        description: "Activate domain server. Only one domain server is allowed to\
          \ be active."
        default: true
      ip-address:
        type: "string"
        description: "IPv4 or IPv6 address. If both addresses are required use ipv4-address\
          \ and ipv6-address fields explicitly."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      multi-domain-server:
        type: "string"
        description: "Multi Domain server name or UID."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      skip-start-domain-server:
        type: "boolean"
        description: "Set this value to be true to prevent starting the new created\
          \ domain."
        default: false
      type:
        type: "string"
        description: "Domain server type."
        enum:
        - "management server"
        - "log server"
    description: "Domain servers."
    example:
      ip-address: "ip-address"
      multi-domain-server: "multi-domain-server"
      ipv4-address: "ipv4-address"
      name: "name"
      skip-start-domain-server: false
      active: true
      type: "management server"
      ipv6-address: "ipv6-address"
  LoginMessageReply:
    type: "object"
    properties:
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      header:
        type: "string"
        description: "Login message header."
      message:
        type: "string"
        description: "Login message body."
      show-message:
        type: "boolean"
        description: "Whether to show login message."
      type:
        type: "string"
        description: "Type of the object."
      warning:
        type: "boolean"
        description: "Add warning sign."
    description: "Login message."
    example:
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      header: "header"
      warning: true
      show-message: true
      message: "message"
      type: "type"
  LoginMessageRequestSet:
    type: "object"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      header:
        type: "string"
        description: "Login message header."
      message:
        type: "string"
        description: "Login message body."
      show-message:
        type: "boolean"
        description: "Whether to show login message."
      warning:
        type: "boolean"
        description: "Add warning sign."
    example:
      header: "header"
      warning: true
      show-message: true
      details-level: "standard"
      message: "message"
  LoginMessageRequestShow:
    type: "object"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
    example:
      details-level: "standard"
  LogsSettingsReply:
    type: "object"
    properties:
      alert-when-free-disk-space-below:
        type: "boolean"
        description: "N/A"
      alert-when-free-disk-space-below-metrics:
        type: "string"
        description: "N/A"
        enum:
        - "percent"
        - "mbytes"
      alert-when-free-disk-space-below-threshold:
        type: "integer"
        description: "N/A"
      alert-when-free-disk-space-below-type:
        type: "string"
        description: "N/A"
        enum:
        - "none"
        - "log"
        - "popup alert"
        - "mail alert"
        - "snmp trap alert"
        - "user defined alert no.1"
        - "user defined alert no.2"
        - "user defined alert no.3"
      before-delete-keep-logs-from-the-last-days:
        type: "boolean"
        description: "N/A"
      before-delete-keep-logs-from-the-last-days-threshold:
        type: "integer"
        description: "N/A"
      before-delete-run-script:
        type: "boolean"
        description: "N/A"
      before-delete-run-script-command:
        type: "string"
        description: "N/A"
      delete-index-files-older-than-days:
        type: "boolean"
        description: "N/A"
      delete-index-files-older-than-days-threshold:
        type: "integer"
        description: "N/A"
      delete-index-files-when-index-size-above:
        type: "boolean"
        description: "N/A"
      delete-index-files-when-index-size-above-metrics:
        type: "string"
        description: "N/A"
        enum:
        - "percent"
        - "mbytes"
      delete-index-files-when-index-size-above-threshold:
        type: "integer"
        description: "N/A"
      delete-when-free-disk-space-below:
        type: "boolean"
        description: "N/A"
      delete-when-free-disk-space-below-metrics:
        type: "string"
        description: "N/A"
        enum:
        - "percent"
        - "mbytes"
      delete-when-free-disk-space-below-threshold:
        type: "integer"
        description: "N/A"
      detect-new-citrix-ica-application-names:
        type: "boolean"
        description: "N/A"
      forward-logs-to-log-server:
        type: "boolean"
        description: "N/A"
      forward-logs-to-log-server-name:
        type: "string"
        description: "N/A"
      forward-logs-to-log-server-schedule-name:
        type: "string"
        description: "N/A"
      perform-log-rotate-before-log-forwarding:
        type: "boolean"
        description: "N/A"
      reject-connections-when-free-disk-space-below-threshold:
        type: "boolean"
        description: "N/A"
      reserve-for-packet-capture-metrics:
        type: "string"
        description: "N/A"
        enum:
        - "percent"
        - "mbytes"
      reserve-for-packet-capture-threshold:
        type: "integer"
        description: "N/A"
      rotate-log-by-file-size:
        type: "boolean"
        description: "N/A"
      rotate-log-file-size-threshold:
        type: "integer"
        description: "N/A"
      rotate-log-on-schedule:
        type: "boolean"
        description: "N/A"
      rotate-log-schedule-name:
        type: "string"
        description: "N/A"
      stop-logging-when-free-disk-space-below:
        type: "boolean"
        description: "N/A"
      stop-logging-when-free-disk-space-below-metrics:
        type: "string"
        description: "N/A"
        enum:
        - "percent"
        - "mbytes"
      stop-logging-when-free-disk-space-below-threshold:
        type: "integer"
        description: "N/A"
      turn-on-qos-logging:
        type: "boolean"
        description: "N/A"
      update-account-log-every:
        type: "integer"
        description: "N/A"
    description: "N/A"
    example:
      alert-when-free-disk-space-below-threshold: 7
      delete-when-free-disk-space-below-threshold: 4
      stop-logging-when-free-disk-space-below-threshold: 1
      delete-index-files-older-than-days: true
      reject-connections-when-free-disk-space-below-threshold: true
      before-delete-run-script: true
      stop-logging-when-free-disk-space-below: true
      forward-logs-to-log-server-schedule-name: "forward-logs-to-log-server-schedule-name"
      rotate-log-on-schedule: true
      alert-when-free-disk-space-below-type: "none"
      rotate-log-by-file-size: true
      rotate-log-schedule-name: "rotate-log-schedule-name"
      delete-index-files-when-index-size-above-threshold: 2
      before-delete-keep-logs-from-the-last-days-threshold: 9
      forward-logs-to-log-server-name: "forward-logs-to-log-server-name"
      alert-when-free-disk-space-below-metrics: "percent"
      delete-index-files-older-than-days-threshold: 3
      update-account-log-every: 1
      before-delete-run-script-command: "before-delete-run-script-command"
      forward-logs-to-log-server: true
      reserve-for-packet-capture-threshold: 7
      rotate-log-file-size-threshold: 1
      before-delete-keep-logs-from-the-last-days: true
      delete-when-free-disk-space-below-metrics: "percent"
      stop-logging-when-free-disk-space-below-metrics: "percent"
      turn-on-qos-logging: true
      delete-index-files-when-index-size-above: true
      alert-when-free-disk-space-below: true
      perform-log-rotate-before-log-forwarding: true
      delete-index-files-when-index-size-above-metrics: "percent"
      detect-new-citrix-ica-application-names: true
      reserve-for-packet-capture-metrics: "percent"
      delete-when-free-disk-space-below: true
  LogsSettingsRequest:
    type: "object"
    properties:
      alert-when-free-disk-space-below:
        type: "boolean"
        description: "N/A"
      alert-when-free-disk-space-below-threshold:
        type: "integer"
        description: "N/A"
      alert-when-free-disk-space-below-type:
        type: "string"
        description: "N/A"
        enum:
        - "none"
        - "log"
        - "popup alert"
        - "mail alert"
        - "snmp trap alert"
        - "user defined alert no.1"
        - "user defined alert no.2"
        - "user defined alert no.3"
      before-delete-keep-logs-from-the-last-days:
        type: "boolean"
        description: "N/A"
      before-delete-keep-logs-from-the-last-days-threshold:
        type: "integer"
        description: "N/A"
      before-delete-run-script:
        type: "boolean"
        description: "N/A"
      before-delete-run-script-command:
        type: "string"
        description: "N/A"
      delete-index-files-older-than-days:
        type: "boolean"
        description: "N/A"
      delete-index-files-older-than-days-threshold:
        type: "integer"
        description: "N/A"
      delete-index-files-when-index-size-above:
        type: "boolean"
        description: "N/A"
      delete-index-files-when-index-size-above-threshold:
        type: "integer"
        description: "N/A"
      delete-when-free-disk-space-below:
        type: "boolean"
        description: "N/A"
      delete-when-free-disk-space-below-threshold:
        type: "integer"
        description: "N/A"
      detect-new-citrix-ica-application-names:
        type: "boolean"
        description: "N/A"
      forward-logs-to-log-server:
        type: "boolean"
        description: "N/A"
      forward-logs-to-log-server-name:
        type: "string"
        description: "N/A"
      forward-logs-to-log-server-schedule-name:
        type: "string"
        description: "N/A"
      free-disk-space-metrics:
        type: "string"
        description: "N/A"
        enum:
        - "mbytes"
        - "percent"
      perform-log-rotate-before-log-forwarding:
        type: "boolean"
        description: "N/A"
      reject-connections-when-free-disk-space-below-threshold:
        type: "boolean"
        description: "N/A"
      reserve-for-packet-capture-metrics:
        type: "string"
        description: "N/A"
        enum:
        - "percent"
        - "mbytes"
      reserve-for-packet-capture-threshold:
        type: "integer"
        description: "N/A"
      rotate-log-by-file-size:
        type: "boolean"
        description: "N/A"
      rotate-log-file-size-threshold:
        type: "integer"
        description: "N/A"
      rotate-log-on-schedule:
        type: "boolean"
        description: "N/A"
      rotate-log-schedule-name:
        type: "string"
        description: "N/A"
      stop-logging-when-free-disk-space-below:
        type: "boolean"
        description: "N/A"
      stop-logging-when-free-disk-space-below-threshold:
        type: "integer"
        description: "N/A"
      turn-on-qos-logging:
        type: "boolean"
        description: "N/A"
      update-account-log-every:
        type: "integer"
        description: "N/A"
    description: "N/A"
    example:
      alert-when-free-disk-space-below-threshold: 5
      delete-when-free-disk-space-below-threshold: 3
      stop-logging-when-free-disk-space-below-threshold: 7
      delete-index-files-older-than-days: true
      free-disk-space-metrics: "mbytes"
      reject-connections-when-free-disk-space-below-threshold: true
      before-delete-run-script: true
      stop-logging-when-free-disk-space-below: true
      forward-logs-to-log-server-schedule-name: "forward-logs-to-log-server-schedule-name"
      rotate-log-on-schedule: true
      alert-when-free-disk-space-below-type: "none"
      rotate-log-by-file-size: true
      rotate-log-schedule-name: "rotate-log-schedule-name"
      delete-index-files-when-index-size-above-threshold: 9
      before-delete-keep-logs-from-the-last-days-threshold: 2
      forward-logs-to-log-server-name: "forward-logs-to-log-server-name"
      delete-index-files-older-than-days-threshold: 7
      update-account-log-every: 1
      before-delete-run-script-command: "before-delete-run-script-command"
      forward-logs-to-log-server: true
      reserve-for-packet-capture-threshold: 2
      rotate-log-file-size-threshold: 4
      before-delete-keep-logs-from-the-last-days: true
      turn-on-qos-logging: true
      delete-index-files-when-index-size-above: true
      alert-when-free-disk-space-below: true
      perform-log-rotate-before-log-forwarding: true
      detect-new-citrix-ica-application-names: true
      reserve-for-packet-capture-metrics: "percent"
      delete-when-free-disk-space-below: true
  MailSettingsReply:
    type: "object"
    properties:
      add-customized-text-to-email-body:
        type: "boolean"
        description: "Add customized text to the malicious email body."
      add-email-subject-prefix:
        type: "boolean"
        description: "Add a prefix to the malicious email subject."
      add-x-header-to-email:
        type: "boolean"
        description: "Add an X-Header to the malicious email."
      email-action:
        type: "string"
        description: "Block - block the entire malicious email<br>Allow - pass the\
          \ malicious email and apply email changes (like: remove attachments and\
          \ links, add x-header, etc...)."
        enum:
        - "allow"
        - "block"
      email-body-customized-text:
        type: "string"
        description: "Customized text for the malicious email body.<br> Available\
          \ predefined fields:<br> $verdicts$ - the malicious/error attachments/links\
          \ verdict."
      email-subject-prefix-text:
        type: "string"
        description: "Prefix for the malicious email subject."
      failed-to-scan-attachments-text:
        type: "string"
        description: "Replace attachments that failed to be scanned with this text.<br>\
          \ Available predefined fields:<br> $filename$ - the malicious file name.<br>\
          \ $md5$ - MD5 of the malicious file."
      malicious-attachments-text:
        type: "string"
        description: "Replace malicious attachments with this text.<br> Available\
          \ predefined fields:<br> $filename$ - the malicious file name.<br> $md5$\
          \ - MD5 of the malicious file."
      malicious-links-text:
        type: "string"
        description: "Replace malicious links with this text.<br> Available predefined\
          \ fields:<br> $neutralized_url$ - neutralized malicious link."
      remove-attachments-and-links:
        type: "boolean"
        description: "Remove attachments and links from the malicious email."
      send-copy:
        type: "boolean"
        description: "Send a copy of the malicious email to the recipient list."
      send-copy-list:
        type: "array"
        description: "Recipient list to send a copy of the malicious email."
        items:
          type: "string"
    description: "Malicious Mail Policy for MTA Gateways."
    example:
      malicious-attachments-text: "malicious-attachments-text"
      send-copy-list:
      - "send-copy-list"
      - "send-copy-list"
      add-customized-text-to-email-body: true
      email-subject-prefix-text: "email-subject-prefix-text"
      malicious-links-text: "malicious-links-text"
      email-action: "allow"
      send-copy: true
      add-email-subject-prefix: true
      add-x-header-to-email: true
      email-body-customized-text: "email-body-customized-text"
      remove-attachments-and-links: true
      failed-to-scan-attachments-text: "failed-to-scan-attachments-text"
  MailSettingsRequestEdit:
    type: "object"
    properties:
      add-customized-text-to-email-body:
        type: "boolean"
        description: "Add customized text to the malicious email body."
      add-email-subject-prefix:
        type: "boolean"
        description: "Add a prefix to the malicious email subject."
      add-x-header-to-email:
        type: "boolean"
        description: "Add an X-Header to the malicious email."
      email-action:
        type: "string"
        description: "Block - block the entire malicious email<br>Allow - pass the\
          \ malicious email and apply email changes (like: remove attachments and\
          \ links, add x-header, etc...)."
        enum:
        - "allow"
        - "block"
      email-body-customized-text:
        type: "string"
        description: "Customized text for the malicious email body.<br> Available\
          \ predefined fields:<br> $verdicts$ - the malicious/error attachments/links\
          \ verdict."
      email-subject-prefix-text:
        type: "string"
        description: "Prefix for the malicious email subject."
      failed-to-scan-attachments-text:
        type: "string"
        description: "Replace attachments that failed to be scanned with this text.<br>\
          \ Available predefined fields:<br> $filename$ - the malicious file name.<br>\
          \ $md5$ - MD5 of the malicious file."
      malicious-attachments-text:
        type: "string"
        description: "Replace malicious attachments with this text.<br> Available\
          \ predefined fields:<br> $filename$ - the malicious file name.<br> $md5$\
          \ - MD5 of the malicious file."
      malicious-links-text:
        type: "string"
        description: "Replace malicious links with this text.<br> Available predefined\
          \ fields:<br> $neutralized_url$ - neutralized malicious link."
      remove-attachments-and-links:
        type: "boolean"
        description: "Remove attachments and links from the malicious email."
      send-copy:
        type: "boolean"
        description: "Send a copy of the malicious email to the recipient list."
      send-copy-list:
        $ref: "#/definitions/add"
    description: "Malicious Mail Policy for MTA Gateways."
    example:
      malicious-attachments-text: "malicious-attachments-text"
      send-copy-list:
        add: "add"
      add-customized-text-to-email-body: true
      email-subject-prefix-text: "email-subject-prefix-text"
      malicious-links-text: "malicious-links-text"
      email-action: "allow"
      send-copy: true
      add-email-subject-prefix: true
      add-x-header-to-email: true
      email-body-customized-text: "email-body-customized-text"
      remove-attachments-and-links: true
      failed-to-scan-attachments-text: "failed-to-scan-attachments-text"
  MailSettingsRequestNew:
    type: "object"
    properties:
      add-customized-text-to-email-body:
        type: "boolean"
        description: "Add customized text to the malicious email body."
        default: false
      add-email-subject-prefix:
        type: "boolean"
        description: "Add a prefix to the malicious email subject."
        default: false
      add-x-header-to-email:
        type: "boolean"
        description: "Add an X-Header to the malicious email."
        default: false
      email-action:
        type: "string"
        description: "Block - block the entire malicious email<br>Allow - pass the\
          \ malicious email and apply email changes (like: remove attachments and\
          \ links, add x-header, etc...)."
        default: "Allow"
        enum:
        - "allow"
        - "block"
      email-body-customized-text:
        type: "string"
        description: "Customized text for the malicious email body.<br> Available\
          \ predefined fields:<br> $verdicts$ - the malicious/error attachments/links\
          \ verdict."
      email-subject-prefix-text:
        type: "string"
        description: "Prefix for the malicious email subject."
      failed-to-scan-attachments-text:
        type: "string"
        description: "Replace attachments that failed to be scanned with this text.<br>\
          \ Available predefined fields:<br> $filename$ - the malicious file name.<br>\
          \ $md5$ - MD5 of the malicious file."
      malicious-attachments-text:
        type: "string"
        description: "Replace malicious attachments with this text.<br> Available\
          \ predefined fields:<br> $filename$ - the malicious file name.<br> $md5$\
          \ - MD5 of the malicious file."
      malicious-links-text:
        type: "string"
        description: "Replace malicious links with this text.<br> Available predefined\
          \ fields:<br> $neutralized_url$ - neutralized malicious link."
      remove-attachments-and-links:
        type: "boolean"
        description: "Remove attachments and links from the malicious email."
        default: true
      send-copy:
        type: "boolean"
        description: "Send a copy of the malicious email to the recipient list."
        default: false
      send-copy-list:
        type: "string"
        description: "Recipient list to send a copy of the malicious email."
    description: "Malicious Mail Policy for MTA Gateways."
    example:
      malicious-attachments-text: "malicious-attachments-text"
      send-copy-list: "send-copy-list"
      add-customized-text-to-email-body: false
      email-subject-prefix-text: "email-subject-prefix-text"
      malicious-links-text: "malicious-links-text"
      email-action: "Allow"
      send-copy: false
      add-email-subject-prefix: false
      add-x-header-to-email: false
      email-body-customized-text: "email-body-customized-text"
      remove-attachments-and-links: true
      failed-to-scan-attachments-text: "failed-to-scan-attachments-text"
  ManualAttachment:
    type: "object"
    required:
    - "layer"
    - "uid"
    properties:
      layer:
        type: "string"
        description: "The layer of the threat rule to which the group is to be attached."
      name:
        type: "string"
        description: "The name of the threat rule to which the group is to be attached."
      position:
        type: "integer"
        description: "Position in the rulebase."
      rule-number:
        type: "string"
        description: "The rule-number of the threat rule to which the group is to\
          \ be attached."
      uid:
        type: "string"
        description: "The uid of the threat rule to which the group is to be attached."
    description: "The threat rules to apply this group on in the case of apply-on\
      \ manually-select-threat-rules."
    example:
      uid: "uid"
      rule-number: "rule-number"
      name: "name"
      position: 0
      layer: "layer"
  MdsReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      domains:
        type: "array"
        description: "Collection of Domain objects identified by the name or UID.\
          \ How much details are returned depends on the details-level field of the\
          \ request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      global-domains:
        type: "array"
        description: "Collection of Global domain objects identified by the name or\
          \ UID. How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      hardware:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      ip-pool-first:
        type: "string"
        description: "Start of IP address pool range."
      ip-pool-last:
        type: "string"
        description: "End of IP address pool range."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      os:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      platform:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      server-type:
        type: "string"
        description: "Type of the management server."
        enum:
        - "multi-domain server"
        - "multi-domain log server"
      sic-name:
        type: "string"
        description: "Name of the Secure Internal Connection Trust."
      sic-state:
        type: "string"
        description: "State the Secure Internal Connection Trust."
        enum:
        - "uninitialized"
        - "initialized but trust not established"
        - "trust established"
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
      version:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
    example:
      global-domains:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      comments: "comments"
      color: "aquamarine"
      os:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      sic-state: "uninitialized"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      domains:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      server-type: "multi-domain server"
      type: "type"
      version:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      platform:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      ipv6-address: "ipv6-address"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      ip-pool-last: "ip-pool-last"
      ipv4-address: "ipv4-address"
      ip-pool-first: "ip-pool-first"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      sic-name: "sic-name"
      read-only: true
      hardware:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  MetaInfoForTopLevelReply:
    type: "object"
    properties:
      creation-time:
        $ref: "#/definitions/ApiDateReply"
      creator:
        type: "string"
        description: "N/A"
      last-modifier:
        type: "string"
        description: "N/A"
      last-modify-time:
        $ref: "#/definitions/ApiDateReply"
      lock:
        type: "string"
        description: "Object lock state. It's not allowed to edit objects locked by\
          \ other session."
        enum:
        - "unlocked"
        - "locked by current session"
        - "locked by other session"
        - "prevented by current session"
        - "prevented by other session"
      validation-state:
        type: "string"
        description: "N/A"
        enum:
        - "ok"
        - "info"
        - "warning"
        - "error"
    description: "Object metadata."
    example:
      creator: "creator"
      last-modify-time:
        iso-8601: "iso-8601"
        posix: 0
      validation-state: "ok"
      creation-time:
        iso-8601: "iso-8601"
        posix: 0
      lock: "unlocked"
      last-modifier: "last-modifier"
  MultiCastAddressRangeReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      ipv4-address-first:
        type: "string"
        description: "First IPv4 address in the range."
      ipv4-address-last:
        type: "string"
        description: "Last IPv4 address in the range."
      ipv6-address-first:
        type: "string"
        description: "First IPv6 address in the range."
      ipv6-address-last:
        type: "string"
        description: "Last IPv6 address in the range."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "aquamarine"
      ipv4-address-last: "ipv4-address-last"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      ipv6-address-last: "ipv6-address-last"
      name: "name"
      ipv6-address-first: "ipv6-address-first"
      read-only: true
      ipv4-address-first: "ipv4-address-first"
  MultiCastAddressRangeRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      ip-address:
        type: "string"
        description: "IPv4 or IPv6 address. If both addresses are required use ipv4-address\
          \ and ipv6-address fields explicitly."
      ip-address-first:
        type: "string"
        description: "First IP address in the range. If both IPv4 and IPv6 address\
          \ ranges are required, use the ipv4-address-first and the ipv6-address-first\
          \ fields instead."
      ip-address-last:
        type: "string"
        description: "Last IP address in the range. If both IPv4 and IPv6 address\
          \ ranges are required, use the ipv4-address-first and the ipv6-address-first\
          \ fields instead."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv4-address-first:
        type: "string"
        description: "First IPv4 address in the range."
      ipv4-address-last:
        type: "string"
        description: "Last IPv4 address in the range."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      ipv6-address-first:
        type: "string"
        description: "First IPv6 address in the range."
      ipv6-address-last:
        type: "string"
        description: "Last IPv6 address in the range."
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "black"
      ignore-warnings: false
      ipv4-address-last: "ipv4-address-last"
      groups:
        add: "add"
      new-name: "new-name"
      ipv6-address: "ipv6-address"
      tags:
        add: "add"
      uid: "uid"
      ip-address: "ip-address"
      ignore-errors: false
      ipv4-address: "ipv4-address"
      ipv6-address-last: "ipv6-address-last"
      name: "name"
      ipv6-address-first: "ipv6-address-first"
      details-level: "standard"
      ip-address-first: "ip-address-first"
      ip-address-last: "ip-address-last"
      ipv4-address-first: "ipv4-address-first"
  MultiCastAddressRangeRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      ip-address:
        type: "string"
        description: "IPv4 or IPv6 address. If both addresses are required use ipv4-address\
          \ and ipv6-address fields explicitly."
      ip-address-first:
        type: "string"
        description: "First IP address in the range. If both IPv4 and IPv6 address\
          \ ranges are required, use the ipv4-address-first and the ipv6-address-first\
          \ fields instead."
      ip-address-last:
        type: "string"
        description: "Last IP address in the range. If both IPv4 and IPv6 address\
          \ ranges are required, use the ipv4-address-first and the ipv6-address-first\
          \ fields instead."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv4-address-first:
        type: "string"
        description: "First IPv4 address in the range."
      ipv4-address-last:
        type: "string"
        description: "Last IPv4 address in the range."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      ipv6-address-first:
        type: "string"
        description: "First IPv6 address in the range."
      ipv6-address-last:
        type: "string"
        description: "Last IPv6 address in the range."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      set-if-exists:
        type: "boolean"
        description: "If another object with the same identifier already exists, it\
          \ will be updated. The command behaviour will be the same as if originally\
          \ a set command was called. Pay attention that original object's fields\
          \ will be overwritten by the fields provided in the request payload!"
        default: false
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      set-if-exists: false
      comments: "comments"
      color: "black"
      ignore-warnings: false
      ipv4-address-last: "ipv4-address-last"
      groups: "groups"
      ipv6-address: "ipv6-address"
      tags: "tags"
      ip-address: "ip-address"
      ignore-errors: false
      ipv4-address: "ipv4-address"
      ipv6-address-last: "ipv6-address-last"
      name: "name"
      ipv6-address-first: "ipv6-address-first"
      details-level: "standard"
      ip-address-first: "ip-address-first"
      ip-address-last: "ip-address-last"
      ipv4-address-first: "ipv4-address-first"
  MultiCastAddressRangeStandardReply:
    type: "object"
    properties:
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      ipv4-address-first:
        type: "string"
        description: "First IPv4 address in the range."
      ipv4-address-last:
        type: "string"
        description: "Last IPv4 address in the range."
      ipv6-address-first:
        type: "string"
        description: "First IPv6 address in the range."
      ipv6-address-last:
        type: "string"
        description: "Last IPv6 address in the range."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      ipv4-address-last: "ipv4-address-last"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      ipv6-address-last: "ipv6-address-last"
      name: "name"
      ipv6-address-first: "ipv6-address-first"
      type: "type"
      ipv4-address-first: "ipv4-address-first"
  MultiValueAccessLayer:
    type: "object"
    properties:
      add:
        type: "array"
        description: "Collection of Access layer objects to be added identified by\
          \ the name or UID."
        items:
          $ref: "#/definitions/AddWithPosition"
      remove:
        type: "array"
        description: "Collection of Access layer objects to be removed identified\
          \ by the name or UID."
        items:
          type: "string"
      value:
        type: "array"
        description: "Collection of Access layer objects to be set identified by the\
          \ name or UID. Replaces existing Access layers."
        items:
          type: "string"
    description: "Access policy layers."
    example:
      add:
      - name: "name"
        position: 0
      - name: "name"
        position: 0
      value:
      - "value"
      - "value"
      remove:
      - "remove"
      - "remove"
  MultiValueThreatLayer:
    type: "object"
    properties:
      add:
        type: "array"
        description: "Collection of Threat layer objects to be added identified by\
          \ the name or UID."
        items:
          $ref: "#/definitions/AddWithPosition"
      remove:
        type: "array"
        description: "Collection of Threat layer objects to be removed identified\
          \ by the name or UID."
        items:
          type: "string"
      value:
        type: "array"
        description: "Collection of Threat layer objects to be set identified by the\
          \ name or UID. Replaces existing Threat layers."
        items:
          type: "string"
    description: "Threat policy layers."
    example:
      add:
      - name: "name"
        position: 0
      - name: "name"
        position: 0
      value:
      - "value"
      - "value"
      remove:
      - "remove"
      - "remove"
  MulticastAddressRangeQueryReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      objects:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/MultiCastAddressRangeStandardReply"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
    example:
      total: 1
      objects:
      - uid: "uid"
        ipv4-address-last: "ipv4-address-last"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        ipv6-address-last: "ipv6-address-last"
        name: "name"
        ipv6-address-first: "ipv6-address-first"
        type: "type"
        ipv4-address-first: "ipv4-address-first"
      - uid: "uid"
        ipv4-address-last: "ipv4-address-last"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        ipv6-address-last: "ipv6-address-last"
        name: "name"
        ipv6-address-first: "ipv6-address-first"
        type: "type"
        ipv4-address-first: "ipv4-address-first"
      from: 0
      to: 6
  NatRuleIdentifierRequest:
    type: "object"
    required:
    - "package"
    - "uid"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      package:
        type: "string"
        description: "Name of the package."
      rule-number:
        type: "string"
        description: "Rule number."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      package: "package"
      rule-number: "rule-number"
      details-level: "standard"
  NatRuleReply:
    type: "object"
    properties:
      auto-generated:
        type: "boolean"
        description: "N/A"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      enabled:
        type: "boolean"
        description: "Enable/Disable the rule."
      install-on:
        type: "array"
        description: "Which gateway, identified by the name or UID, to install the\
          \ policy. How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      method:
        type: "string"
        description: "Nat method."
        enum:
        - "static"
        - "hide"
        - "nat64"
        - "nat46"
      original-destination:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      original-service:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      original-source:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      package:
        type: "string"
        description: "N/A"
      translated-destination:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      translated-service:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      translated-source:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      package: "package"
      method: "static"
      auto-generated: true
      translated-destination:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      original-service:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      translated-source:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      translated-service:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      type: "type"
      enabled: true
      uid: "uid"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      original-destination:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      original-source:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      install-on:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  NatRuleRequestEdit:
    type: "object"
    required:
    - "package"
    - "uid"
    properties:
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      enabled:
        type: "boolean"
        description: "Enable/Disable the rule."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      install-on:
        $ref: "#/definitions/add"
      method:
        type: "string"
        description: "Nat method."
        enum:
        - "static"
        - "hide"
        - "nat64"
        - "nat46"
      new-position:
        type: "integer"
        description: "New position in the rulebase."
      original-destination:
        type: "string"
        description: "Original destination."
      original-service:
        type: "string"
        description: "Original service."
      original-source:
        type: "string"
        description: "Original source."
      package:
        type: "string"
        description: "Name of the package."
      rule-number:
        type: "string"
        description: "Rule number."
      translated-destination:
        type: "string"
        description: "Translated  destination."
      translated-service:
        type: "string"
        description: "Translated  service."
      translated-source:
        type: "string"
        description: "Translated  source."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      package: "package"
      method: "static"
      ignore-warnings: false
      translated-destination: "translated-destination"
      original-service: "original-service"
      translated-source: "translated-source"
      translated-service: "translated-service"
      enabled: true
      uid: "uid"
      ignore-errors: false
      rule-number: "rule-number"
      original-destination: "original-destination"
      original-source: "original-source"
      details-level: "standard"
      install-on:
        add: "add"
      new-position: 0
  NatRuleRequestNew:
    type: "object"
    required:
    - "package"
    - "position"
    properties:
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      enabled:
        type: "boolean"
        description: "Enable/Disable the rule."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      install-on:
        type: "string"
        description: "Which Gateways identified by the name or UID to install the\
          \ policy on."
      method:
        type: "string"
        description: "Nat method."
        enum:
        - "static"
        - "hide"
        - "nat64"
        - "nat46"
      original-destination:
        type: "string"
        description: "Original destination."
      original-service:
        type: "string"
        description: "Original service."
      original-source:
        type: "string"
        description: "Original source."
      package:
        type: "string"
        description: "Name of the package."
      position:
        type: "integer"
        description: "Position in the rulebase."
      translated-destination:
        type: "string"
        description: "Translated  destination."
      translated-service:
        type: "string"
        description: "Translated  service."
      translated-source:
        type: "string"
        description: "Translated  source."
    example:
      comments: "comments"
      package: "package"
      method: "static"
      ignore-warnings: false
      translated-destination: "translated-destination"
      original-service: "original-service"
      translated-source: "translated-source"
      translated-service: "translated-service"
      enabled: true
      ignore-errors: false
      original-destination: "original-destination"
      original-source: "original-source"
      details-level: "standard"
      install-on: "install-on"
      position: 0
  NatSectionIdentifierRequest:
    type: "object"
    required:
    - "package"
    - "uid"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      name:
        type: "string"
        description: "Object name."
      package:
        type: "string"
        description: "Name of the package."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      package: "package"
      name: "name"
      details-level: "standard"
  NatSectionReply:
    type: "object"
    properties:
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      name: "name"
      read-only: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  NatSectionRequestEdit:
    type: "object"
    required:
    - "package"
    - "uid"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Section name."
      new-name:
        type: "string"
        description: "New name of the object."
      package:
        type: "string"
        description: "Name of the package."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      package: "package"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      details-level: "standard"
      new-name: "new-name"
  NatSectionRequestNew:
    type: "object"
    required:
    - "package"
    - "position"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      package:
        type: "string"
        description: "Name of the package."
      position:
        type: "integer"
        description: "Position in the rulebase."
    example:
      package: "package"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      details-level: "standard"
      position: 0
  NatSettingsReply:
    type: "object"
    properties:
      auto-rule:
        type: "boolean"
        description: "Whether to add automatic address translation rules."
      hide-behind:
        type: "string"
        description: "Hide behind method. This parameter is not required in case \"\
          method\" parameter is \"static\"."
        enum:
        - "gateway"
        - "ip-address"
      install-on:
        type: "string"
        description: "Which gateway should apply the NAT translation."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      method:
        type: "string"
        description: "NAT translation method."
        enum:
        - "hide"
        - "static"
    description: "NAT settings."
    example:
      ipv4-address: "ipv4-address"
      method: "hide"
      hide-behind: "gateway"
      install-on: "install-on"
      auto-rule: true
      ipv6-address: "ipv6-address"
  NatSettingsRequest:
    type: "object"
    required:
    - "auto-rule"
    - "ip-address"
    properties:
      auto-rule:
        type: "boolean"
        description: "Whether to add automatic address translation rules."
        default: false
      hide-behind:
        type: "string"
        description: "Hide behind method. This parameter is not required in case \"\
          method\" parameter is \"static\"."
        enum:
        - "gateway"
        - "ip-address"
      install-on:
        type: "string"
        description: "Which gateway should apply the NAT translation."
      ip-address:
        type: "string"
        description: "IPv4 or IPv6 address. If both addresses are required use ipv4-address\
          \ and ipv6-address fields explicitly. This parameter is not required in\
          \ case \"method\" parameter is \"hide\" and \"hide-behind\" parameter is\
          \ \"gateway\"."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      method:
        type: "string"
        description: "NAT translation method."
        enum:
        - "hide"
        - "static"
    description: "NAT settings."
    example:
      ip-address: "ip-address"
      ipv4-address: "ipv4-address"
      method: "hide"
      hide-behind: "gateway"
      install-on: "install-on"
      auto-rule: false
      ipv6-address: "ipv6-address"
  NetworkInterfaceReply:
    type: "object"
    properties:
      anti-spoofing:
        type: "boolean"
        description: "N/A"
      anti-spoofing-settings:
        $ref: "#/definitions/AntiSpoofingSettingsReply"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      icon:
        type: "string"
        description: "Object icon."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv4-mask-length:
        type: "integer"
        description: "IPv4 network mask length."
      ipv4-network-mask:
        type: "string"
        description: "IPv4 network mask."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      ipv6-mask-length:
        type: "integer"
        description: "IPv6 network mask length."
      ipv6-network-mask:
        type: "string"
        description: "IPv6 network mask."
      name:
        type: "string"
        description: "Interface name."
      security-zone:
        type: "boolean"
        description: "N/A"
      security-zone-settings:
        $ref: "#/definitions/SecurityZoneSettingsReply"
      topology:
        type: "string"
        description: "Topology configuration."
        enum:
        - "automatic"
        - "external"
        - "internal"
      topology-automatic-calculation:
        type: "string"
        description: "Shows the automatic topology calculation."
        enum:
        - "external"
        - "internal"
      topology-settings:
        $ref: "#/definitions/InternalTopologySettingsReply"
    example:
      ipv6-mask-length: 2
      comments: "comments"
      color: "aquamarine"
      ipv4-mask-length: 5
      topology: "automatic"
      icon: "icon"
      ipv6-address: "ipv6-address"
      security-zone: true
      ipv6-network-mask: "ipv6-network-mask"
      topology-settings:
        interface-leads-to-dmz: true
        specific-network: "specific-network"
        ip-address-behind-this-interface: "not defined"
      ipv4-address: "ipv4-address"
      topology-automatic-calculation: "external"
      anti-spoofing-settings:
        action: "prevent"
      name: "name"
      security-zone-settings:
        auto-calculated: true
        specific-zone: "specific-zone"
      ipv4-network-mask: "ipv4-network-mask"
      anti-spoofing: true
  NetworkInterfaceRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      anti-spoofing:
        type: "boolean"
        description: "N/A"
      anti-spoofing-settings:
        $ref: "#/definitions/AntiSpoofingSettingsRequest"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      ip-address:
        type: "string"
        description: "IPv4 or IPv6 address. If both addresses are required use ipv4-address\
          \ and ipv6-address fields explicitly."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv4-mask-length:
        type: "string"
        description: "IPv4 network mask length."
      ipv4-network-mask:
        type: "string"
        description: "IPv4 network address."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      ipv6-mask-length:
        type: "string"
        description: "IPv6 network mask length."
      ipv6-network-mask:
        type: "string"
        description: "IPv6 network address."
      mask-length:
        type: "string"
        description: "IPv4 or IPv6 network mask length."
      name:
        type: "string"
        description: "Object name."
      network-mask:
        type: "string"
        description: "IPv4 or IPv6 network mask. If both masks are required use ipv4-network-mask\
          \ and ipv6-network-mask fields explicitly. Instead of providing mask itself\
          \ it is possible to specify IPv4 or IPv6 mask length in mask-length field.\
          \ If both masks length are required use ipv4-mask-length and  ipv6-mask-length\
          \ fields explicitly."
      new-name:
        type: "string"
        description: "New name of the object."
      security-zone:
        type: "boolean"
        description: "N/A"
      security-zone-settings:
        $ref: "#/definitions/SecurityZoneSettingsRequest"
      tags:
        type: "object"
        description: "Collection of tag identifiers."
        properties: {}
      topology:
        type: "string"
        description: "N/A"
        enum:
        - "automatic"
        - "external"
        - "internal"
      topology-settings:
        $ref: "#/definitions/InternalTopologySettingsRequest"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      ipv6-mask-length: "ipv6-mask-length"
      comments: "comments"
      color: "black"
      ipv4-mask-length: "ipv4-mask-length"
      ignore-warnings: false
      topology: "automatic"
      new-name: "new-name"
      ipv6-address: "ipv6-address"
      tags: "{}"
      security-zone: true
      mask-length: "mask-length"
      uid: "uid"
      ip-address: "ip-address"
      ipv6-network-mask: "ipv6-network-mask"
      topology-settings:
        interface-leads-to-dmz: true
        specific-network: "specific-network"
        ip-address-behind-this-interface: "not defined"
      ignore-errors: false
      ipv4-address: "ipv4-address"
      anti-spoofing-settings:
        action: "prevent"
      name: "name"
      network-mask: "network-mask"
      security-zone-settings:
        auto-calculated: true
        specific-zone: "specific-zone"
      details-level: "standard"
      ipv4-network-mask: "ipv4-network-mask"
      anti-spoofing: true
  NetworkInterfaceRequestNew:
    type: "object"
    required:
    - "ip-address"
    - "name"
    - "network-mask"
    properties:
      anti-spoofing:
        type: "boolean"
        description: "N/A"
        default: true
      anti-spoofing-settings:
        $ref: "#/definitions/AntiSpoofingSettingsRequest"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      ip-address:
        type: "string"
        description: "IPv4 or IPv6 address. If both addresses are required use ipv4-address\
          \ and ipv6-address fields explicitly."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv4-mask-length:
        type: "string"
        description: "IPv4 network mask length."
      ipv4-network-mask:
        type: "string"
        description: "IPv4 network address."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      ipv6-mask-length:
        type: "string"
        description: "IPv6 network mask length."
      ipv6-network-mask:
        type: "string"
        description: "IPv6 network address."
      mask-length:
        type: "string"
        description: "IPv4 or IPv6 network mask length."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      network-mask:
        type: "string"
        description: "IPv4 or IPv6 network mask. If both masks are required use ipv4-network-mask\
          \ and ipv6-network-mask fields explicitly. Instead of providing mask itself\
          \ it is possible to specify IPv4 or IPv6 mask length in mask-length field.\
          \ If both masks length are required use ipv4-mask-length and  ipv6-mask-length\
          \ fields explicitly."
      security-zone:
        type: "boolean"
        description: "N/A"
        default: false
      security-zone-settings:
        $ref: "#/definitions/SecurityZoneSettingsRequest"
      tags:
        type: "object"
        description: "Collection of tag identifiers."
        properties: {}
      topology:
        type: "string"
        description: "N/A"
        default: "automatic"
        enum:
        - "automatic"
        - "external"
        - "internal"
      topology-settings:
        $ref: "#/definitions/InternalTopologySettingsRequest"
    example:
      ipv6-mask-length: "ipv6-mask-length"
      comments: "comments"
      color: "black"
      ipv4-mask-length: "ipv4-mask-length"
      ignore-warnings: false
      topology: "automatic"
      ipv6-address: "ipv6-address"
      tags: "{}"
      security-zone: false
      mask-length: "mask-length"
      ip-address: "ip-address"
      ipv6-network-mask: "ipv6-network-mask"
      topology-settings:
        interface-leads-to-dmz: true
        specific-network: "specific-network"
        ip-address-behind-this-interface: "not defined"
      ignore-errors: false
      ipv4-address: "ipv4-address"
      anti-spoofing-settings:
        action: "prevent"
      name: "name"
      network-mask: "network-mask"
      security-zone-settings:
        auto-calculated: true
        specific-zone: "specific-zone"
      details-level: "standard"
      ipv4-network-mask: "ipv4-network-mask"
      anti-spoofing: true
  NetworkQueryReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      objects:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/NetworkStandardReply"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
    example:
      total: 5
      objects:
      - uid: "uid"
        subnet6: "subnet6"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        subnet-mask: "subnet-mask"
        subnet4: "subnet4"
        mask-length4: 6
        type: "type"
        mask-length6: 1
      - uid: "uid"
        subnet6: "subnet6"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        subnet-mask: "subnet-mask"
        subnet4: "subnet4"
        mask-length4: 6
        type: "type"
        mask-length6: 1
      from: 0
      to: 5
  NetworkReply:
    type: "object"
    properties:
      broadcast:
        type: "string"
        description: "Allow broadcast address inclusion."
        enum:
        - "disallow"
        - "allow"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      mask-length4:
        type: "integer"
        description: "IPv4 network mask length."
      mask-length6:
        type: "integer"
        description: "IPv6 network mask length."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      nat-settings:
        $ref: "#/definitions/NatSettingsReply"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      subnet-mask:
        type: "string"
        description: "IPv4 network mask."
      subnet4:
        type: "string"
        description: "IPv4 network address."
      subnet6:
        type: "string"
        description: "IPv6 network address."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      broadcast: "disallow"
      nat-settings:
        ipv4-address: "ipv4-address"
        method: "hide"
        hide-behind: "gateway"
        install-on: "install-on"
        auto-rule: true
        ipv6-address: "ipv6-address"
      comments: "comments"
      color: "aquamarine"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      subnet-mask: "subnet-mask"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      subnet6: "subnet6"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      subnet4: "subnet4"
      mask-length4: 0
      read-only: true
      mask-length6: 6
  NetworkRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      broadcast:
        type: "string"
        description: "Allow broadcast address inclusion."
        enum:
        - "disallow"
        - "allow"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      mask-length:
        type: "integer"
        description: "IPv4 or IPv6 network mask length. If both masks are required\
          \ use mask-length4 and mask-length6 fields explicitly. Instead of IPv4 mask\
          \ length it is possible to specify IPv4 mask itself in subnet-mask field."
      mask-length4:
        type: "integer"
        description: "IPv4 network mask length."
      mask-length6:
        type: "integer"
        description: "IPv6 network mask length."
      name:
        type: "string"
        description: "Object name."
      nat-settings:
        $ref: "#/definitions/NatSettingsRequest"
      new-name:
        type: "string"
        description: "New name of the object."
      subnet:
        type: "string"
        description: "IPv4 or IPv6 network address. If both addresses are required\
          \ use subnet4 and subnet6 fields explicitly."
      subnet-mask:
        type: "string"
        description: "IPv4 network mask."
      subnet4:
        type: "string"
        description: "IPv4 network address."
      subnet6:
        type: "string"
        description: "IPv6 network address."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      broadcast: "disallow"
      nat-settings:
        ip-address: "ip-address"
        ipv4-address: "ipv4-address"
        method: "hide"
        hide-behind: "gateway"
        install-on: "install-on"
        auto-rule: false
        ipv6-address: "ipv6-address"
      subnet: "subnet"
      comments: "comments"
      color: "black"
      ignore-warnings: false
      groups:
        add: "add"
      subnet-mask: "subnet-mask"
      new-name: "new-name"
      tags:
        add: "add"
      mask-length: 0
      uid: "uid"
      ignore-errors: false
      subnet6: "subnet6"
      name: "name"
      details-level: "standard"
      subnet4: "subnet4"
      mask-length4: 6
      mask-length6: 1
  NetworkRequestNew:
    type: "object"
    required:
    - "mask-length"
    - "name"
    - "subnet"
    properties:
      broadcast:
        type: "string"
        description: "Allow broadcast address inclusion."
        enum:
        - "disallow"
        - "allow"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      mask-length:
        type: "integer"
        description: "IPv4 or IPv6 network mask length. If both masks are required\
          \ use mask-length4 and mask-length6 fields explicitly. Instead of IPv4 mask\
          \ length it is possible to specify IPv4 mask itself in subnet-mask field."
      mask-length4:
        type: "integer"
        description: "IPv4 network mask length."
      mask-length6:
        type: "integer"
        description: "IPv6 network mask length."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      nat-settings:
        $ref: "#/definitions/NatSettingsRequest"
      set-if-exists:
        type: "boolean"
        description: "If another object with the same identifier already exists, it\
          \ will be updated. The command behaviour will be the same as if originally\
          \ a set command was called. Pay attention that original object's fields\
          \ will be overwritten by the fields provided in the request payload!"
        default: false
      subnet:
        type: "string"
        description: "IPv4 or IPv6 network address. If both addresses are required\
          \ use subnet4 and subnet6 fields explicitly."
      subnet-mask:
        type: "string"
        description: "IPv4 network mask."
      subnet4:
        type: "string"
        description: "IPv4 network address."
      subnet6:
        type: "string"
        description: "IPv6 network address."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      broadcast: "disallow"
      nat-settings:
        ip-address: "ip-address"
        ipv4-address: "ipv4-address"
        method: "hide"
        hide-behind: "gateway"
        install-on: "install-on"
        auto-rule: false
        ipv6-address: "ipv6-address"
      subnet: "subnet"
      set-if-exists: false
      comments: "comments"
      color: "black"
      ignore-warnings: false
      groups: "groups"
      subnet-mask: "subnet-mask"
      tags: "tags"
      mask-length: 0
      ignore-errors: false
      subnet6: "subnet6"
      name: "name"
      details-level: "standard"
      subnet4: "subnet4"
      mask-length4: 6
      mask-length6: 1
  NetworkStandardReply:
    type: "object"
    properties:
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      mask-length4:
        type: "integer"
        description: "IPv4 network mask length."
      mask-length6:
        type: "integer"
        description: "IPv6 network mask length."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      subnet-mask:
        type: "string"
        description: "IPv4 network mask."
      subnet4:
        type: "string"
        description: "IPv4 network address."
      subnet6:
        type: "string"
        description: "IPv6 network address."
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      subnet6: "subnet6"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      subnet-mask: "subnet-mask"
      subnet4: "subnet4"
      mask-length4: 6
      type: "type"
      mask-length6: 1
  ObjIdNamePair:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      name: "name"
  ObjectInGroupQueryRequest:
    type: "object"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      limit:
        type: "integer"
        description: "No more than that many results will be returned."
      offset:
        type: "integer"
        description: "Skip that many results before beginning to return them."
      order:
        type: "array"
        description: "Sorts results by the given field. By default the results are\
          \ sorted in the ascending order by name."
        items:
          $ref: "#/definitions/ApiQueryOrderRequest"
      show-membership:
        type: "boolean"
        description: "Indicates whether to calculate and show \"groups\" field for\
          \ every object in reply."
        default: true
    example:
      offset: 6
      limit: 0
      show-membership: true
      details-level: "standard"
      order:
      - ASC: "name"
        DESC: "name"
      - ASC: "name"
        DESC: "name"
  ObjectInGroupWithMembersQueryRequest:
    type: "object"
    properties:
      dereference-group-members:
        type: "boolean"
        description: "Indicates whether to dereference \"members\" field by details\
          \ level for every object in reply."
        default: true
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      limit:
        type: "integer"
        description: "No more than that many results will be returned."
      offset:
        type: "integer"
        description: "Skip that many results before beginning to return them."
      order:
        type: "array"
        description: "Sorts results by the given field. By default the results are\
          \ sorted in the ascending order by name."
        items:
          $ref: "#/definitions/ApiQueryOrderRequest"
      show-membership:
        type: "boolean"
        description: "Indicates whether to calculate and show \"groups\" field for\
          \ every object in reply."
        default: true
    example:
      offset: 6
      limit: 0
      show-membership: true
      dereference-group-members: true
      details-level: "standard"
      order:
      - ASC: "name"
        DESC: "name"
      - ASC: "name"
        DESC: "name"
  OpsecApplicationReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      cpmi:
        $ref: "#/definitions/CpmiReply"
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      lea:
        $ref: "#/definitions/LeaReply"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "aquamarine"
      cpmi:
        use-administrator-credentials: true
        administrator-profile: "administrator-profile"
        enabled: true
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      name: "name"
      lea:
        access-permissions: "show all"
        administrator-profile: "administrator-profile"
        enabled: true
      read-only: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  OpsecApplicationRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      cpmi:
        $ref: "#/definitions/CpmiRequest"
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      host:
        type: "string"
        description: "The host where the server is running. Pre-define the host as\
          \ a network object."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      lea:
        $ref: "#/definitions/LeaRequest"
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      one-time-password:
        type: "string"
        description: "A password required for establishing a Secure Internal Communication\
          \ (SIC)."
      tags:
        type: "object"
        description: "Collection of tag identifiers."
        properties: {}
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "black"
      ignore-warnings: false
      cpmi:
        use-administrator-credentials: true
        administrator-profile: "read only all"
        enabled: true
      lea:
        access-permissions: "show all"
        administrator-profile: "read only all"
        enabled: true
      new-name: "new-name"
      tags: "{}"
      uid: "uid"
      ignore-errors: false
      host: "host"
      name: "name"
      details-level: "standard"
      one-time-password: "one-time-password"
  OpsecApplicationRequestNew:
    type: "object"
    required:
    - "host"
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      cpmi:
        $ref: "#/definitions/CpmiRequest"
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      host:
        type: "string"
        description: "The host where the server is running. Pre-define the host as\
          \ a network object."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      lea:
        $ref: "#/definitions/LeaRequest"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      one-time-password:
        type: "string"
        description: "A password required for establishing a Secure Internal Communication\
          \ (SIC)."
      tags:
        type: "object"
        description: "Collection of tag identifiers."
        properties: {}
    example:
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      cpmi:
        use-administrator-credentials: true
        administrator-profile: "read only all"
        enabled: true
      host: "host"
      name: "name"
      lea:
        access-permissions: "show all"
        administrator-profile: "read only all"
        enabled: true
      details-level: "standard"
      one-time-password: "one-time-password"
      tags: "{}"
  OtherServiceReply:
    type: "object"
    properties:
      accept-replies:
        type: "boolean"
        description: "Specifies whether Other Service replies are to be accepted."
      action:
        type: "string"
        description: "Contains an INSPECT expression that defines the action to take\
          \ if a rule containing this service is matched.\nExample: set r_mhandler\
          \ &open_ssl_handler sets a handler on the connection."
      aggressive-aging:
        $ref: "#/definitions/AggressiveAgingReply"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      ip-protocol:
        type: "integer"
        description: "IP protocol number."
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      match:
        type: "string"
        description: "Contains an INSPECT expression that defines the matching criteria.\
          \ The connection is examined against the expression during the first packet.\n\
          Example: tcp, dport = 21, direction = 0 matches incoming FTP control connections."
      match-for-any:
        type: "boolean"
        description: "Indicates whether this service is used when 'Any' is set as\
          \ the rule's service and there are several service objects with the same\
          \ source port and protocol."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      override-default-settings:
        type: "boolean"
        description: "Indicates whether this service is a Data Domain service which\
          \ has been overridden."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      session-timeout:
        type: "integer"
        description: "Time (in seconds) before the session times out."
      sync-connections-on-cluster:
        type: "boolean"
        description: "Enables state-synchronized High Availability or Load Sharing\
          \ on a ClusterXL or OPSEC-certified cluster."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
      use-default-session-timeout:
        type: "boolean"
        description: "Use default virtual session timeout."
    example:
      session-timeout: 5
      use-default-session-timeout: true
      comments: "comments"
      color: "aquamarine"
      match-for-any: true
      aggressive-aging:
        enable: true
        default-timeout: 0
        use-default-timeout: true
        timeout: 6
      keep-connections-open-after-policy-installation: true
      icon: "icon"
      match: "match"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      sync-connections-on-cluster: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      accept-replies: true
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      action: "action"
      override-default-settings: true
      read-only: true
      ip-protocol: 1
  OtherServiceRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      accept-replies:
        type: "boolean"
        description: "Specifies whether Other Service replies are to be accepted."
      action:
        type: "string"
        description: "Contains an INSPECT expression that defines the action to take\
          \ if a rule containing this service is matched.\nExample: set r_mhandler\
          \ &open_ssl_handler sets a handler on the connection."
      aggressive-aging:
        $ref: "#/definitions/AggressiveAgingRequest"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      ip-protocol:
        type: "integer"
        description: "IP protocol number."
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      match:
        type: "string"
        description: "Contains an INSPECT expression that defines the matching criteria.\
          \ The connection is examined against the expression during the first packet.\n\
          Example: tcp, dport = 21, direction = 0 matches incoming FTP control connections."
      match-for-any:
        type: "boolean"
        description: "Indicates whether this service is used when 'Any' is set as\
          \ the rule's service and there are several service objects with the same\
          \ source port and protocol."
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      override-default-settings:
        type: "boolean"
        description: "Indicates whether this service is a Data Domain service which\
          \ has been overridden."
      session-timeout:
        type: "integer"
        description: "Time (in seconds) before the session times out."
      sync-connections-on-cluster:
        type: "boolean"
        description: "Enables state-synchronized High Availability or Load Sharing\
          \ on a ClusterXL or OPSEC-certified cluster."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
      use-default-session-timeout:
        type: "boolean"
        description: "Use default virtual session timeout."
    example:
      session-timeout: 6
      use-default-session-timeout: true
      comments: "comments"
      color: "black"
      ignore-warnings: false
      match-for-any: true
      aggressive-aging:
        enable: true
        default-timeout: 0
        use-default-timeout: true
        timeout: 6
      keep-connections-open-after-policy-installation: true
      match: "match"
      groups:
        add: "add"
      sync-connections-on-cluster: true
      new-name: "new-name"
      tags:
        add: "add"
      uid: "uid"
      accept-replies: true
      ignore-errors: false
      name: "name"
      action: "action"
      details-level: "standard"
      override-default-settings: true
      ip-protocol: 0
  OtherServiceRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      accept-replies:
        type: "boolean"
        description: "Specifies whether Other Service replies are to be accepted."
      action:
        type: "string"
        description: "Contains an INSPECT expression that defines the action to take\
          \ if a rule containing this service is matched.\nExample: set r_mhandler\
          \ &open_ssl_handler sets a handler on the connection."
      aggressive-aging:
        $ref: "#/definitions/AggressiveAgingRequest"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      ip-protocol:
        type: "integer"
        description: "IP protocol number."
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      match:
        type: "string"
        description: "Contains an INSPECT expression that defines the matching criteria.\
          \ The connection is examined against the expression during the first packet.\n\
          Example: tcp, dport = 21, direction = 0 matches incoming FTP control connections."
      match-for-any:
        type: "boolean"
        description: "Indicates whether this service is used when 'Any' is set as\
          \ the rule's service and there are several service objects with the same\
          \ source port and protocol."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      override-default-settings:
        type: "boolean"
        description: "Indicates whether this service is a Data Domain service which\
          \ has been overridden."
      session-timeout:
        type: "integer"
        description: "Time (in seconds) before the session times out."
      set-if-exists:
        type: "boolean"
        description: "If another object with the same identifier already exists, it\
          \ will be updated. The command behaviour will be the same as if originally\
          \ a set command was called. Pay attention that original object's fields\
          \ will be overwritten by the fields provided in the request payload!"
        default: false
      sync-connections-on-cluster:
        type: "boolean"
        description: "Enables state-synchronized High Availability or Load Sharing\
          \ on a ClusterXL or OPSEC-certified cluster."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
      use-default-session-timeout:
        type: "boolean"
        description: "Use default virtual session timeout."
    example:
      session-timeout: 5
      set-if-exists: false
      use-default-session-timeout: true
      comments: "comments"
      color: "black"
      ignore-warnings: false
      match-for-any: true
      aggressive-aging:
        enable: true
        default-timeout: 0
        use-default-timeout: true
        timeout: 6
      keep-connections-open-after-policy-installation: true
      match: "match"
      groups: "groups"
      sync-connections-on-cluster: true
      tags: "tags"
      accept-replies: true
      ignore-errors: false
      name: "name"
      action: "action"
      details-level: "standard"
      override-default-settings: true
      ip-protocol: 1
  OverrideActivationByProtectionRequest:
    type: "object"
    required:
    - "action"
    - "protection"
    properties:
      action:
        type: "string"
        description: "Protection action."
        enum:
        - "Threat Cloud: Inactive"
        - "Detect"
        - "Prevent <br> Core: Drop"
        - "Inactive"
        - "Accept"
      capture-packets:
        type: "boolean"
        description: "Capture packets."
      protection:
        type: "string"
        description: "IPS protection identified by name or UID."
      track:
        type: "string"
        description: "Tracking method for protection."
        enum:
        - "none"
        - "log"
        - "alert"
        - "mail"
        - "snmp trap"
        - "user alert"
        - "user alert 1"
        - "user alert 2"
    description: "Overrides per profile for this protection."
    example:
      action: "Threat Cloud: Inactive"
      protection: "protection"
      track: "none"
      capture-packets: true
  PackagesQueryReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      packages:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
    example:
      total: 1
      from: 0
      to: 6
      packages:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  PermissionsRoleRequest:
    type: "object"
    properties:
      profile:
        type: "string"
        description: "Permission profile."
    description: "Administrator permissions profile. Permissions profile should not\
      \ be provided when multi-domain-profile is set to \"Multi-Domain Super User\"\
      \ or \"Domain Super User\"."
    example:
      profile: "profile"
  PolicyInstallationReply:
    type: "object"
    properties:
      task-id:
        type: "string"
        description: "Asynchronous task unique identifier."
    example:
      task-id: "task-id"
  PolicyInstallationRequest:
    type: "object"
    required:
    - "policy-package"
    - "targets"
    properties:
      access:
        type: "boolean"
        description: "Set to be true in order to install the Access Control policy.\
          \ By default, the value is true if Access Control policy is enabled on the\
          \ input policy package, otherwise false."
        default: false
      desktop-security:
        type: "boolean"
        description: "Set to be true in order to install the Desktop Security policy.\
          \ By default, the value is true if desktop security policy is enabled on\
          \ the input policy package, otherwise false."
        default: false
      install-on-all-cluster-members-or-fail:
        type: "boolean"
        description: "Relevant for the gateway clusters. If true, the policy is installed\
          \ on all the cluster members. If the installation on a cluster member fails,\
          \ don't install on that cluster."
        default: true
      policy-package:
        type: "string"
        description: "The name of the Policy Package to be installed."
      prepare-only:
        type: "boolean"
        description: "If true, prepares the policy for the installation, but doesn't\
          \ install it on an installation target."
        default: false
      qos:
        type: "boolean"
        description: "Set to be true in order to install the QoS policy. By default,\
          \ the value is true if Quality-of-Service policy is enabled on the input\
          \ policy package, otherwise false."
        default: false
      revision:
        type: "string"
        description: "The UID of the revision of the policy to install."
        default: "the most recent revision"
      targets:
        type: "string"
        description: "On what targets to execute this command. Targets may be identified\
          \ by their name, or object unique identifier."
      threat-prevention:
        type: "boolean"
        description: "Set to be true in order to install the Threat Prevention policy.\
          \ By default, the value is true if Threat Prevention policy is enabled on\
          \ the input policy package, otherwise false."
        default: false
    example:
      access: false
      qos: false
      threat-prevention: false
      desktop-security: false
      install-on-all-cluster-members-or-fail: true
      prepare-only: false
      policy-package: "policy-package"
      targets: "targets"
      revision: "the most recent revision"
  PolicyPackageReply:
    type: "object"
    properties:
      access:
        type: "boolean"
        description: "True - enables, False - disables access policy, empty - nothing\
          \ is changed."
      access-layers:
        type: "array"
        description: "Access policy layers. How much details are returned depends\
          \ on the details-level field of the request. This table shows the level\
          \ of detail shown when details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      desktop-security:
        type: "boolean"
        description: "True - enables, False - disables Desktop security policy, empty\
          \ - nothing is changed."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      installation-targets:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      installation-targets-revision:
        type: "array"
        description: "List of installation targets and revisions on which this policy\
          \ package was installed."
        items:
          $ref: "#/definitions/InstallationTargetRevisionFullReply"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      nat-policy:
        type: "boolean"
        description: "True - enables, False - disables NAT policy, empty - nothing\
          \ is changed."
      qos:
        type: "boolean"
        description: "True - enables, False - disables QoS policy, empty - nothing\
          \ is changed."
      qos-policy-type:
        type: "string"
        description: "QoS policy type."
        enum:
        - "recommended"
        - "express"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      threat-layers:
        type: "array"
        description: "Threat policy layers. How much details are returned depends\
          \ on the details-level field of the request. This table shows the level\
          \ of detail shown when details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      threat-prevention:
        type: "boolean"
        description: "True - enables, False - disables Threat policy, empty - nothing\
          \ is changed."
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
      vpn-traditional-mode:
        type: "boolean"
        description: "True - enables, False - disables VPN traditional mode, empty\
          \ - nothing is changed."
    example:
      access: true
      comments: "comments"
      color: "aquamarine"
      desktop-security: true
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      access-layers:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      threat-layers:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      qos-policy-type: "recommended"
      qos: true
      threat-prevention: true
      installation-targets-revision:
      - cluster-members-revision:
        - target-name: "target-name"
          target-uid: "target-uid"
          revision:
            uid: "uid"
            domain:
              uid: "uid"
              domain-type: "mds"
              name: "name"
            name: "name"
            type: "type"
        - target-name: "target-name"
          target-uid: "target-uid"
          revision:
            uid: "uid"
            domain:
              uid: "uid"
              domain-type: "mds"
              name: "name"
            name: "name"
            type: "type"
        target-name: "target-name"
        target-uid: "target-uid"
        revision:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
      - cluster-members-revision:
        - target-name: "target-name"
          target-uid: "target-uid"
          revision:
            uid: "uid"
            domain:
              uid: "uid"
              domain-type: "mds"
              name: "name"
            name: "name"
            type: "type"
        - target-name: "target-name"
          target-uid: "target-uid"
          revision:
            uid: "uid"
            domain:
              uid: "uid"
              domain-type: "mds"
              name: "name"
            name: "name"
            type: "type"
        target-name: "target-name"
        target-uid: "target-uid"
        revision:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
      nat-policy: true
      vpn-traditional-mode: true
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      installation-targets:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      read-only: true
  PolicyPackageRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      access:
        type: "boolean"
        description: "True - enables, False - disables access & NAT policies, empty\
          \ - nothing is changed."
      access-layers:
        $ref: "#/definitions/MultiValueAccessLayer"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      desktop-security:
        type: "boolean"
        description: "True - enables, False - disables Desktop security policy, empty\
          \ - nothing is changed."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      installation-targets:
        $ref: "#/definitions/add"
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      qos:
        type: "boolean"
        description: "True - enables, False - disables QoS policy, empty - nothing\
          \ is changed."
      qos-policy-type:
        type: "string"
        description: "QoS policy type."
        enum:
        - "recommended"
        - "express"
      tags:
        $ref: "#/definitions/add"
      threat-layers:
        $ref: "#/definitions/MultiValueThreatLayer"
      threat-prevention:
        type: "boolean"
        description: "True - enables, False - disables Threat policy, empty - nothing\
          \ is changed."
      uid:
        type: "string"
        description: "Object unique identifier."
      vpn-traditional-mode:
        type: "boolean"
        description: "True - enables, False - disables VPN traditional mode, empty\
          \ - nothing is changed."
    example:
      access: true
      comments: "comments"
      color: "black"
      desktop-security: true
      ignore-warnings: false
      new-name: "new-name"
      tags:
        add: "add"
      access-layers:
        add:
        - name: "name"
          position: 0
        - name: "name"
          position: 0
        value:
        - "value"
        - "value"
        remove:
        - "remove"
        - "remove"
      threat-layers:
        add:
        - name: "name"
          position: 0
        - name: "name"
          position: 0
        value:
        - "value"
        - "value"
        remove:
        - "remove"
        - "remove"
      uid: "uid"
      qos-policy-type: "recommended"
      ignore-errors: false
      qos: true
      threat-prevention: true
      vpn-traditional-mode: true
      name: "name"
      installation-targets:
        add: "add"
      details-level: "standard"
  PolicyPackageRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      access:
        type: "boolean"
        description: "True - enables, False - disables access & NAT policies, empty\
          \ - nothing is changed."
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      desktop-security:
        type: "boolean"
        description: "True - enables, False - disables Desktop security policy, empty\
          \ - nothing is changed."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      installation-targets:
        type: "string"
        description: "Which Gateways identified by the name or UID to install the\
          \ policy on."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      qos:
        type: "boolean"
        description: "True - enables, False - disables QoS policy, empty - nothing\
          \ is changed."
      qos-policy-type:
        type: "string"
        description: "QoS policy type."
        enum:
        - "recommended"
        - "express"
      tags:
        type: "string"
        description: "Collection of tag identifiers."
      threat-prevention:
        type: "boolean"
        description: "True - enables, False - disables Threat policy, empty - nothing\
          \ is changed."
      vpn-traditional-mode:
        type: "boolean"
        description: "True - enables, False - disables VPN traditional mode, empty\
          \ - nothing is changed."
    example:
      access: true
      comments: "comments"
      color: "black"
      desktop-security: true
      ignore-warnings: false
      tags: "tags"
      qos-policy-type: "recommended"
      ignore-errors: false
      qos: true
      threat-prevention: true
      vpn-traditional-mode: true
      name: "name"
      installation-targets: "installation-targets"
      details-level: "standard"
  PortRanges:
    type: "object"
    properties:
      excluded-others:
        type: "array"
        description: "Objects which are not represented as port numbers and are negated\
          \ in the given rule - for example if negate is set for the service of this\
          \ rule. The details-level parameter of the request determines whether they\
          \ are displayed as UID's or objects."
        items:
          type: "object"
          properties: {}
      others:
        type: "array"
        description: "Objects which are not represented as port numbers and match\
          \ the given rule.The details-level parameter of the request determines whether\
          \ they are displayed as UID's or objects."
        items:
          type: "object"
          properties: {}
      tcp:
        type: "array"
        description: "Range of TCP ports that match in the given rule."
        items:
          $ref: "#/definitions/Range"
      udp:
        type: "array"
        description: "Range of UDP ports that match in the given rule."
        items:
          $ref: "#/definitions/Range"
    description: "Displays the service group's matched content as ranges of port numbers,\
      \ in case 'show-as-ranges' is set to true.<br />In this case, the 'members'\
      \ parameter is omitted."
    example:
      tcp:
      - start: "start"
        end: "end"
      - start: "start"
        end: "end"
      udp:
      - start: "start"
        end: "end"
      - start: "start"
        end: "end"
      excluded-others:
      - "{}"
      - "{}"
      others:
      - "{}"
      - "{}"
  ProfileIndicatorOverrideRequest:
    type: "object"
    properties:
      action:
        type: "string"
        description: "The indicator's action in this profile."
        enum:
        - "Inactive"
        - "Ask"
        - "Prevent"
        - "Detect"
      indicator:
        type: "string"
        description: "The indicator whose action is to be overriden."
    description: "Indicators whose action will be overridden in this profile."
    example:
      indicator: "indicator"
      action: "Inactive"
  ProfileQueryReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      profiles:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
    example:
      total: 1
      profiles:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      from: 0
      to: 6
  ProfileReply:
    type: "object"
    properties:
      active-protections-performance-impact:
        type: "string"
        description: "Protections with this performance impact only will be activated\
          \ in the profile."
        enum:
        - "high"
        - "medium"
        - "low"
        - "very_low"
      active-protections-severity:
        type: "string"
        description: "Protections with this severity only will be activated in the\
          \ profile."
        enum:
        - "Critical"
        - "High"
        - "Medium or above"
        - "Low or above"
      anti-bot:
        type: "boolean"
        description: "Is Anti-Bot blade activated."
      anti-virus:
        type: "boolean"
        description: "Is Anti-Virus blade activated."
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      confidence-level-high:
        type: "string"
        description: "Action for protections with high confidence level."
        enum:
        - "Inactive"
        - "Ask"
        - "Prevent"
        - "Detect"
      confidence-level-low:
        type: "string"
        description: "Action for protections with low confidence level."
        enum:
        - "Inactive"
        - "Ask"
        - "Prevent"
        - "Detect"
      confidence-level-medium:
        type: "string"
        description: "Action for protections with medium confidence level."
        enum:
        - "Inactive"
        - "Ask"
        - "Prevent"
        - "Detect"
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      extended-attributes-to-activate:
        type: "array"
        description: "Activate protections by these extended attributes."
        items:
          $ref: "#/definitions/IpsAdditionalPropertiesReply"
      extended-attributes-to-deactivate:
        type: "array"
        description: "Deactivate protections by these extended attributes."
        items:
          $ref: "#/definitions/IpsAdditionalPropertiesReply"
      icon:
        type: "string"
        description: "Object icon."
      indicator-overrides:
        type: "array"
        description: "Indicators whose action will be overridden in this profile."
        items:
          $ref: "#/definitions/ProfileIndicatorOverrideRequest"
      ips:
        type: "boolean"
        description: "Is IPS blade activated."
      ips-settings:
        $ref: "#/definitions/IpsSettingsReply"
      malicious-mail-policy-settings:
        $ref: "#/definitions/MailSettingsReply"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      overrides:
        type: "array"
        description: "Overrides per profile for this protection."
        items:
          $ref: "#/definitions/AllActivationsByProtectionReply"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      threat-emulation:
        type: "boolean"
        description: "Is Threat Emulation blade activated."
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
      use-extended-attributes:
        type: "boolean"
        description: "Whether to activate/deactivate IPS protections according to\
          \ the extended attributes."
      use-indicators:
        type: "boolean"
        description: "Indicates whether the profile should make use of indicators."
    example:
      color: "aquamarine"
      malicious-mail-policy-settings:
        malicious-attachments-text: "malicious-attachments-text"
        send-copy-list:
        - "send-copy-list"
        - "send-copy-list"
        add-customized-text-to-email-body: true
        email-subject-prefix-text: "email-subject-prefix-text"
        malicious-links-text: "malicious-links-text"
        email-action: "allow"
        send-copy: true
        add-email-subject-prefix: true
        add-x-header-to-email: true
        email-body-customized-text: "email-body-customized-text"
        remove-attachments-and-links: true
        failed-to-scan-attachments-text: "failed-to-scan-attachments-text"
      extended-attributes-to-deactivate:
      - uid: "uid"
        values:
        - uid: "uid"
          name: "name"
        - uid: "uid"
          name: "name"
        name: "name"
      - uid: "uid"
        values:
        - uid: "uid"
          name: "name"
        - uid: "uid"
          name: "name"
        name: "name"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      type: "type"
      confidence-level-medium: "Inactive"
      uid: "uid"
      anti-bot: true
      active-protections-severity: "Critical"
      ips-settings:
        exclude-protection-with-severity: true
        exclude-protection-with-performance-impact: true
        newly-updated-protections: "active"
        exclude-protection-with-severity-mode: "low or above"
        exclude-protection-with-performance-impact-mode: "very low"
      confidence-level-high: "Inactive"
      read-only: true
      threat-emulation: true
      use-indicators: true
      comments: "comments"
      active-protections-performance-impact: "high"
      overrides:
      - default:
          action: "Inactive"
          track: "none"
          capture-packets: true
        protection-uid: "protection-uid"
        final:
          action: "Inactive"
          track: "none"
          capture-packets: true
        protection: "protection"
        override:
          action: "Inactive"
          track: "none"
          capture-packets: true
      - default:
          action: "Inactive"
          track: "none"
          capture-packets: true
        protection-uid: "protection-uid"
        final:
          action: "Inactive"
          track: "none"
          capture-packets: true
        protection: "protection"
        override:
          action: "Inactive"
          track: "none"
          capture-packets: true
      ips: true
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      use-extended-attributes: true
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      extended-attributes-to-activate:
      - uid: "uid"
        values:
        - uid: "uid"
          name: "name"
        - uid: "uid"
          name: "name"
        name: "name"
      - uid: "uid"
        values:
        - uid: "uid"
          name: "name"
        - uid: "uid"
          name: "name"
        name: "name"
      name: "name"
      indicator-overrides:
      - indicator: "indicator"
        action: "Inactive"
      - indicator: "indicator"
        action: "Inactive"
      anti-virus: true
      confidence-level-low: "Inactive"
  ProfileRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      activate-protections-by-extended-attributes:
        $ref: "#/definitions/add"
      active-protections-performance-impact:
        type: "string"
        description: "Protections with this performance impact only will be activated\
          \ in the profile."
        enum:
        - "high"
        - "medium"
        - "low"
        - "very_low"
      active-protections-severity:
        type: "string"
        description: "Protections with this severity only will be activated in the\
          \ profile."
        enum:
        - "Critical"
        - "High"
        - "Medium or above"
        - "Low or above"
      anti-bot:
        type: "boolean"
        description: "Is Anti-Bot blade activated."
      anti-virus:
        type: "boolean"
        description: "Is Anti-Virus blade activated."
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      confidence-level-high:
        type: "string"
        description: "Action for protections with high confidence level."
        enum:
        - "Inactive"
        - "Ask"
        - "Prevent"
        - "Detect"
      confidence-level-low:
        type: "string"
        description: "Action for protections with low confidence level."
        enum:
        - "Inactive"
        - "Ask"
        - "Prevent"
        - "Detect"
      confidence-level-medium:
        type: "string"
        description: "Action for protections with medium confidence level."
        enum:
        - "Inactive"
        - "Ask"
        - "Prevent"
        - "Detect"
      deactivate-protections-by-extended-attributes:
        $ref: "#/definitions/add"
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      indicator-overrides:
        $ref: "#/definitions/add"
      ips:
        type: "boolean"
        description: "Is IPS blade activated."
      ips-settings:
        $ref: "#/definitions/IpsSettingsRequest"
      malicious-mail-policy-settings:
        $ref: "#/definitions/MailSettingsRequestEdit"
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      overrides:
        $ref: "#/definitions/add"
      tags:
        $ref: "#/definitions/add"
      threat-emulation:
        type: "boolean"
        description: "Is Threat Emulation blade activated."
      uid:
        type: "string"
        description: "Object unique identifier."
      use-extended-attributes:
        type: "boolean"
        description: "Whether to activate/deactivate IPS protections according to\
          \ the extended attributes."
      use-indicators:
        type: "boolean"
        description: "Indicates whether the profile should make use of indicators."
        default: true
    example:
      color: "black"
      malicious-mail-policy-settings:
        malicious-attachments-text: "malicious-attachments-text"
        send-copy-list:
          add: "add"
        add-customized-text-to-email-body: true
        email-subject-prefix-text: "email-subject-prefix-text"
        malicious-links-text: "malicious-links-text"
        email-action: "allow"
        send-copy: true
        add-email-subject-prefix: true
        add-x-header-to-email: true
        email-body-customized-text: "email-body-customized-text"
        remove-attachments-and-links: true
        failed-to-scan-attachments-text: "failed-to-scan-attachments-text"
      deactivate-protections-by-extended-attributes:
        add: "add"
      new-name: "new-name"
      confidence-level-medium: "Inactive"
      activate-protections-by-extended-attributes:
        add: "add"
      uid: "uid"
      anti-bot: true
      active-protections-severity: "Critical"
      ips-settings:
        exclude-protection-with-severity: true
        exclude-protection-with-performance-impact: true
        newly-updated-protections: "active"
        exclude-protection-with-severity-mode: "low or above"
        exclude-protection-with-performance-impact-mode: "very low"
      confidence-level-high: "Inactive"
      details-level: "standard"
      threat-emulation: true
      use-indicators: true
      comments: "comments"
      ignore-warnings: false
      active-protections-performance-impact: "high"
      overrides:
        add: "add"
      ips: true
      tags:
        add: "add"
      use-extended-attributes: true
      ignore-errors: false
      name: "name"
      indicator-overrides:
        add: "add"
      anti-virus: true
      confidence-level-low: "Inactive"
  ProfileRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      activate-protections-by-extended-attributes:
        $ref: "#/definitions/add"
      active-protections-performance-impact:
        type: "string"
        description: "Protections with this performance impact only will be activated\
          \ in the profile."
        enum:
        - "high"
        - "medium"
        - "low"
        - "very_low"
      active-protections-severity:
        type: "string"
        description: "Protections with this severity only will be activated in the\
          \ profile."
        enum:
        - "Critical"
        - "High"
        - "Medium or above"
        - "Low or above"
      anti-bot:
        type: "boolean"
        description: "Is Anti-Bot blade activated."
      anti-virus:
        type: "boolean"
        description: "Is Anti-Virus blade activated."
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      confidence-level-high:
        type: "string"
        description: "Action for protections with high confidence level."
        enum:
        - "Inactive"
        - "Ask"
        - "Prevent"
        - "Detect"
      confidence-level-low:
        type: "string"
        description: "Action for protections with low confidence level."
        enum:
        - "Inactive"
        - "Ask"
        - "Prevent"
        - "Detect"
      confidence-level-medium:
        type: "string"
        description: "Action for protections with medium confidence level."
        enum:
        - "Inactive"
        - "Ask"
        - "Prevent"
        - "Detect"
      deactivate-protections-by-extended-attributes:
        $ref: "#/definitions/add"
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      indicator-overrides:
        $ref: "#/definitions/ProfileIndicatorOverrideRequest"
      ips:
        type: "boolean"
        description: "Is IPS blade activated."
      ips-settings:
        $ref: "#/definitions/IpsSettingsRequest"
      malicious-mail-policy-settings:
        $ref: "#/definitions/MailSettingsRequestNew"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      overrides:
        $ref: "#/definitions/OverrideActivationByProtectionRequest"
      tags:
        type: "string"
        description: "Collection of tag identifiers."
      threat-emulation:
        type: "boolean"
        description: "Is Threat Emulation blade activated."
      use-extended-attributes:
        type: "boolean"
        description: "Whether to activate/deactivate IPS protections according to\
          \ the extended attributes."
      use-indicators:
        type: "boolean"
        description: "Indicates whether the profile should make use of indicators."
        default: true
    example:
      use-indicators: true
      comments: "comments"
      color: "black"
      malicious-mail-policy-settings:
        malicious-attachments-text: "malicious-attachments-text"
        send-copy-list: "send-copy-list"
        add-customized-text-to-email-body: false
        email-subject-prefix-text: "email-subject-prefix-text"
        malicious-links-text: "malicious-links-text"
        email-action: "Allow"
        send-copy: false
        add-email-subject-prefix: false
        add-x-header-to-email: false
        email-body-customized-text: "email-body-customized-text"
        remove-attachments-and-links: true
        failed-to-scan-attachments-text: "failed-to-scan-attachments-text"
      deactivate-protections-by-extended-attributes:
        add: "add"
      ignore-warnings: false
      active-protections-performance-impact: "high"
      overrides:
        action: "Threat Cloud: Inactive"
        protection: "protection"
        track: "none"
        capture-packets: true
      ips: true
      confidence-level-medium: "Inactive"
      tags: "tags"
      use-extended-attributes: true
      activate-protections-by-extended-attributes:
        add: "add"
      anti-bot: true
      active-protections-severity: "Critical"
      ignore-errors: false
      ips-settings:
        exclude-protection-with-severity: true
        exclude-protection-with-performance-impact: true
        newly-updated-protections: "active"
        exclude-protection-with-severity-mode: "low or above"
        exclude-protection-with-performance-impact-mode: "very low"
      name: "name"
      confidence-level-high: "Inactive"
      details-level: "standard"
      indicator-overrides:
        indicator: "indicator"
        action: "Inactive"
      anti-virus: true
      confidence-level-low: "Inactive"
      threat-emulation: true
  ProtectionQueryReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      protections:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
    example:
      total: 1
      from: 0
      protections:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      to: 6
  ProtectionReply:
    type: "object"
    properties:
      comments:
        type: "string"
        description: "Protection comments."
      confidence-level:
        type: "string"
        description: "How confident IPS is that recognized attacks are actually undesirable\
          \ traffic."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      follow-up:
        type: "boolean"
        description: "Tag the protection with pre-defined follow-up flag."
      industry-reference:
        type: "array"
        description: "International CVE or CVE candidate name for attack."
        items:
          type: "string"
      ipsAdditionalProperties:
        type: "array"
        description: "IPS protection extended attributes."
        items:
          $ref: "#/definitions/IpsAdditionalPropertiesReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      performance-impact:
        type: "string"
        description: "How much this protection affects the performance of a Security\
          \ Gateway."
      profiles:
        type: "array"
        description: "Protection settings per profile."
        items:
          $ref: "#/definitions/AllActivationsByProfileReply"
      protection-type:
        type: "string"
        description: "The protection's type (Core or Threat Cloud)."
      release-date:
        type: "string"
        description: "The date in which the protection was releases by Check Point."
      severity:
        type: "string"
        description: "The intrusion severity."
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
      update-date:
        type: "string"
        description: "The date in which the protection was updated by Check Point."
    example:
      severity: "severity"
      comments: "comments"
      release-date: "release-date"
      protection-type: "protection-type"
      profiles:
      - uid: "uid"
        default:
          action: "Inactive"
          track: "none"
          capture-packets: true
        final:
          action: "Inactive"
          track: "none"
          capture-packets: true
        name: "name"
        override:
          action: "Inactive"
          track: "none"
          capture-packets: true
      - uid: "uid"
        default:
          action: "Inactive"
          track: "none"
          capture-packets: true
        final:
          action: "Inactive"
          track: "none"
          capture-packets: true
        name: "name"
        override:
          action: "Inactive"
          track: "none"
          capture-packets: true
      type: "type"
      ipsAdditionalProperties:
      - uid: "uid"
        values:
        - uid: "uid"
          name: "name"
        - uid: "uid"
          name: "name"
        name: "name"
      - uid: "uid"
        values:
        - uid: "uid"
          name: "name"
        - uid: "uid"
          name: "name"
        name: "name"
      follow-up: true
      uid: "uid"
      industry-reference:
      - "industry-reference"
      - "industry-reference"
      confidence-level: "confidence-level"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      update-date: "update-date"
      performance-impact: "performance-impact"
  ProtectionRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      comments:
        type: "string"
        description: "Protection comments."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      follow-up:
        type: "boolean"
        description: "Tag the protection with pre-defined follow-up flag."
      name:
        type: "string"
        description: "Object name."
      overrides:
        $ref: "#/definitions/remove"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      follow-up: true
      uid: "uid"
      comments: "comments"
      name: "name"
      details-level: "standard"
      overrides:
        remove: "remove"
  PublishReply:
    type: "object"
    properties:
      task-id:
        type: "string"
        description: "Publish task UID. Use show-task command to check the progress\
          \ of the task."
    example:
      task-id: "task-id"
  PublishRequest:
    type: "object"
    properties:
      uid:
        type: "string"
        description: "Session unique identifier. Specify it to publish a different\
          \ session than the one you currently use."
    example:
      uid: "uid"
  PutFileRequest:
    type: "object"
    required:
    - "targets"
    properties:
      comments:
        type: "string"
        description: "Comments string."
      file-content:
        type: "string"
        description: "N/A"
      file-name:
        type: "string"
        description: "N/A"
      file-path:
        type: "string"
        description: "N/A"
      targets:
        type: "string"
        description: "On what targets to execute this command. Targets may be identified\
          \ by their name, or object unique identifier."
    example:
      comments: "comments"
      file-content: "file-content"
      file-name: "file-name"
      targets: "targets"
      file-path: "file-path"
  QueryAccessRulebaseReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      objects-dictionary:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      rulebase:
        type: "array"
        description: "N/A"
        items:
          $ref: "#/definitions/IEntityInRulebase"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      total: 1
      objects-dictionary:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      name: "name"
      from: 0
      rulebase:
      - type: "type"
      - type: "type"
      to: 6
  QueryAccessRulebaseRequest:
    type: "object"
    required:
    - "name"
    properties:
      dereference-group-members:
        type: "boolean"
        description: "Indicates whether to dereference \"members\" field by details\
          \ level for every object in reply."
        default: true
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      filter:
        type: "string"
        description: "Search expression to filter the rulebase. The provided text\
          \ should be exactly the same as it would be given in Smart Console. The\
          \ logical operators in the expression ('AND', 'OR') should be provided in\
          \ capital letters. If an operator is not used, the default OR operator applies."
      filter-settings:
        $ref: "#/definitions/ApiRulebaseFilterSettingsRequest"
      hits-settings:
        $ref: "#/definitions/HitsSettingsRequest"
      limit:
        type: "integer"
        description: "No more than that many results will be returned."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      offset:
        type: "integer"
        description: "Skip that many results before beginning to return them."
      order:
        type: "array"
        description: "Sorts results by the given field. By default the results are\
          \ sorted in the ascending order by name."
        items:
          $ref: "#/definitions/ApiQueryOrderRequest"
      package:
        type: "string"
        description: "Name of the package."
      show-as-ranges:
        type: "boolean"
        description: "When true, the source, destination and services & applications\
          \ parameters are displayed as ranges of IP addresses and port numbers rather\
          \ than network objects.<br /> Objects that are not represented using IP\
          \ addresses or port numbers are presented as objects.<br /> In addition,\
          \ the response of each rule does not contain the parameters: source, source-negate,\
          \ destination, destination-negate, service and service-negate, but instead\
          \ it contains the parameters: source-ranges, destination-ranges and service-ranges.<br\
          \ /><br /> Note: Requesting to show rules as ranges is limited up to 20\
          \ rules per request, otherwise an error is returned. If you wish to request\
          \ more rules, use the offset and limit parameters to limit your request."
        default: false
      show-hits:
        type: "boolean"
        description: "N/A"
      show-membership:
        type: "boolean"
        description: "Indicates whether to calculate and show \"groups\" field for\
          \ every object in reply."
        default: true
      uid:
        type: "string"
        description: "Object unique identifier."
      use-object-dictionary:
        type: "boolean"
        description: "N/A"
    example:
      package: "package"
      offset: 6
      dereference-group-members: true
      use-object-dictionary: true
      filter: "filter"
      hits-settings:
        to-date: "to-date"
        from-date: "from-date"
        target: "target"
      uid: "uid"
      show-hits: true
      limit: 0
      name: "name"
      show-membership: true
      filter-settings:
        search-mode: "general"
        packet-search-settings:
          expand-group-members: false
          expand-group-with-exclusion-members: false
          match-on-group-with-exclusion: true
          match-on-negate: true
          match-on-any: true
      show-as-ranges: false
      details-level: "standard"
      order:
      - ASC: "name"
        DESC: "name"
      - ASC: "name"
        DESC: "name"
  QueryGatewaysServersReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      objects:
        type: "array"
        description: "How much detail is returned depends on the detail-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to full."
        items:
          $ref: "#/definitions/GatewayServerReply"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
    example:
      total: 5
      objects:
      - interfaces:
        - ipv6-mask-length: 1
          ipv6-network-mask: "ipv6-network-mask"
          ipv4-address: "ipv4-address"
          ipv4-mask-length: 6
          topology:
            security-zone:
              uid: "uid"
              domain:
                uid: "uid"
                domain-type: "mds"
                name: "name"
              name: "name"
              type: "type"
            leads-to-specific-network:
              uid: "uid"
              domain:
                uid: "uid"
                domain-type: "mds"
                name: "name"
              name: "name"
              type: "type"
            leads-to-dmz: true
            ip-address-behind-this-interface: "not defined"
            leads-to-internet: true
          interface-name: "interface-name"
          ipv4-network-mask: "ipv4-network-mask"
          dynamic-ip: true
          ipv6-address: "ipv6-address"
        - ipv6-mask-length: 1
          ipv6-network-mask: "ipv6-network-mask"
          ipv4-address: "ipv4-address"
          ipv4-mask-length: 6
          topology:
            security-zone:
              uid: "uid"
              domain:
                uid: "uid"
                domain-type: "mds"
                name: "name"
              name: "name"
              type: "type"
            leads-to-specific-network:
              uid: "uid"
              domain:
                uid: "uid"
                domain-type: "mds"
                name: "name"
              name: "name"
              type: "type"
            leads-to-dmz: true
            ip-address-behind-this-interface: "not defined"
            leads-to-internet: true
          interface-name: "interface-name"
          ipv4-network-mask: "ipv4-network-mask"
          dynamic-ip: true
          ipv6-address: "ipv6-address"
        comments: "comments"
        color: "aquamarine"
        operating-system: "operating-system"
        cluster-member-names:
        - "cluster-member-names"
        - "cluster-member-names"
        icon: "icon"
        meta-info:
          creator: "creator"
          last-modify-time:
            iso-8601: "iso-8601"
            posix: 0
          validation-state: "ok"
          creation-time:
            iso-8601: "iso-8601"
            posix: 0
          lock: "unlocked"
          last-modifier: "last-modifier"
        groups:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        type: "type"
        vpn-encryption-domain: "manual"
        version: "version"
        ipv6-address: "ipv6-address"
        tags:
        - "tags"
        - "tags"
        management-blades:
          secondary: true
          identity-awareness: true
          logging-and-status: true
          compliance: true
          smart-event-server: true
          endpoint-policy: true
          network-policy-management: true
          monitoring: true
          identity-logging: true
          smart-event-correlation: true
        uid: "uid"
        ipv4-address: "ipv4-address"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        network-security-blades:
          identity-awareness: true
          site-to-site-vpn: true
          traditional-anti-virus: true
          content-awareness: true
          anti-spam: true
          monitoring: true
          ips: true
          threat-extraction: true
          anti-bot: true
          qos: true
          firewall: true
          url-filtering: true
          application-control: true
          anti-virus: true
          data-loss-prevention: true
          mobile-access: true
          threat-emulation: true
        vpn-encryption-domain-manually-defined:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        name: "name"
        sic-status: "sic-status"
        read-only: true
        hardware: "hardware"
        policy:
          access-policy-revision:
            uid: "uid"
            domain:
              uid: "uid"
              domain-type: "mds"
              name: "name"
            name: "name"
            type: "type"
          cluster-members-access-policy-revision:
          - uid: "uid"
            policy-name: "policy-name"
            name: "name"
            revision:
              uid: "uid"
              domain:
                uid: "uid"
                domain-type: "mds"
                name: "name"
              name: "name"
              type: "type"
          - uid: "uid"
            policy-name: "policy-name"
            name: "name"
            revision:
              uid: "uid"
              domain:
                uid: "uid"
                domain-type: "mds"
                name: "name"
              name: "name"
              type: "type"
          threat-policy-name: "threat-policy-name"
          access-policy-installation-date:
            iso-8601: "iso-8601"
            posix: 0
          access-policy-name: "access-policy-name"
          threat-policy-revision:
            uid: "uid"
            domain:
              uid: "uid"
              domain-type: "mds"
              name: "name"
            name: "name"
            type: "type"
          access-policy-installed: true
          threat-policy-installation-date:
            iso-8601: "iso-8601"
            posix: 0
          cluster-members-threat-policy-revision:
          - uid: "uid"
            policy-name: "policy-name"
            name: "name"
            revision:
              uid: "uid"
              domain:
                uid: "uid"
                domain-type: "mds"
                name: "name"
              name: "name"
              type: "type"
          - uid: "uid"
            policy-name: "policy-name"
            name: "name"
            revision:
              uid: "uid"
              domain:
                uid: "uid"
                domain-type: "mds"
                name: "name"
              name: "name"
              type: "type"
          threat-policy-installed: true
      - interfaces:
        - ipv6-mask-length: 1
          ipv6-network-mask: "ipv6-network-mask"
          ipv4-address: "ipv4-address"
          ipv4-mask-length: 6
          topology:
            security-zone:
              uid: "uid"
              domain:
                uid: "uid"
                domain-type: "mds"
                name: "name"
              name: "name"
              type: "type"
            leads-to-specific-network:
              uid: "uid"
              domain:
                uid: "uid"
                domain-type: "mds"
                name: "name"
              name: "name"
              type: "type"
            leads-to-dmz: true
            ip-address-behind-this-interface: "not defined"
            leads-to-internet: true
          interface-name: "interface-name"
          ipv4-network-mask: "ipv4-network-mask"
          dynamic-ip: true
          ipv6-address: "ipv6-address"
        - ipv6-mask-length: 1
          ipv6-network-mask: "ipv6-network-mask"
          ipv4-address: "ipv4-address"
          ipv4-mask-length: 6
          topology:
            security-zone:
              uid: "uid"
              domain:
                uid: "uid"
                domain-type: "mds"
                name: "name"
              name: "name"
              type: "type"
            leads-to-specific-network:
              uid: "uid"
              domain:
                uid: "uid"
                domain-type: "mds"
                name: "name"
              name: "name"
              type: "type"
            leads-to-dmz: true
            ip-address-behind-this-interface: "not defined"
            leads-to-internet: true
          interface-name: "interface-name"
          ipv4-network-mask: "ipv4-network-mask"
          dynamic-ip: true
          ipv6-address: "ipv6-address"
        comments: "comments"
        color: "aquamarine"
        operating-system: "operating-system"
        cluster-member-names:
        - "cluster-member-names"
        - "cluster-member-names"
        icon: "icon"
        meta-info:
          creator: "creator"
          last-modify-time:
            iso-8601: "iso-8601"
            posix: 0
          validation-state: "ok"
          creation-time:
            iso-8601: "iso-8601"
            posix: 0
          lock: "unlocked"
          last-modifier: "last-modifier"
        groups:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        type: "type"
        vpn-encryption-domain: "manual"
        version: "version"
        ipv6-address: "ipv6-address"
        tags:
        - "tags"
        - "tags"
        management-blades:
          secondary: true
          identity-awareness: true
          logging-and-status: true
          compliance: true
          smart-event-server: true
          endpoint-policy: true
          network-policy-management: true
          monitoring: true
          identity-logging: true
          smart-event-correlation: true
        uid: "uid"
        ipv4-address: "ipv4-address"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        network-security-blades:
          identity-awareness: true
          site-to-site-vpn: true
          traditional-anti-virus: true
          content-awareness: true
          anti-spam: true
          monitoring: true
          ips: true
          threat-extraction: true
          anti-bot: true
          qos: true
          firewall: true
          url-filtering: true
          application-control: true
          anti-virus: true
          data-loss-prevention: true
          mobile-access: true
          threat-emulation: true
        vpn-encryption-domain-manually-defined:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        name: "name"
        sic-status: "sic-status"
        read-only: true
        hardware: "hardware"
        policy:
          access-policy-revision:
            uid: "uid"
            domain:
              uid: "uid"
              domain-type: "mds"
              name: "name"
            name: "name"
            type: "type"
          cluster-members-access-policy-revision:
          - uid: "uid"
            policy-name: "policy-name"
            name: "name"
            revision:
              uid: "uid"
              domain:
                uid: "uid"
                domain-type: "mds"
                name: "name"
              name: "name"
              type: "type"
          - uid: "uid"
            policy-name: "policy-name"
            name: "name"
            revision:
              uid: "uid"
              domain:
                uid: "uid"
                domain-type: "mds"
                name: "name"
              name: "name"
              type: "type"
          threat-policy-name: "threat-policy-name"
          access-policy-installation-date:
            iso-8601: "iso-8601"
            posix: 0
          access-policy-name: "access-policy-name"
          threat-policy-revision:
            uid: "uid"
            domain:
              uid: "uid"
              domain-type: "mds"
              name: "name"
            name: "name"
            type: "type"
          access-policy-installed: true
          threat-policy-installation-date:
            iso-8601: "iso-8601"
            posix: 0
          cluster-members-threat-policy-revision:
          - uid: "uid"
            policy-name: "policy-name"
            name: "name"
            revision:
              uid: "uid"
              domain:
                uid: "uid"
                domain-type: "mds"
                name: "name"
              name: "name"
              type: "type"
          - uid: "uid"
            policy-name: "policy-name"
            name: "name"
            revision:
              uid: "uid"
              domain:
                uid: "uid"
                domain-type: "mds"
                name: "name"
              name: "name"
              type: "type"
          threat-policy-installed: true
      from: 0
      to: 5
  QueryNatRulebaseReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      objects-dictionary:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      rulebase:
        type: "array"
        description: "N/A"
        items:
          $ref: "#/definitions/IEntityInRulebase"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      total: 1
      objects-dictionary:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      name: "name"
      from: 0
      rulebase:
      - type: "type"
      - type: "type"
      to: 6
  QueryNatRulebaseRequest:
    type: "object"
    required:
    - "package"
    properties:
      dereference-group-members:
        type: "boolean"
        description: "Indicates whether to dereference \"members\" field by details\
          \ level for every object in reply."
        default: true
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      filter:
        type: "string"
        description: "Search expression to filter the rulebase. The provided text\
          \ should be exactly the same as it would be given in Smart Console. The\
          \ logical operators in the expression ('AND', 'OR') should be provided in\
          \ capital letters. If an operator is not used, the default OR operator applies."
      filter-settings:
        $ref: "#/definitions/ApiRulebaseFilterSettingsRequest"
      limit:
        type: "integer"
        description: "No more than that many results will be returned."
      offset:
        type: "integer"
        description: "Skip that many results before beginning to return them."
      order:
        type: "array"
        description: "Sorts results by the given field. By default the results are\
          \ sorted in the ascending order by name."
        items:
          $ref: "#/definitions/ApiQueryOrderRequest"
      package:
        type: "string"
        description: "Name of the package."
      show-membership:
        type: "boolean"
        description: "Indicates whether to calculate and show \"groups\" field for\
          \ every object in reply."
        default: true
      use-object-dictionary:
        type: "boolean"
        description: "N/A"
    example:
      filter: "filter"
      package: "package"
      offset: 6
      limit: 0
      show-membership: true
      dereference-group-members: true
      filter-settings:
        search-mode: "general"
        packet-search-settings:
          expand-group-members: false
          expand-group-with-exclusion-members: false
          match-on-group-with-exclusion: true
          match-on-negate: true
          match-on-any: true
      use-object-dictionary: true
      details-level: "standard"
      order:
      - ASC: "name"
        DESC: "name"
      - ASC: "name"
        DESC: "name"
  QueryObjectsReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      objects:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard. In case of details-level is set to full, all unsupported\
          \ objects will be shown with a warning saying that the response could change\
          \ when support for these object is added."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
    example:
      total: 1
      objects:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      from: 0
      to: 6
  QueryObjectsRequest:
    type: "object"
    properties:
      dereference-group-members:
        type: "boolean"
        description: "Indicates whether to dereference \"members\" field by details\
          \ level for every object in reply."
        default: true
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      filter:
        type: "string"
        description: "Search expression to filter objects by. The provided text should\
          \ be exactly the same as it would be given in Smart Console. The logical\
          \ operators in the expression ('AND', 'OR') should be provided in capital\
          \ letters. By default, the search involves both a textual search and a IP\
          \ search. To use IP search only, set the \"ip-only\" parameter to true."
      ip-only:
        type: "boolean"
        description: "If using \"filter\", use this field to search objects by their\
          \ IP address only, without involving the textual search.<br><br>IP search\
          \ use cases<br>&nbsp;&nbsp;&nbsp;&nbsp; � Full IPv4 address matches for:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\
          \ - Hosts, Check Point Hosts and Gateways with exact IPv4 match or with\
          \ interfaces which subnet contains the search address<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\
          \ - IPv4 Networks and IPv4 Address Ranges that contain the search address<br>&nbsp;&nbsp;&nbsp;&nbsp;\
          \ � Partial IPv4 address matches for:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\
          \ - Hosts, Networks, Check Point Hosts and Gateways with IPv4 address that\
          \ starts from the search address<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\
          \ - Hosts, Check Point Hosts and Gateways with interfaces which subnet address\
          \ starts from the search address<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\
          \ - IPv4 Address Ranges with first address or last address that starts from\
          \ the search address<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\
          \ - IPv4 Networks and IPv4 Address Ranges that contain the network derived\
          \ from the search address supplemented with missing octets (all zeroes)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\
          \ - Hosts, Check Point Hosts and Gateways with interfaces which subnet contains\
          \ the network derived from the search address supplemented with missing\
          \ octets (all zeroes)<br>&nbsp;&nbsp;&nbsp;&nbsp; � IPv6 address:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\
          \ - Not supported<br><br> * Check Point Host is a server of type Network\
          \ Policy Management, Logging & Status, SmartEvent, etc.<br> * When one IP\
          \ address is checked to start from another (partial) IP address - only full\
          \ octets are considered <br> * Check Examples part for IP search examples."
        default: false
      limit:
        type: "integer"
        description: "No more than that many results will be returned."
      offset:
        type: "integer"
        description: "Skip that many results before beginning to return them."
      order:
        type: "array"
        description: "Sorts results by the given field. By default the results are\
          \ sorted in the ascending order by name."
        items:
          $ref: "#/definitions/ApiQueryOrderRequest"
      show-membership:
        type: "boolean"
        description: "Indicates whether to calculate and show \"groups\" field for\
          \ every object in reply."
        default: true
      type:
        type: "string"
        description: "The objects' type, e.g.: host, service-tcp, network, address-range..."
        default: "object"
    example:
      filter: "filter"
      offset: 6
      limit: 0
      ip-only: false
      show-membership: true
      dereference-group-members: true
      details-level: "standard"
      type: "object"
      order:
      - ASC: "name"
        DESC: "name"
      - ASC: "name"
        DESC: "name"
  QueryThreatExceptionRulebaseReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      objects-dictionary:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      rulebase:
        type: "array"
        description: "N/A"
        items:
          $ref: "#/definitions/IEntityInRulebase"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      total: 1
      objects-dictionary:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      name: "name"
      from: 0
      rulebase:
      - type: "type"
      - type: "type"
      to: 6
  QueryThreatExceptionRulebaseRequest:
    type: "object"
    required:
    - "name"
    - "rule-uid"
    properties:
      dereference-group-members:
        type: "boolean"
        description: "Indicates whether to dereference \"members\" field by details\
          \ level for every object in reply."
        default: true
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      filter:
        type: "string"
        description: "Search expression to filter the rulebase. The provided text\
          \ should be exactly the same as it would be given in Smart Console. The\
          \ logical operators in the expression ('AND', 'OR') should be provided in\
          \ capital letters. If an operator is not used, the default OR operator applies."
      filter-settings:
        $ref: "#/definitions/ApiRulebaseFilterSettingsRequest"
      limit:
        type: "integer"
        description: "No more than that many results will be returned."
      name:
        type: "string"
        description: "The name of the layer containing the parent threat rule."
      offset:
        type: "integer"
        description: "Skip that many results before beginning to return them."
      order:
        type: "array"
        description: "Sorts results by the given field. By default the results are\
          \ sorted in the ascending order by name."
        items:
          $ref: "#/definitions/ApiQueryOrderRequest"
      package:
        type: "string"
        description: "Name of the package."
      rule-name:
        type: "string"
        description: "The name of the parent rule."
      rule-number:
        type: "integer"
        description: "The position in the rulebase of the parent rule."
      rule-uid:
        type: "string"
        description: "The UID of the parent rule."
      show-membership:
        type: "boolean"
        description: "Indicates whether to calculate and show \"groups\" field for\
          \ every object in reply."
        default: true
      uid:
        type: "string"
        description: "The uid of the layer containing the parent threat rule."
      use-object-dictionary:
        type: "boolean"
        description: "N/A"
    example:
      package: "package"
      offset: 6
      dereference-group-members: true
      use-object-dictionary: true
      filter: "filter"
      rule-uid: "rule-uid"
      uid: "uid"
      rule-number: 1
      rule-name: "rule-name"
      limit: 0
      name: "name"
      show-membership: true
      filter-settings:
        search-mode: "general"
        packet-search-settings:
          expand-group-members: false
          expand-group-with-exclusion-members: false
          match-on-group-with-exclusion: true
          match-on-negate: true
          match-on-any: true
      details-level: "standard"
      order:
      - ASC: "name"
        DESC: "name"
      - ASC: "name"
        DESC: "name"
  QueryThreatRulebaseReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      objects-dictionary:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      rulebase:
        type: "array"
        description: "N/A"
        items:
          $ref: "#/definitions/IEntityInRulebase"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      total: 1
      objects-dictionary:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      name: "name"
      from: 0
      rulebase:
      - type: "type"
      - type: "type"
      to: 6
  QueryThreatRulebaseRequest:
    type: "object"
    required:
    - "name"
    properties:
      dereference-group-members:
        type: "boolean"
        description: "Indicates whether to dereference \"members\" field by details\
          \ level for every object in reply."
        default: true
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      filter:
        type: "string"
        description: "Search expression to filter the rulebase. The provided text\
          \ should be exactly the same as it would be given in Smart Console. The\
          \ logical operators in the expression ('AND', 'OR') should be provided in\
          \ capital letters. If an operator is not used, the default OR operator applies."
      filter-settings:
        $ref: "#/definitions/ApiRulebaseFilterSettingsRequest"
      limit:
        type: "integer"
        description: "No more than that many results will be returned."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      offset:
        type: "integer"
        description: "Skip that many results before beginning to return them."
      order:
        type: "array"
        description: "Sorts results by the given field. By default the results are\
          \ sorted in the ascending order by name."
        items:
          $ref: "#/definitions/ApiQueryOrderRequest"
      package:
        type: "string"
        description: "Name of the package."
      show-membership:
        type: "boolean"
        description: "Indicates whether to calculate and show \"groups\" field for\
          \ every object in reply."
        default: true
      uid:
        type: "string"
        description: "Object unique identifier."
      use-object-dictionary:
        type: "boolean"
        description: "N/A"
    example:
      filter: "filter"
      uid: "uid"
      package: "package"
      offset: 6
      limit: 0
      name: "name"
      show-membership: true
      dereference-group-members: true
      filter-settings:
        search-mode: "general"
        packet-search-settings:
          expand-group-members: false
          expand-group-with-exclusion-members: false
          match-on-group-with-exclusion: true
          match-on-negate: true
          match-on-any: true
      use-object-dictionary: true
      details-level: "standard"
      order:
      - ASC: "name"
        DESC: "name"
      - ASC: "name"
        DESC: "name"
  Range:
    type: "object"
    properties:
      end:
        type: "string"
        description: "N/A"
      start:
        type: "string"
        description: "N/A"
    example:
      start: "start"
      end: "end"
  RemoteDataCenterObjectMetaData:
    type: "object"
    properties:
      updated-on-data-center:
        $ref: "#/definitions/DateReply"
    description: "N/A"
    example:
      updated-on-data-center:
        iso-8601: "iso-8601"
        posix: 0
  RemoteUpdatableObjectMetaData:
    type: "object"
    properties:
      updated-on-updatable-objects-repository:
        $ref: "#/definitions/DateReply"
    description: "N/A"
    example:
      updated-on-updatable-objects-repository:
        iso-8601: "iso-8601"
        posix: 0
  RpcServiceReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      program-number:
        type: "integer"
        description: "N/A"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "aquamarine"
      keep-connections-open-after-policy-installation: true
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      type: "type"
      program-number: 0
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      read-only: true
  RpcServiceRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      program-number:
        type: "integer"
        description: "N/A"
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      keep-connections-open-after-policy-installation: true
      name: "name"
      groups:
        add: "add"
      details-level: "standard"
      new-name: "new-name"
      program-number: 0
      tags:
        add: "add"
  RpcServiceRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      program-number:
        type: "integer"
        description: "N/A"
      set-if-exists:
        type: "boolean"
        description: "If another object with the same identifier already exists, it\
          \ will be updated. The command behaviour will be the same as if originally\
          \ a set command was called. Pay attention that original object's fields\
          \ will be overwritten by the fields provided in the request payload!"
        default: false
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      set-if-exists: false
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      keep-connections-open-after-policy-installation: true
      name: "name"
      groups: "groups"
      details-level: "standard"
      program-number: 0
      tags: "tags"
  RunInitInterfacesReply:
    type: "object"
    properties:
      message:
        type: "string"
        description: "Operation status."
    example:
      message: "message"
  RunInitInterfacesRequest:
    type: "object"
    required:
    - "uid"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      name:
        type: "string"
        description: "Object name."
      scope:
        type: "string"
        description: "N/A"
        enum:
        - "all"
        - "specific"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      scope: "all"
      name: "name"
      details-level: "standard"
  RunScriptRequest:
    type: "object"
    required:
    - "script"
    - "script-name"
    - "targets"
    properties:
      args:
        type: "string"
        description: "Script arguments."
      comments:
        type: "string"
        description: "Comments string."
      script:
        type: "string"
        description: "Script body."
      script-name:
        type: "string"
        description: "Script name."
      targets:
        type: "string"
        description: "On what targets to execute this command. Targets may be identified\
          \ by their name, or object unique identifier."
    example:
      args: "args"
      comments: "comments"
      script-name: "script-name"
      targets: "targets"
      script: "script"
  ScadaApplicationEntryItem:
    type: "object"
    properties:
      key:
        type: "string"
        description: "SCADA property key."
      value:
        type: "string"
        description: "SCADA property value."
    example:
      value: "value"
      key: "key"
  ScadaApplicationReply:
    type: "object"
    properties:
      additional-categories:
        type: "array"
        description: "N/A"
        items:
          type: "string"
      application-id:
        type: "integer"
        description: "N/A"
      application-signature:
        type: "string"
        description: "Application signature generated by <a href=\"https://supportcenter.checkpoint.com/supportcenter/portal?eventSubmit_doGoviewsolutiondetails=&solutionid=sk103051\"\
          >Signature Tool</a>."
      category:
        type: "string"
        description: "SCADA application category."
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      description:
        type: "string"
        description: "N/A"
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      risk:
        type: "string"
        description: "N/A"
      scada-properties:
        type: "array"
        description: "SCADA application properties."
        items:
          $ref: "#/definitions/ScadaApplicationEntryItem"
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
      user-defined:
        type: "boolean"
        description: "True if this application site was defined by user (not predefined\
          \ one)."
    example:
      comments: "comments"
      color: "aquamarine"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      description: "description"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      user-defined: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      risk: "risk"
      application-signature: "application-signature"
      scada-properties:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
      additional-categories:
      - "additional-categories"
      - "additional-categories"
      category: "category"
      read-only: true
      application-id: 0
  ScadaApplicationRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      additional-categories:
        $ref: "#/definitions/add"
      application-signature:
        type: "string"
        description: "N/A"
      category:
        type: "string"
        description: "SCADA application category."
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      description:
        type: "string"
        description: "A description for the application."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      scada-properties:
        type: "array"
        description: "SCADA application properties."
        items:
          $ref: "#/definitions/ScadaApplicationEntryItem"
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "black"
      ignore-warnings: false
      description: "description"
      groups:
        add: "add"
      new-name: "new-name"
      tags:
        add: "add"
      uid: "uid"
      ignore-errors: false
      name: "name"
      application-signature: "application-signature"
      details-level: "standard"
      scada-properties:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
      additional-categories:
        add: "add"
      category: "category"
  ScadaApplicationRequestNew:
    type: "object"
    required:
    - "category"
    - "name"
    properties:
      additional-categories:
        type: "string"
        description: "Used to configure or edit the additional categories of a custom\
          \ application / site used in the Application and URL Filtering or Threat\
          \ Prevention."
      application-signature:
        type: "string"
        description: "N/A"
      category:
        type: "string"
        description: "SCADA application category."
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      description:
        type: "string"
        description: "A description for the application."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      scada-properties:
        type: "array"
        description: "SCADA application properties."
        items:
          $ref: "#/definitions/ScadaApplicationEntryItem"
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      comments: "comments"
      color: "black"
      ignore-warnings: false
      description: "description"
      groups: "groups"
      tags: "tags"
      ignore-errors: false
      name: "name"
      application-signature: "application-signature"
      details-level: "standard"
      scada-properties:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
      additional-categories: "additional-categories"
      category: "category"
  SctpServiceReply:
    type: "object"
    properties:
      aggressive-aging:
        $ref: "#/definitions/AggressiveAgingReply"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      match-for-any:
        type: "boolean"
        description: "Indicates whether this service is used when 'Any' is set as\
          \ the rule's service and there are several service objects with the same\
          \ source port and protocol."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      port:
        type: "string"
        description: "Port number. To specify a port range add a hyphen between the\
          \ lowest and the highest port numbers, for example 44-45."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      session-timeout:
        type: "integer"
        description: "Time (in seconds) before the session times out."
      source-port:
        type: "string"
        description: "Source port number. To specify a port range add a hyphen between\
          \ the lowest and the highest port numbers, for example 44-45."
      sync-connections-on-cluster:
        type: "boolean"
        description: "Enables state-synchronized High Availability or Load Sharing\
          \ on a ClusterXL or OPSEC-certified cluster."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
      use-default-session-timeout:
        type: "boolean"
        description: "Use default virtual session timeout."
    example:
      session-timeout: 0
      source-port: "source-port"
      use-default-session-timeout: true
      comments: "comments"
      color: "aquamarine"
      match-for-any: true
      aggressive-aging:
        enable: true
        default-timeout: 0
        use-default-timeout: true
        timeout: 6
      keep-connections-open-after-policy-installation: true
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      sync-connections-on-cluster: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      port: "port"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      read-only: true
  SctpServiceRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      aggressive-aging:
        $ref: "#/definitions/AggressiveAgingRequest"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      match-for-any:
        type: "boolean"
        description: "Indicates whether this service is used when 'Any' is set as\
          \ the rule's service and there are several service objects with the same\
          \ source port and protocol."
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      port:
        type: "string"
        description: "Port number. To specify a port range add a hyphen between the\
          \ lowest and the highest port numbers, for example 44-45."
      session-timeout:
        type: "integer"
        description: "Time (in seconds) before the session times out."
      source-port:
        type: "string"
        description: "Source port number. To specify a port range add a hyphen between\
          \ the lowest and the highest port numbers, for example 44-45."
      sync-connections-on-cluster:
        type: "boolean"
        description: "Enables state-synchronized High Availability or Load Sharing\
          \ on a ClusterXL or OPSEC-certified cluster."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
      use-default-session-timeout:
        type: "boolean"
        description: "Use default virtual session timeout."
    example:
      session-timeout: 0
      source-port: "source-port"
      use-default-session-timeout: true
      comments: "comments"
      color: "black"
      ignore-warnings: false
      match-for-any: true
      aggressive-aging:
        enable: true
        default-timeout: 0
        use-default-timeout: true
        timeout: 6
      keep-connections-open-after-policy-installation: true
      groups:
        add: "add"
      sync-connections-on-cluster: true
      new-name: "new-name"
      tags:
        add: "add"
      uid: "uid"
      ignore-errors: false
      port: "port"
      name: "name"
      details-level: "standard"
  SctpServiceRequestNew:
    type: "object"
    required:
    - "name"
    - "port"
    properties:
      aggressive-aging:
        $ref: "#/definitions/AggressiveAgingRequest"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      match-for-any:
        type: "boolean"
        description: "Indicates whether this service is used when 'Any' is set as\
          \ the rule's service and there are several service objects with the same\
          \ source port and protocol."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      port:
        type: "string"
        description: "Port number. To specify a port range add a hyphen between the\
          \ lowest and the highest port numbers, for example 44-45."
      session-timeout:
        type: "integer"
        description: "Time (in seconds) before the session times out."
      set-if-exists:
        type: "boolean"
        description: "If another object with the same identifier already exists, it\
          \ will be updated. The command behaviour will be the same as if originally\
          \ a set command was called. Pay attention that original object's fields\
          \ will be overwritten by the fields provided in the request payload!"
        default: false
      source-port:
        type: "string"
        description: "Source port number. To specify a port range add a hyphen between\
          \ the lowest and the highest port numbers, for example 44-45."
      sync-connections-on-cluster:
        type: "boolean"
        description: "Enables state-synchronized High Availability or Load Sharing\
          \ on a ClusterXL or OPSEC-certified cluster."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
      use-default-session-timeout:
        type: "boolean"
        description: "Use default virtual session timeout."
    example:
      session-timeout: 0
      source-port: "source-port"
      set-if-exists: false
      use-default-session-timeout: true
      comments: "comments"
      color: "black"
      ignore-warnings: false
      match-for-any: true
      aggressive-aging:
        enable: true
        default-timeout: 0
        use-default-timeout: true
        timeout: 6
      keep-connections-open-after-policy-installation: true
      groups: "groups"
      sync-connections-on-cluster: true
      tags: "tags"
      ignore-errors: false
      port: "port"
      name: "name"
      details-level: "standard"
  SecurityZoneReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "aquamarine"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      name: "name"
      read-only: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  SecurityZoneRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      details-level: "standard"
      new-name: "new-name"
      tags:
        add: "add"
  SecurityZoneRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      details-level: "standard"
      tags: "tags"
  SecurityZoneSettingsReply:
    type: "object"
    properties:
      auto-calculated:
        type: "boolean"
        description: "Security Zone is calculated according to where the interface\
          \ leads to."
      specific-zone:
        type: "string"
        description: "Security Zone specified manually."
    description: "N/A"
    example:
      auto-calculated: true
      specific-zone: "specific-zone"
  SecurityZoneSettingsRequest:
    type: "object"
    properties:
      auto-calculated:
        type: "boolean"
        description: "Security Zone is calculated according to where the interface\
          \ leads to."
      specific-zone:
        type: "string"
        description: "Security Zone specified manually."
    description: "N/A"
    example:
      auto-calculated: true
      specific-zone: "specific-zone"
  ServiceGroupReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      members:
        type: "array"
        description: "Collection of Service objects identified by the name or UID.\
          \ How much details are returned depends on the details-level field of the\
          \ request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      ranges:
        $ref: "#/definitions/PortRanges"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "aquamarine"
      ranges:
        tcp:
        - start: "start"
          end: "end"
        - start: "start"
          end: "end"
        udp:
        - start: "start"
          end: "end"
        - start: "start"
          end: "end"
        excluded-others:
        - "{}"
        - "{}"
        others:
        - "{}"
        - "{}"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      members:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      name: "name"
      read-only: true
  ServiceGroupRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      members:
        $ref: "#/definitions/add"
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      members:
        add: "add"
      name: "name"
      groups:
        add: "add"
      details-level: "standard"
      new-name: "new-name"
      tags:
        add: "add"
  ServiceGroupRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      members:
        type: "string"
        description: "Collection of Network objects identified by the name or UID."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      members: "members"
      name: "name"
      groups: "groups"
      details-level: "standard"
      tags: "tags"
  ServiceGroupRequestQuery:
    type: "object"
    properties:
      dereference-group-members:
        type: "boolean"
        description: "Indicates whether to dereference \"members\" field by details\
          \ level for every object in reply."
        default: true
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      limit:
        type: "integer"
        description: "No more than that many results will be returned."
      offset:
        type: "integer"
        description: "Skip that many results before beginning to return them."
      order:
        type: "array"
        description: "Sorts results by the given field. By default the results are\
          \ sorted in the ascending order by name."
        items:
          $ref: "#/definitions/ApiQueryOrderRequest"
      show-as-ranges:
        type: "boolean"
        description: "When true, the service group's matched content is displayed\
          \ as ranges of port numbers rather than service objects.<br />Objects that\
          \ are not represented using port numbers are presented as objects.<br />The\
          \ 'members' parameter is omitted from the response and instead the 'ranges'\
          \ parameter is displayed."
        default: false
      show-membership:
        type: "boolean"
        description: "Indicates whether to calculate and show \"groups\" field for\
          \ every object in reply."
        default: true
    example:
      offset: 6
      limit: 0
      show-membership: true
      dereference-group-members: true
      show-as-ranges: false
      details-level: "standard"
      order:
      - ASC: "name"
        DESC: "name"
      - ASC: "name"
        DESC: "name"
  ServiceGroupRequestShow:
    type: "object"
    required:
    - "uid"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      name:
        type: "string"
        description: "Object name."
      show-as-ranges:
        type: "boolean"
        description: "When true, the service group's matched content is displayed\
          \ as ranges of port numbers rather than service objects.<br />Objects that\
          \ are not represented using port numbers are presented as objects.<br />The\
          \ 'members' parameter is omitted from the response and instead the 'ranges'\
          \ parameter is displayed."
        default: false
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      name: "name"
      show-as-ranges: false
      details-level: "standard"
  ServiceIcmp6Reply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icmp-code:
        type: "integer"
        description: "As listed in: <a href=\"http://www.iana.org/assignments/icmp-parameters\"\
          \ target=\"_blank\">RFC 792</a>."
      icmp-type:
        type: "integer"
        description: "As listed in: <a href=\"http://www.iana.org/assignments/icmp-parameters\"\
          \ target=\"_blank\">RFC 792</a>."
      icon:
        type: "string"
        description: "Object icon."
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "aquamarine"
      keep-connections-open-after-policy-installation: true
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      icmp-code: 0
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      icmp-type: 6
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      read-only: true
  ServiceIcmp6RequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      icmp-code:
        type: "integer"
        description: "As listed in: <a href=\"http://www.iana.org/assignments/icmp-parameters\"\
          \ target=\"_blank\">RFC 792</a>."
      icmp-type:
        type: "integer"
        description: "As listed in: <a href=\"http://www.iana.org/assignments/icmp-parameters\"\
          \ target=\"_blank\">RFC 792</a>."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "black"
      ignore-warnings: false
      keep-connections-open-after-policy-installation: true
      groups:
        add: "add"
      icmp-code: 0
      new-name: "new-name"
      tags:
        add: "add"
      uid: "uid"
      ignore-errors: false
      icmp-type: 6
      name: "name"
      details-level: "standard"
  ServiceIcmp6RequestNew:
    type: "object"
    required:
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      icmp-code:
        type: "integer"
        description: "As listed in: <a href=\"http://www.iana.org/assignments/icmp-parameters\"\
          \ target=\"_blank\">RFC 792</a>."
      icmp-type:
        type: "integer"
        description: "As listed in: <a href=\"http://www.iana.org/assignments/icmp-parameters\"\
          \ target=\"_blank\">RFC 792</a>."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      set-if-exists:
        type: "boolean"
        description: "If another object with the same identifier already exists, it\
          \ will be updated. The command behaviour will be the same as if originally\
          \ a set command was called. Pay attention that original object's fields\
          \ will be overwritten by the fields provided in the request payload!"
        default: false
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      set-if-exists: false
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      icmp-type: 6
      keep-connections-open-after-policy-installation: true
      name: "name"
      groups: "groups"
      icmp-code: 0
      details-level: "standard"
      tags: "tags"
  ServiceIcmpReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icmp-code:
        type: "integer"
        description: "As listed in: <a href=\"http://www.iana.org/assignments/icmp-parameters\"\
          \ target=\"_blank\">RFC 792</a>."
      icmp-type:
        type: "integer"
        description: "As listed in: <a href=\"http://www.iana.org/assignments/icmp-parameters\"\
          \ target=\"_blank\">RFC 792</a>."
      icon:
        type: "string"
        description: "Object icon."
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "aquamarine"
      keep-connections-open-after-policy-installation: true
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      icmp-code: 0
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      icmp-type: 6
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      read-only: true
  ServiceIcmpRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      icmp-code:
        type: "integer"
        description: "As listed in: <a href=\"http://www.iana.org/assignments/icmp-parameters\"\
          \ target=\"_blank\">RFC 792</a>."
      icmp-type:
        type: "integer"
        description: "As listed in: <a href=\"http://www.iana.org/assignments/icmp-parameters\"\
          \ target=\"_blank\">RFC 792</a>."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "black"
      ignore-warnings: false
      keep-connections-open-after-policy-installation: true
      groups:
        add: "add"
      icmp-code: 0
      new-name: "new-name"
      tags:
        add: "add"
      uid: "uid"
      ignore-errors: false
      icmp-type: 6
      name: "name"
      details-level: "standard"
  ServiceIcmpRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      icmp-code:
        type: "integer"
        description: "As listed in: <a href=\"http://www.iana.org/assignments/icmp-parameters\"\
          \ target=\"_blank\">RFC 792</a>."
      icmp-type:
        type: "integer"
        description: "As listed in: <a href=\"http://www.iana.org/assignments/icmp-parameters\"\
          \ target=\"_blank\">RFC 792</a>."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      set-if-exists:
        type: "boolean"
        description: "If another object with the same identifier already exists, it\
          \ will be updated. The command behaviour will be the same as if originally\
          \ a set command was called. Pay attention that original object's fields\
          \ will be overwritten by the fields provided in the request payload!"
        default: false
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      set-if-exists: false
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      icmp-type: 6
      keep-connections-open-after-policy-installation: true
      name: "name"
      groups: "groups"
      icmp-code: 0
      details-level: "standard"
      tags: "tags"
  SetActiveReply:
    type: "object"
    properties:
      task-id:
        type: "string"
        description: "Asynchronous task unique identifier."
    example:
      task-id: "task-id"
  SetActiveRequest:
    type: "object"
    properties:
      force:
        type: "boolean"
        description: "N/A"
    example:
      force: true
  SharedSecretReply:
    type: "object"
    properties:
      external-gateway:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
    example:
      external-gateway:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  SharedSecretRequest:
    type: "object"
    properties:
      external-gateway:
        type: "string"
        description: "External gateway identified by the name or UID."
      shared-secret:
        type: "string"
        description: "Shared secret."
    description: "Shared secrets for external gateways."
    example:
      shared-secret: "shared-secret"
      external-gateway: "external-gateway"
  ShowCommandReply:
    type: "object"
    properties:
      description:
        type: "string"
        description: "N/A"
      name:
        type: "string"
        description: "N/A"
    example:
      name: "name"
      description: "description"
  ShowCommandsReply:
    type: "object"
    properties:
      commands:
        type: "array"
        description: "N/A"
        items:
          $ref: "#/definitions/ShowCommandReply"
    example:
      commands:
      - name: "name"
        description: "description"
      - name: "name"
        description: "description"
  ShowCommandsRequest:
    type: "object"
    properties:
      prefix:
        type: "string"
        description: "N/A"
    example:
      prefix: "prefix"
  ShowObjectReply:
    type: "object"
    properties:
      object:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
    example:
      object:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  ShowObjectRequest:
    type: "object"
    required:
    - "uid"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      details-level: "standard"
  ShowRuleCandidateReply:
    type: "object"
    properties:
      default-object:
        type: "object"
        description: "Default object of the field."
        properties: {}
      from:
        type: "integer"
        description: "From which element number the query was done."
      objects:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
    example:
      total: 1
      objects:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      from: 0
      to: 6
      default-object: "{}"
  ShowRuleCandidateRequest:
    type: "object"
    required:
    - "field"
    - "filter"
    - "layer"
    properties:
      dereference-group-members:
        type: "boolean"
        description: "Indicates whether to dereference \"members\" field by details\
          \ level for every object in reply."
        default: true
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      field:
        type: "string"
        description: "Policy field name.<br>For access layer: destination, source,\
          \ service, install-on, action, time, vpn, track, content<br>For nat layer:\
          \ original-destination, original-source, original-service, translated-destination,\
          \ translated-source, translated-service, install-on<br>For threat layer:\
          \ destination, source, service, install-on, protected-scope, action, track<br>For\
          \ exception: destination, source, service, install-on, protected-scope,\
          \ action, track, protection-or-site."
        enum:
        - "source"
        - "destination"
        - "install-on"
        - "service"
        - "time"
        - "vpn"
        - "track"
        - "content"
        - "original-destination"
        - "original-source"
        - "translated-destination"
        - "translated-source"
        - "translated-service"
        - "original-service"
        - "protected-scope"
        - "action"
        - "protection-or-site"
      filter:
        type: "string"
        description: "Textual search expression to filter objects by."
      layer:
        type: "string"
        description: "Layer or exception group name or uid."
      limit:
        type: "integer"
        description: "No more than that many results will be returned."
      offset:
        type: "integer"
        description: "Skip that many results before beginning to return them."
      order:
        type: "array"
        description: "Sorts results by the given field. By default the results are\
          \ sorted in the ascending order by name."
        items:
          $ref: "#/definitions/ApiQueryOrderRequest"
      show-membership:
        type: "boolean"
        description: "Indicates whether to calculate and show \"groups\" field for\
          \ every object in reply."
        default: true
      sub-field:
        type: "string"
        description: "Optional sub-field to the policy field.<br>For \"vpn\" field\
          \ in access layer: all-gw-to-gw, specific<br>For \"service\" field in access\
          \ layer: services, application-and-sites, categories, mobile-application<br>For\
          \ \"content\" field in access layer: file-types<br>For \"protection-or-site\"\
          \ field in exception: whitelist-files, ips-protections, anti-protection,\
          \ user-applicatoin, blades."
        enum:
        - "all-gw-to-gw"
        - "specific"
        - "file-types"
        - "ips-protections"
        - "anti-protection"
        - "user-applicatoin"
        - "whitelist-files"
        - "blades"
        - "services"
        - "application-and-sites"
        - "categories"
        - "mobile-application"
    example:
      filter: "filter"
      field: "source"
      offset: 6
      limit: 0
      show-membership: true
      dereference-group-members: true
      details-level: "standard"
      layer: "layer"
      order:
      - ASC: "name"
        DESC: "name"
      - ASC: "name"
        DESC: "name"
      sub-field: "all-gw-to-gw"
  TagReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "aquamarine"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      name: "name"
      read-only: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  TagRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      details-level: "standard"
      new-name: "new-name"
      tags:
        add: "add"
  TagRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      details-level: "standard"
      tags: "tags"
  TaskEntityReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      last-update-time:
        $ref: "#/definitions/ApiDateReply"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      progress-description:
        type: "string"
        description: "N/A"
      progress-percentage:
        type: "integer"
        description: "N/A"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      start-time:
        $ref: "#/definitions/ApiDateReply"
      status:
        type: "string"
        description: "Task status."
        enum:
        - "in progress"
        - "succeeded"
        - "succeeded with warnings"
        - "partially succeeded"
        - "failed"
      suppressed:
        type: "boolean"
        description: "N/A"
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      task-details:
        type: "array"
        description: "Task-specific details according to the requested task type."
        items:
          type: "object"
          properties: {}
      task-id:
        type: "string"
        description: "Asynchronous task unique identifier."
      task-name:
        type: "string"
        description: "N/A"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      last-update-time:
        iso-8601: "iso-8601"
        posix: 0
      comments: "comments"
      progress-percentage: 0
      start-time:
        iso-8601: "iso-8601"
        posix: 0
      color: "aquamarine"
      progress-description: "progress-description"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      task-details:
      - "{}"
      - "{}"
      task-name: "task-name"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      suppressed: true
      read-only: true
      task-id: "task-id"
      status: "in progress"
  TaskQueryReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      tasks:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to full."
        items:
          $ref: "#/definitions/TaskEntityReply"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
    example:
      total: 1
      from: 0
      to: 6
      tasks:
      - last-update-time:
          iso-8601: "iso-8601"
          posix: 0
        comments: "comments"
        progress-percentage: 0
        start-time:
          iso-8601: "iso-8601"
          posix: 0
        color: "aquamarine"
        progress-description: "progress-description"
        icon: "icon"
        meta-info:
          creator: "creator"
          last-modify-time:
            iso-8601: "iso-8601"
            posix: 0
          validation-state: "ok"
          creation-time:
            iso-8601: "iso-8601"
            posix: 0
          lock: "unlocked"
          last-modifier: "last-modifier"
        type: "type"
        tags:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        uid: "uid"
        task-details:
        - "{}"
        - "{}"
        task-name: "task-name"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        suppressed: true
        read-only: true
        task-id: "task-id"
        status: "in progress"
      - last-update-time:
          iso-8601: "iso-8601"
          posix: 0
        comments: "comments"
        progress-percentage: 0
        start-time:
          iso-8601: "iso-8601"
          posix: 0
        color: "aquamarine"
        progress-description: "progress-description"
        icon: "icon"
        meta-info:
          creator: "creator"
          last-modify-time:
            iso-8601: "iso-8601"
            posix: 0
          validation-state: "ok"
          creation-time:
            iso-8601: "iso-8601"
            posix: 0
          lock: "unlocked"
          last-modifier: "last-modifier"
        type: "type"
        tags:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        uid: "uid"
        task-details:
        - "{}"
        - "{}"
        task-name: "task-name"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        suppressed: true
        read-only: true
        task-id: "task-id"
        status: "in progress"
  TaskQueryRequest:
    type: "object"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      from-date:
        type: "string"
        description: "The date from which tracking tasks is to be performed, by the\
          \ task's last update date. ISO 8601. If timezone isn't specified in the\
          \ input, the Management server's timezone is used."
      initiator:
        type: "string"
        description: "Initiator's name. If name isn't specified, tasks from all initiators\
          \ will be shown."
      limit:
        type: "integer"
        description: "No more than that many results will be returned."
      offset:
        type: "integer"
        description: "Skip that many results before beginning to return them."
      order:
        type: "array"
        description: "Sorts results by the given field. By default the results are\
          \ sorted in the descending order by the task's last update date."
        items:
          $ref: "#/definitions/ApiQueryOrderRequest"
      status:
        type: "string"
        description: "Status."
        default: "all"
        enum:
        - "successful"
        - "failed"
        - "in-progress"
        - "all"
      to-date:
        type: "string"
        description: "The date until which tracking tasks is to be performed, by the\
          \ task's last update date. ISO 8601. If timezone isn't specified in the\
          \ input, the Management server's timezone is used."
    example:
      offset: 6
      to-date: "to-date"
      from-date: "from-date"
      initiator: "initiator"
      limit: 0
      details-level: "standard"
      order:
      - ASC: "name"
        DESC: "name"
      - ASC: "name"
        DESC: "name"
      status: "all"
  TaskReply:
    type: "object"
    properties:
      tasks:
        type: "array"
        description: "N/A"
        items:
          $ref: "#/definitions/TaskEntityReply"
    example:
      tasks:
      - last-update-time:
          iso-8601: "iso-8601"
          posix: 0
        comments: "comments"
        progress-percentage: 0
        start-time:
          iso-8601: "iso-8601"
          posix: 0
        color: "aquamarine"
        progress-description: "progress-description"
        icon: "icon"
        meta-info:
          creator: "creator"
          last-modify-time:
            iso-8601: "iso-8601"
            posix: 0
          validation-state: "ok"
          creation-time:
            iso-8601: "iso-8601"
            posix: 0
          lock: "unlocked"
          last-modifier: "last-modifier"
        type: "type"
        tags:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        uid: "uid"
        task-details:
        - "{}"
        - "{}"
        task-name: "task-name"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        suppressed: true
        read-only: true
        task-id: "task-id"
        status: "in progress"
      - last-update-time:
          iso-8601: "iso-8601"
          posix: 0
        comments: "comments"
        progress-percentage: 0
        start-time:
          iso-8601: "iso-8601"
          posix: 0
        color: "aquamarine"
        progress-description: "progress-description"
        icon: "icon"
        meta-info:
          creator: "creator"
          last-modify-time:
            iso-8601: "iso-8601"
            posix: 0
          validation-state: "ok"
          creation-time:
            iso-8601: "iso-8601"
            posix: 0
          lock: "unlocked"
          last-modifier: "last-modifier"
        type: "type"
        tags:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        uid: "uid"
        task-details:
        - "{}"
        - "{}"
        task-name: "task-name"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        suppressed: true
        read-only: true
        task-id: "task-id"
        status: "in progress"
  TaskRequest:
    type: "object"
    required:
    - "task-id"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      task-id:
        type: "string"
        description: "Unique identifier of one or more tasks."
    example:
      details-level: "standard"
      task-id: "task-id"
  TcpServiceReply:
    type: "object"
    properties:
      aggressive-aging:
        $ref: "#/definitions/AggressiveAgingReply"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      match-by-protocol-signature:
        type: "boolean"
        description: "A value of true enables matching by the selected protocol's\
          \ signature - The signature identifies the protocol as genuine."
      match-for-any:
        type: "boolean"
        description: "Indicates whether this service is used when 'Any' is set as\
          \ the rule's service and there are several service objects with the same\
          \ source port and protocol."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      override-default-settings:
        type: "boolean"
        description: "Indicates whether this service is a Data Domain service which\
          \ has been overridden."
      port:
        type: "string"
        description: "The number of the port used to provide this service."
      protocol:
        type: "string"
        description: "The protocol type associated with the service, and by implication,\
          \ the management server (if any) that enforces Content Security and Authentication\
          \ for the service."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      session-timeout:
        type: "integer"
        description: "Time (in seconds) before the session times out."
      source-port:
        type: "string"
        description: "Port number for the client side service. If specified, only\
          \ those Source port Numbers will be Accepted, Dropped, or Rejected during\
          \ packet inspection. Otherwise, the source port is not inspected."
      sync-connections-on-cluster:
        type: "boolean"
        description: "Enables state-synchronized High Availability or Load Sharing\
          \ on a ClusterXL or OPSEC-certified cluster."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
      use-default-session-timeout:
        type: "boolean"
        description: "Use default virtual session timeout."
    example:
      session-timeout: 0
      source-port: "source-port"
      use-default-session-timeout: true
      comments: "comments"
      color: "aquamarine"
      match-for-any: true
      aggressive-aging:
        enable: true
        default-timeout: 0
        use-default-timeout: true
        timeout: 6
      keep-connections-open-after-policy-installation: true
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      sync-connections-on-cluster: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      protocol: "protocol"
      match-by-protocol-signature: true
      port: "port"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      override-default-settings: true
      read-only: true
  TcpServiceRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      aggressive-aging:
        $ref: "#/definitions/AggressiveAgingRequest"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      match-by-protocol-signature:
        type: "boolean"
        description: "A value of true enables matching by the selected protocol's\
          \ signature - the signature identifies the protocol as genuine. Select this\
          \ option to limit the port to the specified protocol. If the selected protocol\
          \ does not support matching by signature, this field cannot be set to true."
      match-for-any:
        type: "boolean"
        description: "Indicates whether this service is used when 'Any' is set as\
          \ the rule's service and there are several service objects with the same\
          \ source port and protocol."
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      override-default-settings:
        type: "boolean"
        description: "Indicates whether this service is a Data Domain service which\
          \ has been overridden."
      port:
        type: "string"
        description: "The number of the port used to provide this service. To specify\
          \ a port range, place a hyphen between the lowest and highest port numbers,\
          \ for example 44-55."
      protocol:
        type: "string"
        description: "Select the protocol type associated with the service, and by\
          \ implication, the management server (if any) that enforces Content Security\
          \ and Authentication for the service. Selecting a Protocol Type invokes\
          \ the specific protocol handlers for each protocol type, thus enabling higher\
          \ level of security by parsing the protocol, and higher level of connectivity\
          \ by tracking dynamic actions (such as opening of ports)."
      session-timeout:
        type: "integer"
        description: "Time (in seconds) before the session times out."
      source-port:
        type: "string"
        description: "Port number for the client side service. If specified, only\
          \ those Source port Numbers will be Accepted, Dropped, or Rejected during\
          \ packet inspection. Otherwise, the source port is not inspected."
      sync-connections-on-cluster:
        type: "boolean"
        description: "Enables state-synchronized High Availability or Load Sharing\
          \ on a ClusterXL or OPSEC-certified cluster."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
      use-default-session-timeout:
        type: "boolean"
        description: "Use default virtual session timeout."
    example:
      session-timeout: 0
      source-port: "source-port"
      use-default-session-timeout: true
      comments: "comments"
      color: "black"
      ignore-warnings: false
      match-for-any: true
      aggressive-aging:
        enable: true
        default-timeout: 0
        use-default-timeout: true
        timeout: 6
      keep-connections-open-after-policy-installation: true
      groups:
        add: "add"
      sync-connections-on-cluster: true
      new-name: "new-name"
      tags:
        add: "add"
      uid: "uid"
      protocol: "protocol"
      match-by-protocol-signature: true
      ignore-errors: false
      port: "port"
      name: "name"
      details-level: "standard"
      override-default-settings: true
  TcpServiceRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      aggressive-aging:
        $ref: "#/definitions/AggressiveAgingRequest"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      match-by-protocol-signature:
        type: "boolean"
        description: "A value of true enables matching by the selected protocol's\
          \ signature - the signature identifies the protocol as genuine. Select this\
          \ option to limit the port to the specified protocol. If the selected protocol\
          \ does not support matching by signature, this field cannot be set to true."
        default: false
      match-for-any:
        type: "boolean"
        description: "Indicates whether this service is used when 'Any' is set as\
          \ the rule's service and there are several service objects with the same\
          \ source port and protocol."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      override-default-settings:
        type: "boolean"
        description: "Indicates whether this service is a Data Domain service which\
          \ has been overridden."
      port:
        type: "string"
        description: "The number of the port used to provide this service. To specify\
          \ a port range, place a hyphen between the lowest and highest port numbers,\
          \ for example 44-55."
      protocol:
        type: "string"
        description: "Select the protocol type associated with the service, and by\
          \ implication, the management server (if any) that enforces Content Security\
          \ and Authentication for the service. Selecting a Protocol Type invokes\
          \ the specific protocol handlers for each protocol type, thus enabling higher\
          \ level of security by parsing the protocol, and higher level of connectivity\
          \ by tracking dynamic actions (such as opening of ports)."
      session-timeout:
        type: "integer"
        description: "Time (in seconds) before the session times out."
      set-if-exists:
        type: "boolean"
        description: "If another object with the same identifier already exists, it\
          \ will be updated. The command behaviour will be the same as if originally\
          \ a set command was called. Pay attention that original object's fields\
          \ will be overwritten by the fields provided in the request payload!"
        default: false
      source-port:
        type: "string"
        description: "Port number for the client side service. If specified, only\
          \ those Source port Numbers will be Accepted, Dropped, or Rejected during\
          \ packet inspection. Otherwise, the source port is not inspected."
      sync-connections-on-cluster:
        type: "boolean"
        description: "Enables state-synchronized High Availability or Load Sharing\
          \ on a ClusterXL or OPSEC-certified cluster."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
      use-default-session-timeout:
        type: "boolean"
        description: "Use default virtual session timeout."
    example:
      session-timeout: 0
      source-port: "source-port"
      set-if-exists: false
      use-default-session-timeout: true
      comments: "comments"
      color: "black"
      ignore-warnings: false
      match-for-any: true
      aggressive-aging:
        enable: true
        default-timeout: 0
        use-default-timeout: true
        timeout: 6
      keep-connections-open-after-policy-installation: true
      groups: "groups"
      sync-connections-on-cluster: true
      tags: "tags"
      protocol: "protocol"
      match-by-protocol-signature: false
      ignore-errors: false
      port: "port"
      name: "name"
      details-level: "standard"
      override-default-settings: true
  ThreatEmulationFileTypesUpdateReply:
    type: "object"
    properties:
      message:
        type: "string"
        description: "Operation status."
    example:
      message: "message"
  ThreatEmulationFileTypesUpdateRequest:
    type: "object"
    required:
    - "file-path"
    properties:
      file-path:
        type: "string"
        description: "File path for offline update of Threat Emulation file types,\
          \ the file path should be on the management machine."
      file-raw-data:
        type: "string"
        description: "The contents of a file containing the Threat Emulation file\
          \ types."
    example:
      file-raw-data: "file-raw-data"
      file-path: "file-path"
  ThreatExceptionGroupReply:
    type: "object"
    properties:
      applied-profile:
        type: "string"
        description: "N/A"
      apply-on:
        type: "string"
        description: "N/A"
        enum:
        - "all-threat-rules"
        - "all-threat-rules-with-specific-profile"
        - "manually-select-threat-rules"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "aquamarine"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      name: "name"
      apply-on: "all-threat-rules"
      applied-profile: "applied-profile"
      read-only: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  ThreatExceptionGroupRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      applied-profile:
        type: "string"
        description: "The threat profile to apply this group to in the case of apply-on\
          \ threat-rules-with-specific-profile."
      applied-threat-rules:
        $ref: "#/definitions/add"
      apply-on:
        type: "string"
        description: "An exception group can be set to apply on all threat rules,\
          \ all threat rules which have a specific profile, or those rules manually\
          \ chosen by the user."
        enum:
        - "all-threat-rules"
        - "all-threat-rules-with-specific-profile"
        - "manually-select-threat-rules"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "black"
      ignore-errors: false
      applied-threat-rules:
        add: "add"
      ignore-warnings: false
      name: "name"
      apply-on: "all-threat-rules"
      details-level: "standard"
      applied-profile: "applied-profile"
      new-name: "new-name"
      tags:
        add: "add"
  ThreatExceptionGroupRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      applied-profile:
        type: "string"
        description: "The threat profile to apply this group to in the case of apply-on\
          \ threat-rules-with-specific-profile."
      applied-threat-rules:
        $ref: "#/definitions/ManualAttachment"
      apply-on:
        type: "string"
        description: "An exception group can be set to apply on all threat rules,\
          \ all threat rules which have a specific profile, or those rules manually\
          \ chosen by the user."
        enum:
        - "all-threat-rules"
        - "all-threat-rules-with-specific-profile"
        - "manually-select-threat-rules"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      comments: "comments"
      color: "black"
      ignore-errors: false
      applied-threat-rules:
        uid: "uid"
        rule-number: "rule-number"
        name: "name"
        position: 0
        layer: "layer"
      ignore-warnings: false
      name: "name"
      apply-on: "all-threat-rules"
      details-level: "standard"
      applied-profile: "applied-profile"
      tags: "tags"
  ThreatExceptionIdentifierRequest:
    type: "object"
    required:
    - "exception-group-uid"
    - "layer"
    - "rule-uid"
    - "uid"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      exception-group-name:
        type: "string"
        description: "The name of the exception-group."
      exception-group-uid:
        type: "string"
        description: "The UID of the exception-group."
      exception-number:
        type: "integer"
        description: "The exception's number in the rulebase."
      layer:
        type: "string"
        description: "Layer that the rule belongs to identified by the name or UID."
      name:
        type: "string"
        description: "The name of the exception."
      rule-name:
        type: "string"
        description: "The name of the parent rule."
      rule-number:
        type: "integer"
        description: "The position in the rulebase of the parent rule."
      rule-uid:
        type: "string"
        description: "The UID of the parent rule."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      rule-uid: "rule-uid"
      uid: "uid"
      exception-number: 0
      exception-group-uid: "exception-group-uid"
      rule-number: 6
      exception-group-name: "exception-group-name"
      rule-name: "rule-name"
      name: "name"
      details-level: "standard"
      layer: "layer"
  ThreatExceptionReply:
    type: "object"
    properties:
      action:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      comments:
        type: "string"
        description: "Comments string."
      destination:
        type: "array"
        description: "Collection of Network objects identified by the name or UID.\
          \ How much details are returned depends on the details-level field of the\
          \ request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      destination-negate:
        type: "boolean"
        description: "True if negate is set for destination."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      enabled:
        type: "boolean"
        description: "Enable/Disable the rule."
      install-on:
        type: "array"
        description: "Which gateway, identified by the name or UID, to install the\
          \ policy. How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      owner:
        type: "string"
        description: "N/A"
      protected-scope:
        type: "array"
        description: "Collection of network objects defining Protection Scope identified\
          \ by the name or UID. How much details are returned depends on the details-level\
          \ field of the request. This table shows the level of detail shown when\
          \ details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      protected-scope-negate:
        type: "boolean"
        description: "True if negate is set for Protected Scope."
      protection-or-site:
        type: "array"
        description: "Protection or site. How much details are returned depends on\
          \ the details-level field of the request. This table shows the level of\
          \ detail shown when details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      service:
        type: "array"
        description: "Collection of network objects defining Service identified by\
          \ the name or UID. How much details are returned depends on the details-level\
          \ field of the request. This table shows the level of detail shown when\
          \ details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      service-negate:
        type: "boolean"
        description: "True if negate is set for Service."
      source:
        type: "array"
        description: "Collection of network objects defining Source identified by\
          \ the name or UID. How much details are returned depends on the details-level\
          \ field of the request. This table shows the level of detail shown when\
          \ details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      source-negate:
        type: "boolean"
        description: "True if negate is set for source."
      track:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      owner: "owner"
      protection-or-site:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      comments: "comments"
      destination-negate: true
      source-negate: true
      protected-scope-negate: true
      destination:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      service-negate: true
      source:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      type: "type"
      enabled: true
      uid: "uid"
      protected-scope:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      service:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      action:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      install-on:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      track:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  ThreatExceptionRequestEdit:
    type: "object"
    required:
    - "exception-group-uid"
    - "layer"
    - "name"
    - "rule-uid"
    - "uid"
    properties:
      action:
        type: "string"
        description: "Action-the enforced profile."
      comments:
        type: "string"
        description: "Comments string."
      destination:
        $ref: "#/definitions/add"
      destination-negate:
        type: "boolean"
        description: "True if negate is set for destination."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      enabled:
        type: "boolean"
        description: "Enable/Disable the rule."
      exception-group-name:
        type: "string"
        description: "The name of the exception-group."
      exception-group-uid:
        type: "string"
        description: "The UID of the exception-group."
      exception-number:
        type: "integer"
        description: "N/A"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      install-on:
        $ref: "#/definitions/add"
      layer:
        type: "string"
        description: "Layer that the rule belongs to identified by the name or UID."
      name:
        type: "string"
        description: "The name of the exception."
      new-name:
        type: "string"
        description: "New name of the object."
      new-position:
        type: "integer"
        description: "New position in the rulebase."
      protected-scope:
        $ref: "#/definitions/add"
      protected-scope-negate:
        type: "boolean"
        description: "True if negate is set for Protected Scope."
      protection-or-site:
        $ref: "#/definitions/add"
      rule-name:
        type: "string"
        description: "The name of the parent rule."
      rule-number:
        type: "integer"
        description: "The position in the rulebase of the parent rule."
      rule-uid:
        type: "string"
        description: "The UID of the parent rule."
      service:
        $ref: "#/definitions/add"
      service-negate:
        type: "boolean"
        description: "True if negate is set for Service."
      source:
        $ref: "#/definitions/add"
      source-negate:
        type: "boolean"
        description: "True if negate is set for source."
      track:
        type: "string"
        description: "Packet tracking."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      protection-or-site:
        add: "add"
      destination-negate: true
      protected-scope-negate: true
      destination:
        add: "add"
      source:
        add: "add"
      new-name: "new-name"
      enabled: true
      layer: "layer"
      rule-uid: "rule-uid"
      uid: "uid"
      exception-number: 0
      exception-group-uid: "exception-group-uid"
      rule-number: 1
      action: "action"
      details-level: "standard"
      track: "track"
      comments: "comments"
      source-negate: true
      ignore-warnings: false
      service-negate: true
      protected-scope:
        add: "add"
      ignore-errors: false
      exception-group-name: "exception-group-name"
      service:
        add: "add"
      rule-name: "rule-name"
      name: "name"
      install-on:
        add: "add"
      new-position: 6
  ThreatExceptionRequestNew:
    type: "object"
    required:
    - "exception-group-uid"
    - "layer"
    - "name"
    - "position"
    - "rule-uid"
    properties:
      action:
        type: "string"
        description: "Action-the enforced profile."
      comments:
        type: "string"
        description: "Comments string."
      destination:
        type: "string"
        description: "Collection of Network objects identified by the name or UID."
      destination-negate:
        type: "boolean"
        description: "True if negate is set for destination."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      enabled:
        type: "boolean"
        description: "Enable/Disable the rule."
      exception-group-name:
        type: "string"
        description: "The name of the exception-group."
      exception-group-uid:
        type: "string"
        description: "The UID of the exception-group."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      install-on:
        type: "string"
        description: "Which Gateways identified by the name or UID to install the\
          \ policy on."
      layer:
        type: "string"
        description: "Layer that the rule belongs to identified by the name or UID."
      name:
        type: "string"
        description: "The name of the exception."
      position:
        type: "integer"
        description: "Position in the rulebase."
      protected-scope:
        type: "string"
        description: "Collection of objects defining Protected Scope identified by\
          \ the name or UID."
      protected-scope-negate:
        type: "boolean"
        description: "True if negate is set for Protected Scope."
      protection-or-site:
        type: "string"
        description: "Name of the protection or site."
      rule-name:
        type: "string"
        description: "The name of the parent rule."
      rule-number:
        type: "integer"
        description: "The position in the rulebase of the parent rule."
      rule-uid:
        type: "string"
        description: "The UID of the parent rule."
      service:
        type: "string"
        description: "Collection of Network objects identified by the name or UID."
      service-negate:
        type: "boolean"
        description: "True if negate is set for Service."
      source:
        type: "string"
        description: "Collection of Network objects identified by the name or UID."
      source-negate:
        type: "boolean"
        description: "True if negate is set for source."
      track:
        type: "string"
        description: "Packet tracking."
    example:
      protection-or-site: "protection-or-site"
      destination-negate: true
      protected-scope-negate: true
      destination: "destination"
      source: "source"
      enabled: true
      layer: "layer"
      rule-uid: "rule-uid"
      exception-group-uid: "exception-group-uid"
      rule-number: 6
      action: "action"
      details-level: "standard"
      track: "track"
      comments: "comments"
      source-negate: true
      ignore-warnings: false
      service-negate: true
      protected-scope: "protected-scope"
      ignore-errors: false
      exception-group-name: "exception-group-name"
      service: "service"
      rule-name: "rule-name"
      name: "name"
      install-on: "install-on"
      position: 0
  ThreatLayerReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      ips-layer:
        type: "boolean"
        description: "N/A"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      parent-layer:
        type: "string"
        description: "N/A"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "aquamarine"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      name: "name"
      ips-layer: true
      parent-layer: "parent-layer"
      read-only: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  ThreatLayerRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      name: "name"
      details-level: "standard"
      new-name: "new-name"
      tags:
        add: "add"
  ThreatLayerRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      add-default-rule:
        type: "boolean"
        description: "Indicates whether to include a default rule in the new layer."
        default: true
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      add-default-rule: true
      name: "name"
      details-level: "standard"
      tags: "tags"
  ThreatLayersQueryReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      threat-layers:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
    example:
      threat-layers:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      total: 1
      from: 0
      to: 6
  ThreatRuleIdentifierRequest:
    type: "object"
    required:
    - "layer"
    - "uid"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      layer:
        type: "string"
        description: "Layer that the rule belongs to identified by the name or UID."
      name:
        type: "string"
        description: "Object name."
      rule-number:
        type: "integer"
        description: "Rule number."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      rule-number: 0
      name: "name"
      details-level: "standard"
      layer: "layer"
  ThreatRuleReply:
    type: "object"
    properties:
      action:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      comments:
        type: "string"
        description: "Comments string."
      destination:
        type: "array"
        description: "Collection of Network objects identified by the name or UID.\
          \ How much details are returned depends on the details-level field of the\
          \ request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      destination-negate:
        type: "boolean"
        description: "True if negate is set for destination."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      enabled:
        type: "boolean"
        description: "Enable/Disable the rule."
      exceptions:
        type: "object"
        description: "The rule's exceptions."
        properties: {}
      install-on:
        type: "array"
        description: "Which gateway, identified by the name or UID, to install the\
          \ policy. How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      layer:
        type: "string"
        description: "N/A"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      protected-scope:
        type: "array"
        description: "Collection of network objects defining Protection Scope identified\
          \ by the name or UID. How much details are returned depends on the details-level\
          \ field of the request. This table shows the level of detail shown when\
          \ details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      protected-scope-negate:
        type: "boolean"
        description: "True if negate is set for Protected Scope."
      service:
        type: "array"
        description: "Collection of network objects defining Service identified by\
          \ the name or UID. How much details are returned depends on the details-level\
          \ field of the request. This table shows the level of detail shown when\
          \ details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      service-negate:
        type: "boolean"
        description: "True if negate is set for Service."
      source:
        type: "array"
        description: "Collection of network objects defining Source identified by\
          \ the name or UID. How much details are returned depends on the details-level\
          \ field of the request. This table shows the level of detail shown when\
          \ details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      source-negate:
        type: "boolean"
        description: "True if negate is set for source."
      track:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
      track-settings:
        $ref: "#/definitions/ThreatRuleTrackSettingsReply"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      destination-negate: true
      source-negate: true
      protected-scope-negate: true
      destination:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      service-negate: true
      source:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      type: "type"
      enabled: true
      exceptions: "{}"
      layer: "layer"
      track-settings:
        packet-capture: true
      uid: "uid"
      protected-scope:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      service:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      action:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      install-on:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      track:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  ThreatRuleRequestEdit:
    type: "object"
    required:
    - "layer"
    - "uid"
    properties:
      action:
        type: "string"
        description: "Action-the enforced profile."
      comments:
        type: "string"
        description: "Comments string."
      destination:
        $ref: "#/definitions/add"
      destination-negate:
        type: "boolean"
        description: "True if negate is set for destination."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      enabled:
        type: "boolean"
        description: "Enable/Disable the rule."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      install-on:
        $ref: "#/definitions/add"
      layer:
        type: "string"
        description: "Layer that the rule belongs to identified by the name or UID."
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      new-position:
        type: "integer"
        description: "New position in the rulebase."
      protected-scope:
        $ref: "#/definitions/add"
      protected-scope-negate:
        type: "boolean"
        description: "True if negate is set for Protected Scope."
      rule-number:
        type: "integer"
        description: "Rule number."
      service:
        $ref: "#/definitions/add"
      service-negate:
        type: "boolean"
        description: "True if negate is set for Service."
      source:
        $ref: "#/definitions/add"
      source-negate:
        type: "boolean"
        description: "True if negate is set for source."
      track:
        type: "string"
        description: "Packet tracking."
      track-settings:
        $ref: "#/definitions/ThreatRuleTrackSettingsRequest"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      destination-negate: true
      source-negate: true
      ignore-warnings: false
      protected-scope-negate: true
      destination:
        add: "add"
      service-negate: true
      source:
        add: "add"
      new-name: "new-name"
      enabled: true
      layer: "layer"
      track-settings:
        packet-capture: true
      uid: "uid"
      protected-scope:
        add: "add"
      ignore-errors: false
      rule-number: 6
      service:
        add: "add"
      name: "name"
      action: "action"
      details-level: "standard"
      install-on:
        add: "add"
      new-position: 0
      track: "track"
  ThreatRuleRequestNew:
    type: "object"
    required:
    - "layer"
    - "position"
    properties:
      action:
        type: "string"
        description: "Action-the enforced profile."
      comments:
        type: "string"
        description: "Comments string."
      destination:
        type: "string"
        description: "Collection of Network objects identified by the name or UID."
      destination-negate:
        type: "boolean"
        description: "True if negate is set for destination."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      enabled:
        type: "boolean"
        description: "Enable/Disable the rule."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      install-on:
        type: "string"
        description: "Which Gateways identified by the name or UID to install the\
          \ policy on."
      layer:
        type: "string"
        description: "Layer that the rule belongs to identified by the name or UID."
      name:
        type: "string"
        description: "Rule name."
      position:
        type: "integer"
        description: "Position in the rulebase."
      protected-scope:
        type: "string"
        description: "Collection of objects defining Protected Scope identified by\
          \ the name or UID."
      protected-scope-negate:
        type: "boolean"
        description: "True if negate is set for Protected Scope."
      service:
        type: "string"
        description: "Collection of Network objects identified by the name or UID."
      service-negate:
        type: "boolean"
        description: "True if negate is set for Service."
      source:
        type: "string"
        description: "Collection of Network objects identified by the name or UID."
      source-negate:
        type: "boolean"
        description: "True if negate is set for source."
      track:
        type: "string"
        description: "Packet tracking."
      track-settings:
        $ref: "#/definitions/ThreatRuleTrackSettingsRequest"
    example:
      comments: "comments"
      destination-negate: true
      source-negate: true
      ignore-warnings: false
      protected-scope-negate: true
      destination: "destination"
      service-negate: true
      source: "source"
      enabled: true
      layer: "layer"
      track-settings:
        packet-capture: true
      protected-scope: "protected-scope"
      ignore-errors: false
      service: "service"
      name: "name"
      action: "action"
      details-level: "standard"
      install-on: "install-on"
      position: 0
      track: "track"
  ThreatRuleTrackSettingsReply:
    type: "object"
    properties:
      packet-capture:
        type: "boolean"
        description: "Packet capture."
    description: "Threat rule track settings."
    example:
      packet-capture: true
  ThreatRuleTrackSettingsRequest:
    type: "object"
    properties:
      packet-capture:
        type: "boolean"
        description: "Packet capture."
    description: "Threat rule track settings."
    example:
      packet-capture: true
  TimeGroupReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      members:
        type: "array"
        description: "Collection of Time Group objects identified by the name or UID.\
          \ How much details are returned depends on the details-level field of the\
          \ request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Time Group name. Cannot be more than 11 characters. Should be\
          \ unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "aquamarine"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      members:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      name: "name"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      read-only: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  TimeGroupRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      members:
        $ref: "#/definitions/add"
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the Time Group. Cannot be more than 11 characters.\
          \ Should be unique in the domain."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      uid: "uid"
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      members:
        add: "add"
      name: "name"
      groups:
        add: "add"
      details-level: "standard"
      new-name: "new-name"
      tags:
        add: "add"
  TimeGroupRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      members:
        type: "string"
        description: "Collection of Time Group objects identified by the name or UID."
      name:
        type: "string"
        description: "Time Group name. Cannot be more than 11 characters. Should be\
          \ unique in the domain."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      members: "members"
      name: "name"
      groups: "groups"
      details-level: "standard"
      tags: "tags"
  TimeObject:
    type: "object"
    properties:
      date:
        type: "string"
        description: "Date in format dd-MMM-yyyy."
      iso-8601:
        type: "string"
        description: "Date and time represented in international ISO 8601 format."
      posix:
        type: "integer"
        description: "Number of milliseconds that have elapsed since 00:00:00, 1 January\
          \ 1970."
      time:
        type: "string"
        description: "Time in format HH:mm."
    description: "Starting time. Note: Each gateway may interpret this time differently\
      \ according to its time zone."
    example:
      date: "date"
      iso-8601: "iso-8601"
      time: "time"
      posix: 0
  TimeObjectForRequest:
    type: "object"
    properties:
      date:
        type: "string"
        description: "Date in format dd-MMM-yyyy."
      iso-8601:
        type: "string"
        description: "Date and time represented in international ISO 8601 format.\
          \ Time zone information is ignored."
      posix:
        type: "integer"
        description: "Number of milliseconds that have elapsed since 00:00:00, 1 January\
          \ 1970."
      time:
        type: "string"
        description: "Time in format HH:mm."
    description: "Starting time. Note: Each gateway may interpret this time differently\
      \ according to its time zone."
    example:
      date: "date"
      iso-8601: "iso-8601"
      time: "time"
      posix: 0
  TimeReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      end:
        $ref: "#/definitions/TimeObject"
      end-never:
        type: "boolean"
        description: "End never."
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      hours-ranges:
        type: "array"
        description: "Hours recurrence. Note: Each gateway may interpret this time\
          \ differently according to its time zone."
        items:
          $ref: "#/definitions/HourRange"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Time object name. Cannot be more than 11 characters. Should\
          \ be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      recurrence:
        $ref: "#/definitions/DayRecurrence"
      start:
        $ref: "#/definitions/TimeObject"
      start-now:
        type: "boolean"
        description: "Start immediately."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      end-never: true
      comments: "comments"
      color: "aquamarine"
      hours-ranges:
      - index: 6
        from: "from"
        to: "to"
        enabled: true
      - index: 6
        from: "from"
        to: "to"
        enabled: true
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      start:
        date: "date"
        iso-8601: "iso-8601"
        time: "time"
        posix: 0
      start-now: true
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      recurrence:
        month: "month"
        weekdays:
        - "weekdays"
        - "weekdays"
        pattern: "pattern"
        days:
        - "days"
        - "days"
      uid: "uid"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      end:
        date: "date"
        iso-8601: "iso-8601"
        time: "time"
        posix: 0
      read-only: true
  TimeRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      end:
        $ref: "#/definitions/TimeObjectForRequest"
      end-never:
        type: "boolean"
        description: "End never."
      groups:
        $ref: "#/definitions/add"
      hours-ranges:
        type: "array"
        description: "Hours recurrence. Note: Each gateway may interpret this time\
          \ differently according to its time zone."
        items:
          $ref: "#/definitions/HourRange"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the Time object. Cannot be more than 11 characters.\
          \ Should be unique in the domain."
      recurrence:
        $ref: "#/definitions/DayRecurrence"
      start:
        $ref: "#/definitions/TimeObjectForRequest"
      start-now:
        type: "boolean"
        description: "Start immediately."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      end-never: true
      comments: "comments"
      color: "black"
      hours-ranges:
      - index: 6
        from: "from"
        to: "to"
        enabled: true
      - index: 6
        from: "from"
        to: "to"
        enabled: true
      ignore-warnings: false
      start:
        date: "date"
        iso-8601: "iso-8601"
        time: "time"
        posix: 0
      start-now: true
      groups:
        add: "add"
      new-name: "new-name"
      tags:
        add: "add"
      recurrence:
        month: "month"
        weekdays:
        - "weekdays"
        - "weekdays"
        pattern: "pattern"
        days:
        - "days"
        - "days"
      uid: "uid"
      ignore-errors: false
      name: "name"
      end:
        date: "date"
        iso-8601: "iso-8601"
        time: "time"
        posix: 0
      details-level: "standard"
  TimeRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      end:
        $ref: "#/definitions/TimeObjectForRequest"
      end-never:
        type: "boolean"
        description: "End never."
      groups:
        type: "string"
        description: "Collection of group identifiers."
      hours-ranges:
        type: "array"
        description: "Hours recurrence. Note: Each gateway may interpret this time\
          \ differently according to its time zone."
        items:
          $ref: "#/definitions/HourRange"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      name:
        type: "string"
        description: "Time object name. Cannot be more than 11 characters. Should\
          \ be unique in the domain."
      recurrence:
        $ref: "#/definitions/DayRecurrence"
      start:
        $ref: "#/definitions/TimeObjectForRequest"
      start-now:
        type: "boolean"
        description: "Start immediately."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      end-never: true
      comments: "comments"
      color: "black"
      hours-ranges:
      - index: 6
        from: "from"
        to: "to"
        enabled: true
      - index: 6
        from: "from"
        to: "to"
        enabled: true
      ignore-warnings: false
      start:
        date: "date"
        iso-8601: "iso-8601"
        time: "time"
        posix: 0
      start-now: true
      groups: "groups"
      tags: "tags"
      recurrence:
        month: "month"
        weekdays:
        - "weekdays"
        - "weekdays"
        pattern: "pattern"
        days:
        - "days"
        - "days"
      ignore-errors: false
      name: "name"
      end:
        date: "date"
        iso-8601: "iso-8601"
        time: "time"
        posix: 0
      details-level: "standard"
  TrackSettingsForRequest:
    type: "object"
    properties:
      accounting:
        type: "boolean"
        description: "Turns accounting for track on and off."
      alert:
        type: "string"
        description: "Type of alert for the track."
        enum:
        - "none"
        - "alert"
        - "snmp"
        - "mail"
        - "user alert 1"
        - "user alert 2"
        - "user alert 3"
      enable-firewall-session:
        type: "boolean"
        description: "Determine whether to generate session log to firewall only connections."
      per-connection:
        type: "boolean"
        description: "Determines whether to perform the log per connection."
      per-session:
        type: "boolean"
        description: "Determines whether to perform the log per session."
      type:
        type: "string"
        description: "\"Log\", \"Extended Log\", \"Detailed  Log\", \"None\"."
    description: "Track Settings."
    example:
      per-session: true
      per-connection: true
      alert: "none"
      enable-firewall-session: true
      accounting: true
      type: "type"
  TrustedClientReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      domains-assignment:
        type: "array"
        description: "Domains assignment. How much details are returned depends on\
          \ the details-level field of the request. This table shows the level of\
          \ detail shown when details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv4-address-first:
        type: "string"
        description: "First IPv4 address in the range."
      ipv4-address-last:
        type: "string"
        description: "Last IPv4 address in the range."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      ipv6-address-first:
        type: "string"
        description: "First IPv6 address in the range."
      ipv6-address-last:
        type: "string"
        description: "Last IPv6 address in the range."
      mask-length4:
        type: "integer"
        description: "IPv4 mask length."
      mask-length6:
        type: "integer"
        description: "IPv6 mask length."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      multi-domain-server-trusted-client:
        type: "boolean"
        description: "Let this trusted client connect to all Multi-Domain Servers\
          \ in the deployment."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      subnet-mask4:
        type: "string"
        description: "IPv4 mask."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Trusted client type."
        enum:
        - "any"
        - "domain"
        - "ipv4 address"
        - "ipv4 address range"
        - "ipv4 netmask"
        - "ipv6 address"
        - "ipv6 address range"
        - "ipv6 netmask"
        - "name"
        - "wild cards (ip only)"
      uid:
        type: "string"
        description: "Object unique identifier."
      wild-card:
        type: "string"
        description: "IP wild card (e.g. 192.0.2.*)."
    example:
      subnet-mask4: "subnet-mask4"
      comments: "comments"
      color: "aquamarine"
      ipv4-address-last: "ipv4-address-last"
      multi-domain-server-trusted-client: true
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      wild-card: "wild-card"
      type: "any"
      ipv6-address: "ipv6-address"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      ipv4-address: "ipv4-address"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      domains-assignment:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      ipv6-address-last: "ipv6-address-last"
      name: "name"
      ipv6-address-first: "ipv6-address-first"
      mask-length4: 0
      read-only: true
      ipv4-address-first: "ipv4-address-first"
      mask-length6: 6
  TrustedClientRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      domains-assignment:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      ip-address:
        type: "string"
        description: "IPv4 or IPv6 address. If both addresses are required use ipv4-address\
          \ and ipv6-address fields explicitly."
      ip-address-first:
        type: "string"
        description: "First IP address in the range. If both IPv4 and IPv6 address\
          \ ranges are required, use the ipv4-address-first and the ipv6-address-first\
          \ fields instead."
      ip-address-last:
        type: "string"
        description: "Last IP address in the range. If both IPv4 and IPv6 address\
          \ ranges are required, use the ipv4-address-first and the ipv6-address-first\
          \ fields instead."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv4-address-first:
        type: "string"
        description: "First IPv4 address in the range."
      ipv4-address-last:
        type: "string"
        description: "Last IPv4 address in the range."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      ipv6-address-first:
        type: "string"
        description: "First IPv6 address in the range."
      ipv6-address-last:
        type: "string"
        description: "Last IPv6 address in the range."
      mask-length:
        type: "integer"
        description: "IPv4 or IPv6 mask length. If both masks are required use mask-length4\
          \ and mask-length6 fields explicitly."
      mask-length4:
        type: "integer"
        description: "IPv4 mask length."
      mask-length6:
        type: "integer"
        description: "IPv6 mask length."
      multi-domain-server-trusted-client:
        type: "boolean"
        description: "Let this trusted client connect to all Multi-Domain Servers\
          \ in the deployment."
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
      type:
        type: "string"
        description: "Trusted client type."
        default: "ipv4 address"
        enum:
        - "any"
        - "domain"
        - "ipv4 address"
        - "ipv4 address range"
        - "ipv4 netmask"
        - "ipv6 address"
        - "ipv6 address range"
        - "ipv6 netmask"
        - "name"
        - "wild cards (ip only)"
      uid:
        type: "string"
        description: "Object unique identifier."
      wild-card:
        type: "string"
        description: "IP wild card (e.g. 192.0.2.*)."
    example:
      color: "black"
      ipv4-address-last: "ipv4-address-last"
      multi-domain-server-trusted-client: true
      new-name: "new-name"
      type: "ipv4 address"
      uid: "uid"
      ipv4-address: "ipv4-address"
      ipv6-address-last: "ipv6-address-last"
      ipv6-address-first: "ipv6-address-first"
      details-level: "standard"
      mask-length4: 6
      ipv4-address-first: "ipv4-address-first"
      mask-length6: 1
      comments: "comments"
      ignore-warnings: false
      wild-card: "wild-card"
      ipv6-address: "ipv6-address"
      tags:
        add: "add"
      mask-length: 0
      ip-address: "ip-address"
      ignore-errors: false
      domains-assignment:
        add: "add"
      name: "name"
      ip-address-first: "ip-address-first"
      ip-address-last: "ip-address-last"
  TrustedClientRequestNew:
    type: "object"
    required:
    - "ip-address"
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      domains-assignment:
        type: "string"
        description: "Domains to be added to this profile."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      ip-address:
        type: "string"
        description: "IPv4 or IPv6 address. If both addresses are required use ipv4-address\
          \ and ipv6-address fields explicitly."
      ip-address-first:
        type: "string"
        description: "First IP address in the range. If both IPv4 and IPv6 address\
          \ ranges are required, use the ipv4-address-first and the ipv6-address-first\
          \ fields instead."
      ip-address-last:
        type: "string"
        description: "Last IP address in the range. If both IPv4 and IPv6 address\
          \ ranges are required, use the ipv4-address-first and the ipv6-address-first\
          \ fields instead."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv4-address-first:
        type: "string"
        description: "First IPv4 address in the range."
      ipv4-address-last:
        type: "string"
        description: "Last IPv4 address in the range."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      ipv6-address-first:
        type: "string"
        description: "First IPv6 address in the range."
      ipv6-address-last:
        type: "string"
        description: "Last IPv6 address in the range."
      mask-length:
        type: "integer"
        description: "IPv4 or IPv6 mask length. If both masks are required use mask-length4\
          \ and mask-length6 fields explicitly."
      mask-length4:
        type: "integer"
        description: "IPv4 mask length."
      mask-length6:
        type: "integer"
        description: "IPv6 mask length."
      multi-domain-server-trusted-client:
        type: "boolean"
        description: "Let this trusted client connect to all Multi-Domain Servers\
          \ in the deployment."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
      type:
        type: "string"
        description: "Trusted client type."
        default: "ipv4 address"
        enum:
        - "any"
        - "domain"
        - "ipv4 address"
        - "ipv4 address range"
        - "ipv4 netmask"
        - "ipv6 address"
        - "ipv6 address range"
        - "ipv6 netmask"
        - "name"
        - "wild cards (ip only)"
      wild-card:
        type: "string"
        description: "IP wild card (e.g. 192.0.2.*)."
    example:
      comments: "comments"
      color: "black"
      ignore-warnings: false
      ipv4-address-last: "ipv4-address-last"
      multi-domain-server-trusted-client: true
      wild-card: "wild-card"
      type: "ipv4 address"
      ipv6-address: "ipv6-address"
      tags: "tags"
      mask-length: 0
      ip-address: "ip-address"
      ignore-errors: false
      ipv4-address: "ipv4-address"
      domains-assignment: "domains-assignment"
      ipv6-address-last: "ipv6-address-last"
      name: "name"
      ipv6-address-first: "ipv6-address-first"
      details-level: "standard"
      mask-length4: 6
      ip-address-first: "ip-address-first"
      ip-address-last: "ip-address-last"
      ipv4-address-first: "ipv4-address-first"
      mask-length6: 1
  UdpServiceReply:
    type: "object"
    properties:
      accept-replies:
        type: "boolean"
        description: "N/A"
      aggressive-aging:
        $ref: "#/definitions/AggressiveAgingReply"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      match-by-protocol-signature:
        type: "boolean"
        description: "A value of true enables matching by the selected protocol's\
          \ signature - The signature identifies the protocol as genuine."
      match-for-any:
        type: "boolean"
        description: "Indicates whether this service is used when 'Any' is set as\
          \ the rule's service and there are several service objects with the same\
          \ source port and protocol."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      override-default-settings:
        type: "boolean"
        description: "Indicates whether this service is a Data Domain service which\
          \ has been overridden."
      port:
        type: "string"
        description: "The number of the port used to provide this service."
      protocol:
        type: "string"
        description: "The protocol type associated with the service, and by implication,\
          \ the management server (if any) that enforces Content Security and Authentication\
          \ for the service."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      session-timeout:
        type: "integer"
        description: "Time (in seconds) before the session times out."
      source-port:
        type: "string"
        description: "Port number for the client side service. If specified, only\
          \ those Source port Numbers will be Accepted, Dropped, or Rejected during\
          \ packet inspection. Otherwise, the source port is not inspected."
      sync-connections-on-cluster:
        type: "boolean"
        description: "Enables state-synchronized High Availability or Load Sharing\
          \ on a ClusterXL or OPSEC-certified cluster."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
      use-default-session-timeout:
        type: "boolean"
        description: "Use default virtual session timeout."
    example:
      session-timeout: 0
      source-port: "source-port"
      use-default-session-timeout: true
      comments: "comments"
      color: "aquamarine"
      match-for-any: true
      aggressive-aging:
        enable: true
        default-timeout: 0
        use-default-timeout: true
        timeout: 6
      keep-connections-open-after-policy-installation: true
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      sync-connections-on-cluster: true
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      protocol: "protocol"
      match-by-protocol-signature: true
      accept-replies: true
      port: "port"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      override-default-settings: true
      read-only: true
  UdpServiceRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      accept-replies:
        type: "boolean"
        description: "N/A"
      aggressive-aging:
        $ref: "#/definitions/AggressiveAgingRequest"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      match-by-protocol-signature:
        type: "boolean"
        description: "A value of true enables matching by the selected protocol's\
          \ signature - the signature identifies the protocol as genuine. Select this\
          \ option to limit the port to the specified protocol. If the selected protocol\
          \ does not support matching by signature, this field cannot be set to true."
      match-for-any:
        type: "boolean"
        description: "Indicates whether this service is used when 'Any' is set as\
          \ the rule's service and there are several service objects with the same\
          \ source port and protocol."
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      override-default-settings:
        type: "boolean"
        description: "Indicates whether this service is a Data Domain service which\
          \ has been overridden."
      port:
        type: "string"
        description: "The number of the port used to provide this service. To specify\
          \ a port range, place a hyphen between the lowest and highest port numbers,\
          \ for example 44-55."
      protocol:
        type: "string"
        description: "Select the protocol type associated with the service, and by\
          \ implication, the management server (if any) that enforces Content Security\
          \ and Authentication for the service. Selecting a Protocol Type invokes\
          \ the specific protocol handlers for each protocol type, thus enabling higher\
          \ level of security by parsing the protocol, and higher level of connectivity\
          \ by tracking dynamic actions (such as opening of ports)."
      session-timeout:
        type: "integer"
        description: "Time (in seconds) before the session times out."
      source-port:
        type: "string"
        description: "Port number for the client side service. If specified, only\
          \ those Source port Numbers will be Accepted, Dropped, or Rejected during\
          \ packet inspection. Otherwise, the source port is not inspected."
      sync-connections-on-cluster:
        type: "boolean"
        description: "Enables state-synchronized High Availability or Load Sharing\
          \ on a ClusterXL or OPSEC-certified cluster."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
      use-default-session-timeout:
        type: "boolean"
        description: "Use default virtual session timeout."
    example:
      session-timeout: 0
      source-port: "source-port"
      use-default-session-timeout: true
      comments: "comments"
      color: "black"
      ignore-warnings: false
      match-for-any: true
      aggressive-aging:
        enable: true
        default-timeout: 0
        use-default-timeout: true
        timeout: 6
      keep-connections-open-after-policy-installation: true
      groups:
        add: "add"
      sync-connections-on-cluster: true
      new-name: "new-name"
      tags:
        add: "add"
      uid: "uid"
      protocol: "protocol"
      match-by-protocol-signature: true
      accept-replies: true
      ignore-errors: false
      port: "port"
      name: "name"
      details-level: "standard"
      override-default-settings: true
  UdpServiceRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      accept-replies:
        type: "boolean"
        description: "N/A"
      aggressive-aging:
        $ref: "#/definitions/AggressiveAgingRequest"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      keep-connections-open-after-policy-installation:
        type: "boolean"
        description: "Keep connections open after policy has been installed even if\
          \ they are not allowed under the new policy. This overrides the settings\
          \ in the Connection Persistence page. If you change this property, the change\
          \ will not affect open connections, but only future connections."
      match-by-protocol-signature:
        type: "boolean"
        description: "A value of true enables matching by the selected protocol's\
          \ signature - the signature identifies the protocol as genuine. Select this\
          \ option to limit the port to the specified protocol. If the selected protocol\
          \ does not support matching by signature, this field cannot be set to true."
        default: false
      match-for-any:
        type: "boolean"
        description: "Indicates whether this service is used when 'Any' is set as\
          \ the rule's service and there are several service objects with the same\
          \ source port and protocol."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      override-default-settings:
        type: "boolean"
        description: "Indicates whether this service is a Data Domain service which\
          \ has been overridden."
      port:
        type: "string"
        description: "The number of the port used to provide this service. To specify\
          \ a port range, place a hyphen between the lowest and highest port numbers,\
          \ for example 44-55."
      protocol:
        type: "string"
        description: "Select the protocol type associated with the service, and by\
          \ implication, the management server (if any) that enforces Content Security\
          \ and Authentication for the service. Selecting a Protocol Type invokes\
          \ the specific protocol handlers for each protocol type, thus enabling higher\
          \ level of security by parsing the protocol, and higher level of connectivity\
          \ by tracking dynamic actions (such as opening of ports)."
      session-timeout:
        type: "integer"
        description: "Time (in seconds) before the session times out."
      set-if-exists:
        type: "boolean"
        description: "If another object with the same identifier already exists, it\
          \ will be updated. The command behaviour will be the same as if originally\
          \ a set command was called. Pay attention that original object's fields\
          \ will be overwritten by the fields provided in the request payload!"
        default: false
      source-port:
        type: "string"
        description: "Port number for the client side service. If specified, only\
          \ those Source port Numbers will be Accepted, Dropped, or Rejected during\
          \ packet inspection. Otherwise, the source port is not inspected."
      sync-connections-on-cluster:
        type: "boolean"
        description: "Enables state-synchronized High Availability or Load Sharing\
          \ on a ClusterXL or OPSEC-certified cluster."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
      use-default-session-timeout:
        type: "boolean"
        description: "Use default virtual session timeout."
    example:
      session-timeout: 0
      source-port: "source-port"
      set-if-exists: false
      use-default-session-timeout: true
      comments: "comments"
      color: "black"
      ignore-warnings: false
      match-for-any: true
      aggressive-aging:
        enable: true
        default-timeout: 0
        use-default-timeout: true
        timeout: 6
      keep-connections-open-after-policy-installation: true
      groups: "groups"
      sync-connections-on-cluster: true
      tags: "tags"
      protocol: "protocol"
      match-by-protocol-signature: false
      accept-replies: true
      ignore-errors: false
      port: "port"
      name: "name"
      details-level: "standard"
      override-default-settings: true
  UpdatableObjectAdditionalProperties:
    type: "object"
    properties:
      description:
        type: "string"
        description: "Description of retrieved Updatable Object."
      info-text:
        type: "string"
        description: "Information about the Updatable Object IP ranges source."
      info-url:
        type: "string"
        description: "URL of the Updatable Object IP ranges source."
      uri:
        type: "string"
        description: "URI of the Updatable Object under the Updatable Objects Repository."
    description: "Additional properties on the object."
    example:
      info-text: "info-text"
      description: "description"
      info-url: "info-url"
      uri: "uri"
  UpdatableObjectReply:
    type: "object"
    properties:
      additional-properties:
        $ref: "#/definitions/UpdatableObjectAdditionalProperties"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      name-in-updatable-objects-repository:
        type: "string"
        description: "Object name in the Updatable Objects Repository."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
      uid-in-updatable-objects-repository:
        type: "string"
        description: "Unique identifier of the object in the Updatable Objects Repository."
      updatable-object-meta-info:
        $ref: "#/definitions/RemoteUpdatableObjectMetaData"
    example:
      name-in-updatable-objects-repository: "name-in-updatable-objects-repository"
      comments: "comments"
      color: "aquamarine"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      uid-in-updatable-objects-repository: "uid-in-updatable-objects-repository"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      updatable-object-meta-info:
        updated-on-updatable-objects-repository:
          iso-8601: "iso-8601"
          posix: 0
      name: "name"
      additional-properties:
        info-text: "info-text"
        description: "description"
        info-url: "info-url"
        uri: "uri"
      read-only: true
  UpdatableObjectRequestNew:
    type: "object"
    required:
    - "uri"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      tags:
        type: "object"
        description: "Collection of tag identifiers."
        properties: {}
      uid-in-updatable-objects-repository:
        type: "string"
        description: "Unique identifier of the updatable object in the Updatable Objects\
          \ Repository."
      uri:
        type: "string"
        description: "URI of the updatable object in the Updatable Objects Repository."
    example:
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      uid-in-updatable-objects-repository: "uid-in-updatable-objects-repository"
      details-level: "standard"
      uri: "uri"
      tags: "{}"
  UpdatableObjectsRepositoryContentObjectFilter:
    type: "object"
    properties:
      parent-uid-in-updatable-objects-repository:
        type: "string"
        description: "Return results under the specified Updatable Object."
      text:
        type: "string"
        description: "Return results containing the specified text value."
      uri:
        type: "string"
        description: "Return results under the specified uri value."
    description: "Return results matching the specified filter."
    example:
      parent-uid-in-updatable-objects-repository: "parent-uid-in-updatable-objects-repository"
      text: "text"
      uri: "uri"
  UpdatableObjectsRepositoryContentObjectReply:
    type: "object"
    properties:
      additional-properties:
        $ref: "#/definitions/UpdatableObjectAdditionalProperties"
      name-in-updatable-objects-repository:
        type: "string"
        description: "Object name in the Updatable Objects Repository."
      uid-in-updatable-objects-repository:
        type: "string"
        description: "Unique identifier of the object in the Updatable Objects Repository."
      updatable-object:
        $ref: "#/definitions/ApiObjectStandardIdentifier"
    example:
      name-in-updatable-objects-repository: "name-in-updatable-objects-repository"
      uid-in-updatable-objects-repository: "uid-in-updatable-objects-repository"
      updatable-object:
        uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      additional-properties:
        info-text: "info-text"
        description: "description"
        info-url: "info-url"
        uri: "uri"
  UpdatableObjectsRepositoryContentReply:
    type: "object"
    properties:
      from:
        type: "integer"
        description: "From which element number the query was done."
      objects:
        type: "array"
        description: "Remote view of the retrieved Updatable Objects."
        items:
          $ref: "#/definitions/UpdatableObjectsRepositoryContentObjectReply"
      to:
        type: "integer"
        description: "To which element number the query was done."
      total:
        type: "integer"
        description: "Total number of elements returned by the query."
    example:
      total: 1
      objects:
      - name-in-updatable-objects-repository: "name-in-updatable-objects-repository"
        uid-in-updatable-objects-repository: "uid-in-updatable-objects-repository"
        updatable-object:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        additional-properties:
          info-text: "info-text"
          description: "description"
          info-url: "info-url"
          uri: "uri"
      - name-in-updatable-objects-repository: "name-in-updatable-objects-repository"
        uid-in-updatable-objects-repository: "uid-in-updatable-objects-repository"
        updatable-object:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        additional-properties:
          info-text: "info-text"
          description: "description"
          info-url: "info-url"
          uri: "uri"
      from: 0
      to: 6
  UpdatableObjectsRepositoryContentRequest:
    type: "object"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      filter:
        $ref: "#/definitions/UpdatableObjectsRepositoryContentObjectFilter"
      limit:
        type: "integer"
        description: "No more than that many results will be returned."
      offset:
        type: "integer"
        description: "Skip that many results before beginning to return them."
      order:
        type: "array"
        description: "Sorts results by the given field. By default the results are\
          \ sorted in the ascending order by name."
        items:
          $ref: "#/definitions/ApiQueryOrderRequest"
      uid-in-updatable-objects-repository:
        type: "string"
        description: "The object's unique identifier in the Updatable Objects repository."
    example:
      filter:
        parent-uid-in-updatable-objects-repository: "parent-uid-in-updatable-objects-repository"
        text: "text"
        uri: "uri"
      offset: 6
      uid-in-updatable-objects-repository: "uid-in-updatable-objects-repository"
      limit: 0
      details-level: "standard"
      order:
      - ASC: "name"
        DESC: "name"
      - ASC: "name"
        DESC: "name"
  UserCheckReply:
    type: "object"
    properties:
      confirm:
        type: "string"
        description: "N/A"
        enum:
        - "per rule"
        - "per category"
        - "per application/site"
        - "per data type"
      custom-frequency:
        $ref: "#/definitions/CustomFrequencySettings"
      frequency:
        type: "string"
        description: "N/A"
        enum:
        - "once a day"
        - "once a week"
        - "once a month"
        - "custom frequency..."
      interaction:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
    description: "User check settings."
    example:
      confirm: "per rule"
      custom-frequency:
        unit: "hours"
        every: 6
      interaction:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      frequency: "once a day"
  UserCheckRequest:
    type: "object"
    properties:
      confirm:
        type: "string"
        description: "N/A"
        enum:
        - "per rule"
        - "per category"
        - "per application/site"
        - "per data type"
      custom-frequency:
        $ref: "#/definitions/CustomFrequencySettings"
      frequency:
        type: "string"
        description: "N/A"
        enum:
        - "once a day"
        - "once a week"
        - "once a month"
        - "custom frequency..."
      interaction:
        type: "string"
        description: "N/A"
    description: "User check settings."
    example:
      confirm: "per rule"
      custom-frequency:
        unit: "hours"
        every: 6
      interaction: "interaction"
      frequency: "once a day"
  ValidationIncidentReply:
    type: "object"
    properties:
      current-session:
        type: "boolean"
        description: "Validation related to the current session."
      message:
        type: "string"
        description: "Validation message."
    example:
      message: "message"
      current-session: true
  ValidationsReply:
    type: "object"
    properties:
      blocking-errors:
        type: "array"
        description: "Blocking validation errors."
        items:
          $ref: "#/definitions/ValidationIncidentReply"
      blocking-errors-total:
        type: "integer"
        description: "Total number of blocking error validations."
      errors:
        type: "array"
        description: "Validation errors."
        items:
          $ref: "#/definitions/ValidationIncidentReply"
      errors-total:
        type: "integer"
        description: "Total number of error validations."
      warnings:
        type: "array"
        description: "Validation warnings."
        items:
          $ref: "#/definitions/ValidationIncidentReply"
      warnings-total:
        type: "integer"
        description: "Total number of warning validations."
    example:
      warnings-total: 1
      errors-total: 6
      blocking-errors:
      - message: "message"
        current-session: true
      - message: "message"
        current-session: true
      warnings:
      - message: "message"
        current-session: true
      - message: "message"
        current-session: true
      blocking-errors-total: 0
      errors:
      - message: "message"
        current-session: true
      - message: "message"
        current-session: true
  VerifyPolicyReply:
    type: "object"
    properties:
      task-id:
        type: "string"
        description: "Verify task UID. Use show-task command to check the progress\
          \ of the task."
    example:
      task-id: "task-id"
  VerifyPolicyRequest:
    type: "object"
    required:
    - "policy-package"
    properties:
      policy-package:
        type: "string"
        description: "Policy package identified by the name or UID."
    example:
      policy-package: "policy-package"
  VersionInternalReply:
    type: "object"
    properties:
      branch:
        type: "string"
        description: "N/A"
      generation-date:
        type: "string"
        description: "N/A"
      os-build:
        type: "string"
        description: "N/A"
      os-edition:
        type: "string"
        description: "N/A"
      os-kernel-version:
        type: "string"
        description: "N/A"
      product-version:
        type: "string"
        description: "N/A"
    example:
      os-build: "os-build"
      generation-date: "generation-date"
      product-version: "product-version"
      os-kernel-version: "os-kernel-version"
      os-edition: "os-edition"
      branch: "branch"
  VersionInternalRequest:
    type: "object"
  VersionReply:
    type: "object"
    properties:
      os-build:
        type: "string"
        description: "N/A"
      os-edition:
        type: "string"
        description: "N/A"
      os-kernel-version:
        type: "string"
        description: "N/A"
      product-version:
        type: "string"
        description: "N/A"
    example:
      os-build: "os-build"
      product-version: "product-version"
      os-kernel-version: "os-kernel-version"
      os-edition: "os-edition"
  VersionRequest:
    type: "object"
  VpnMeshedCommunityReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      encryption-method:
        type: "string"
        description: "The encryption method to be used."
        enum:
        - "prefer ikev2 but support ikev1"
        - "ikev2 only"
        - "ikev1 for ipv4 and ikev2 for ipv6 only"
      encryption-suite:
        type: "string"
        description: "The encryption suite to be used."
        enum:
        - "suite-b-gcm-256"
        - "custom"
        - "vpn b"
        - "vpn a"
        - "suite-b-gcm-128"
      gateways:
        type: "array"
        description: "Collection of Gateway objects identified by the name or UID.\
          \ How much details are returned depends on the details-level field of the\
          \ request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      ike-phase-1:
        $ref: "#/definitions/IkeP1Reply"
      ike-phase-2:
        $ref: "#/definitions/IkeP2Reply"
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      shared-secrets:
        type: "array"
        description: "Shared secrets for external gateways."
        items:
          $ref: "#/definitions/SharedSecretReply"
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
      use-shared-secret:
        type: "boolean"
        description: "Indicates whether the shared secret should be used for all external\
          \ gateways."
    example:
      shared-secrets:
      - external-gateway:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
      - external-gateway:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
      gateways:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      comments: "comments"
      color: "aquamarine"
      ike-phase-2:
        encryption-algorithm: "cast"
        data-integrity: "aes-xcbc"
      ike-phase-1:
        encryption-algorithm: "cast"
        diffie-hellman-group: "group-1"
        data-integrity: "aes-xcbc"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      encryption-method: "prefer ikev2 but support ikev1"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      use-shared-secret: true
      uid: "uid"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      encryption-suite: "suite-b-gcm-256"
      read-only: true
  VpnMeshedCommunityRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      encryption-method:
        type: "string"
        description: "The encryption method to be used."
        enum:
        - "prefer ikev2 but support ikev1"
        - "ikev2 only"
        - "ikev1 for ipv4 and ikev2 for ipv6 only"
      encryption-suite:
        type: "string"
        description: "The encryption suite to be used."
        enum:
        - "suite-b-gcm-256"
        - "custom"
        - "vpn b"
        - "vpn a"
        - "suite-b-gcm-128"
      gateways:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      ike-phase-1:
        $ref: "#/definitions/IkeP1Request"
      ike-phase-2:
        $ref: "#/definitions/IkeP2Request"
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      shared-secrets:
        $ref: "#/definitions/add"
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
      use-shared-secret:
        type: "boolean"
        description: "Indicates whether the shared secret should be used for all external\
          \ gateways."
    example:
      shared-secrets:
        add: "add"
      gateways:
        add: "add"
      comments: "comments"
      color: "black"
      ike-phase-2:
        encryption-algorithm: "cast"
        data-integrity: "aes-xcbc"
      ignore-warnings: false
      ike-phase-1:
        encryption-algorithm: "cast"
        diffie-hellman-group: "group-1"
        data-integrity: "aes-xcbc"
      encryption-method: "prefer ikev2 but support ikev1"
      new-name: "new-name"
      tags:
        add: "add"
      use-shared-secret: true
      uid: "uid"
      ignore-errors: false
      name: "name"
      details-level: "standard"
      encryption-suite: "suite-b-gcm-256"
  VpnMeshedCommunityRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      encryption-method:
        type: "string"
        description: "The encryption method to be used."
        enum:
        - "prefer ikev2 but support ikev1"
        - "ikev2 only"
        - "ikev1 for ipv4 and ikev2 for ipv6 only"
      encryption-suite:
        type: "string"
        description: "The encryption suite to be used."
        enum:
        - "suite-b-gcm-256"
        - "custom"
        - "vpn b"
        - "vpn a"
        - "suite-b-gcm-128"
      gateways:
        type: "string"
        description: "Collection of Gateway objects identified by the name or UID."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      ike-phase-1:
        $ref: "#/definitions/IkeP1Request"
      ike-phase-2:
        $ref: "#/definitions/IkeP2Request"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      shared-secrets:
        $ref: "#/definitions/SharedSecretRequest"
      tags:
        type: "string"
        description: "Collection of tag identifiers."
      use-shared-secret:
        type: "boolean"
        description: "Indicates whether the shared secret should be used for all external\
          \ gateways."
        default: false
    example:
      shared-secrets:
        shared-secret: "shared-secret"
        external-gateway: "external-gateway"
      gateways: "gateways"
      comments: "comments"
      color: "black"
      ike-phase-2:
        encryption-algorithm: "cast"
        data-integrity: "aes-xcbc"
      ignore-warnings: false
      ike-phase-1:
        encryption-algorithm: "cast"
        diffie-hellman-group: "group-1"
        data-integrity: "aes-xcbc"
      encryption-method: "prefer ikev2 but support ikev1"
      tags: "tags"
      use-shared-secret: false
      ignore-errors: false
      name: "name"
      details-level: "standard"
      encryption-suite: "suite-b-gcm-256"
  VpnSettingsReply:
    type: "object"
    properties:
      maximum-concurrent-ike-negotiations:
        type: "integer"
        description: "N/A"
      maximum-concurrent-tunnels:
        type: "integer"
        description: "N/A"
    description: "Gateway VPN settings."
    example:
      maximum-concurrent-tunnels: 7
      maximum-concurrent-ike-negotiations: 6
  VpnSettingsRequest:
    type: "object"
    properties:
      maximum-concurrent-ike-negotiations:
        type: "integer"
        description: "N/A"
      maximum-concurrent-tunnels:
        type: "integer"
        description: "N/A"
    description: "Gateway VPN settings."
    example:
      maximum-concurrent-tunnels: 1
      maximum-concurrent-ike-negotiations: 1
  VpnStarCommunityReply:
    type: "object"
    properties:
      center-gateways:
        type: "array"
        description: "Collection of Gateway objects representing center gateways identified\
          \ by the name or UID. How much details are returned depends on the details-level\
          \ field of the request. This table shows the level of detail shown when\
          \ details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      encryption-method:
        type: "string"
        description: "The encryption method to be used."
        enum:
        - "prefer ikev2 but support ikev1"
        - "ikev2 only"
        - "ikev1 for ipv4 and ikev2 for ipv6 only"
      encryption-suite:
        type: "string"
        description: "The encryption suite to be used."
        enum:
        - "suite-b-gcm-256"
        - "custom"
        - "vpn b"
        - "vpn a"
        - "suite-b-gcm-128"
      icon:
        type: "string"
        description: "Object icon."
      ike-phase-1:
        $ref: "#/definitions/IkeP1Reply"
      ike-phase-2:
        $ref: "#/definitions/IkeP2Reply"
      mesh-center-gateways:
        type: "boolean"
        description: "Indicates whether the meshed community is in center."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      satellite-gateways:
        type: "array"
        description: "Collection of Gateway objects representing satellite gateways\
          \ identified by the name or UID. How much details are returned depends on\
          \ the details-level field of the request. This table shows the level of\
          \ detail shown when details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      shared-secrets:
        type: "array"
        description: "Shared secrets for external gateways."
        items:
          $ref: "#/definitions/SharedSecretReply"
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
      use-shared-secret:
        type: "boolean"
        description: "Indicates whether the shared secret should be used for all external\
          \ gateways."
    example:
      shared-secrets:
      - external-gateway:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
      - external-gateway:
          uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
      comments: "comments"
      color: "aquamarine"
      ike-phase-2:
        encryption-algorithm: "cast"
        data-integrity: "aes-xcbc"
      ike-phase-1:
        encryption-algorithm: "cast"
        diffie-hellman-group: "group-1"
        data-integrity: "aes-xcbc"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      encryption-method: "prefer ikev2 but support ikev1"
      center-gateways:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      type: "type"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      use-shared-secret: true
      uid: "uid"
      satellite-gateways:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      encryption-suite: "suite-b-gcm-256"
      read-only: true
      mesh-center-gateways: true
  VpnStarCommunityRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      center-gateways:
        $ref: "#/definitions/add"
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      encryption-method:
        type: "string"
        description: "The encryption method to be used."
        enum:
        - "prefer ikev2 but support ikev1"
        - "ikev2 only"
        - "ikev1 for ipv4 and ikev2 for ipv6 only"
      encryption-suite:
        type: "string"
        description: "The encryption suite to be used."
        enum:
        - "suite-b-gcm-256"
        - "custom"
        - "vpn b"
        - "vpn a"
        - "suite-b-gcm-128"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      ike-phase-1:
        $ref: "#/definitions/IkeP1Request"
      ike-phase-2:
        $ref: "#/definitions/IkeP2Request"
      mesh-center-gateways:
        type: "boolean"
        description: "Indicates whether the meshed community is in center."
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      satellite-gateways:
        $ref: "#/definitions/add"
      shared-secrets:
        $ref: "#/definitions/add"
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
      use-shared-secret:
        type: "boolean"
        description: "Indicates whether the shared secret should be used for all external\
          \ gateways."
    example:
      shared-secrets:
        add: "add"
      comments: "comments"
      color: "black"
      ike-phase-2:
        encryption-algorithm: "cast"
        data-integrity: "aes-xcbc"
      ignore-warnings: false
      ike-phase-1:
        encryption-algorithm: "cast"
        diffie-hellman-group: "group-1"
        data-integrity: "aes-xcbc"
      encryption-method: "prefer ikev2 but support ikev1"
      center-gateways:
        add: "add"
      new-name: "new-name"
      tags:
        add: "add"
      use-shared-secret: true
      uid: "uid"
      ignore-errors: false
      satellite-gateways:
        add: "add"
      name: "name"
      details-level: "standard"
      encryption-suite: "suite-b-gcm-256"
      mesh-center-gateways: true
  VpnStarCommunityRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      center-gateways:
        type: "string"
        description: "Collection of Gateway objects representing center gateways identified\
          \ by the name or UID."
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      encryption-method:
        type: "string"
        description: "The encryption method to be used."
        enum:
        - "prefer ikev2 but support ikev1"
        - "ikev2 only"
        - "ikev1 for ipv4 and ikev2 for ipv6 only"
      encryption-suite:
        type: "string"
        description: "The encryption suite to be used."
        enum:
        - "suite-b-gcm-256"
        - "custom"
        - "vpn b"
        - "vpn a"
        - "suite-b-gcm-128"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      ike-phase-1:
        $ref: "#/definitions/IkeP1Request"
      ike-phase-2:
        $ref: "#/definitions/IkeP2Request"
      mesh-center-gateways:
        type: "boolean"
        description: "Indicates whether the meshed community is in center."
        default: false
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      satellite-gateways:
        type: "string"
        description: "Collection of Gateway objects representing satellite gateways\
          \ identified by the name or UID."
      shared-secrets:
        $ref: "#/definitions/SharedSecretRequest"
      tags:
        type: "string"
        description: "Collection of tag identifiers."
      use-shared-secret:
        type: "boolean"
        description: "Indicates whether the shared secret should be used for all external\
          \ gateways."
        default: false
    example:
      shared-secrets:
        shared-secret: "shared-secret"
        external-gateway: "external-gateway"
      comments: "comments"
      color: "black"
      ike-phase-2:
        encryption-algorithm: "cast"
        data-integrity: "aes-xcbc"
      ignore-warnings: false
      ike-phase-1:
        encryption-algorithm: "cast"
        diffie-hellman-group: "group-1"
        data-integrity: "aes-xcbc"
      encryption-method: "prefer ikev2 but support ikev1"
      center-gateways: "center-gateways"
      tags: "tags"
      use-shared-secret: false
      ignore-errors: false
      satellite-gateways: "satellite-gateways"
      name: "name"
      details-level: "standard"
      encryption-suite: "suite-b-gcm-256"
      mesh-center-gateways: false
  WebApiExportReply:
    type: "object"
    properties:
      task-id:
        type: "string"
        description: "Asynchronous task unique identifier."
    example:
      task-id: "task-id"
  WebApiExportRequest:
    type: "object"
    properties:
      exclude-classes:
        type: "array"
        description: "N/A"
        items:
          type: "string"
      exclude-topics:
        type: "array"
        description: "N/A"
        items:
          type: "string"
      export-files-by-class:
        type: "boolean"
        description: "N/A"
      include-classes:
        type: "array"
        description: "N/A"
        items:
          type: "string"
      include-topics:
        type: "array"
        description: "N/A"
        items:
          type: "string"
      query-limit:
        type: "integer"
        description: "N/A"
    example:
      exclude-topics:
      - "exclude-topics"
      - "exclude-topics"
      exclude-classes:
      - "exclude-classes"
      - "exclude-classes"
      export-files-by-class: true
      include-classes:
      - "include-classes"
      - "include-classes"
      include-topics:
      - "include-topics"
      - "include-topics"
      query-limit: 0
  WebApiLoginReply:
    type: "object"
    properties:
      api-server-version:
        type: "string"
        description: "API Server version."
      disk-space-message:
        type: "string"
        description: "Information about the available disk space on the management\
          \ server."
      last-login-was-at:
        $ref: "#/definitions/ApiDateReply"
      login-message:
        $ref: "#/definitions/LoginMessageReply"
      read-only:
        type: "boolean"
        description: "True if this session is read only."
      session-timeout:
        type: "integer"
        description: "Session expiration timeout in seconds."
      sid:
        type: "string"
        description: "Session unique identifier. Enter this session unique identifier\
          \ in the 'X-chkp-sid' header of each request."
      standby:
        type: "boolean"
        description: "True if this management server is in the standby mode."
      uid:
        type: "string"
        description: "Session object unique identifier. This identifier may be used\
          \ in the discard API to discard changes that were made in this session,\
          \ when administrator is working from another session, or in the 'switch-session'\
          \ API."
      url:
        type: "string"
        description: "URL that was used to reach the API server."
    example:
      session-timeout: 0
      uid: "uid"
      api-server-version: "api-server-version"
      disk-space-message: "disk-space-message"
      last-login-was-at:
        iso-8601: "iso-8601"
        posix: 0
      standby: true
      login-message:
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        header: "header"
        warning: true
        show-message: true
        message: "message"
        type: "type"
      read-only: true
      url: "url"
      sid: "sid"
  WebApiLoginRequest:
    type: "object"
    required:
    - "password"
    - "user"
    properties:
      continue-last-session:
        type: "boolean"
        description: "When 'continue-last-session' is set to 'True', the new session\
          \ would continue where the last session was stopped. This option is available\
          \ when the administrator has only one session that can be continued. If\
          \ there is more than one session, see 'switch-session' API."
        default: false
      domain:
        type: "string"
        description: "Use domain to login to specific domain. Domain can be identified\
          \ by name or UID."
      enter-last-published-session:
        type: "boolean"
        description: "Login to the last published session. Such login is done with\
          \ the Read Only permissions."
        default: false
      password:
        type: "string"
        description: "Administrator password."
      read-only:
        type: "boolean"
        description: "Login with Read Only permissions. This parameter is not considered\
          \ in case continue-last-session is true."
        default: false
      session-comments:
        type: "string"
        description: "Session comments."
      session-description:
        type: "string"
        description: "Session description."
      session-name:
        type: "string"
        description: "Session unique name."
      session-timeout:
        type: "integer"
        description: "Session expiration timeout in seconds. Default 600 seconds."
      user:
        type: "string"
        description: "Administrator user name."
    example:
      enter-last-published-session: false
      session-timeout: 0
      password: "password"
      session-comments: "session-comments"
      domain: "domain"
      session-description: "session-description"
      session-name: "session-name"
      continue-last-session: false
      read-only: false
      user: "user"
  WebApiLogoutReply:
    type: "object"
    properties:
      message:
        type: "string"
        description: "Operation status."
    example:
      message: "message"
  WebApiLogoutRequest:
    type: "object"
  WebApiResultLinkReply:
    type: "object"
    properties:
      task-id:
        type: "string"
        description: "Asynchronous task unique identifier."
    example:
      task-id: "task-id"
  WebApiResultLinkRequest:
    type: "object"
    properties:
      task-id:
        type: "string"
        description: "N/A"
    example:
      task-id: "task-id"
  WebApiServerStatusReply:
    type: "object"
    properties:
      api-more-info:
        type: "string"
        description: "N/A"
      api-overall-status:
        type: "boolean"
        description: "N/A"
      api-pid:
        type: "string"
        description: "N/A"
      api-state:
        type: "string"
        description: "N/A"
      api-status:
        type: "string"
        description: "N/A"
      cpm-more-info:
        type: "string"
        description: "N/A"
      cpm-pid:
        type: "string"
        description: "N/A"
      cpm-state:
        type: "string"
        description: "N/A"
      fwm-more-info:
        type: "string"
        description: "N/A"
      fwm-pid:
        type: "string"
        description: "N/A"
      fwm-state:
        type: "string"
        description: "N/A"
      task-id:
        type: "string"
        description: "Asynchronous task unique identifier."
    example:
      api-pid: "api-pid"
      cpm-state: "cpm-state"
      api-status: "api-status"
      cpm-pid: "cpm-pid"
      cpm-more-info: "cpm-more-info"
      api-more-info: "api-more-info"
      api-overall-status: true
      fwm-more-info: "fwm-more-info"
      fwm-pid: "fwm-pid"
      api-state: "api-state"
      fwm-state: "fwm-state"
      task-id: "task-id"
  WebApiServerStatusRequest:
    type: "object"
  WebServerReply:
    type: "object"
    properties:
      additional-ports:
        type: "array"
        description: "Server additional ports."
        items:
          type: "string"
      application-engines:
        type: "array"
        description: "Application engines of this web server."
        items:
          type: "string"
      listen-standard-port:
        type: "boolean"
        description: "Whether server listens to standard port."
      operating-system:
        type: "string"
        description: "Operating System."
        enum:
        - "sparc linux"
        - "windows"
        - "other"
        - "x86 linux"
        - "sparc solaris"
      protected-by:
        type: "string"
        description: "Network object which protects this server identified by the\
          \ name or UID."
      standard-port-number:
        type: "integer"
        description: "Server standard port number."
    description: "Web Server configuration."
    example:
      operating-system: "sparc linux"
      application-engines:
      - "application-engines"
      - "application-engines"
      listen-standard-port: true
      standard-port-number: 0
      additional-ports:
      - "additional-ports"
      - "additional-ports"
      protected-by: "protected-by"
  WebServerRequestEdit:
    type: "object"
    properties:
      additional-ports:
        $ref: "#/definitions/add"
      application-engines:
        $ref: "#/definitions/add"
      listen-standard-port:
        type: "boolean"
        description: "Whether server listens to standard port."
      operating-system:
        type: "string"
        description: "Operating System."
        enum:
        - "sparc linux"
        - "windows"
        - "other"
        - "x86 linux"
        - "sparc solaris"
      protected-by:
        type: "string"
        description: "Network object which protects this server identified by the\
          \ name or UID."
    description: "Web Server configuration."
    example:
      operating-system: "sparc linux"
      application-engines:
        add: "add"
      listen-standard-port: true
      additional-ports:
        add: "add"
      protected-by: "protected-by"
  WebServerRequestNew:
    type: "object"
    properties:
      additional-ports:
        type: "string"
        description: "Server additional ports."
      application-engines:
        type: "string"
        description: "Application engines of this web server."
      listen-standard-port:
        type: "boolean"
        description: "Whether server listens to standard port."
      operating-system:
        type: "string"
        description: "Operating System."
        enum:
        - "sparc linux"
        - "windows"
        - "other"
        - "x86 linux"
        - "sparc solaris"
      protected-by:
        type: "string"
        description: "Network object which protects this server identified by the\
          \ name or UID."
    description: "Web Server configuration."
    example:
      operating-system: "sparc linux"
      application-engines: "application-engines"
      listen-standard-port: true
      additional-ports: "additional-ports"
      protected-by: "protected-by"
  WhereUsedObjectReply:
    type: "object"
    properties:
      used-directly:
        $ref: "#/definitions/WhereUsedReportReply"
      used-indirectly:
        $ref: "#/definitions/WhereUsedReportReply"
    example:
      used-directly:
        total: 0
        access-control-rules:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        objects:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        nat-rules:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        threat-prevention-rules:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
      used-indirectly:
        total: 0
        access-control-rules:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        objects:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        nat-rules:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        threat-prevention-rules:
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
        - uid: "uid"
          domain:
            uid: "uid"
            domain-type: "mds"
            name: "name"
          name: "name"
          type: "type"
  WhereUsedObjectRequest:
    type: "object"
    required:
    - "uid"
    properties:
      dereference-group-members:
        type: "boolean"
        description: "Indicates whether to dereference \"members\" field by details\
          \ level for every object in reply."
        default: true
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      indirect:
        type: "boolean"
        description: "Search for indirect usage."
        default: false
      indirect-max-depth:
        type: "integer"
        description: "Maximum nesting level during indirect usage search."
      name:
        type: "string"
        description: "Object name."
      show-membership:
        type: "boolean"
        description: "Indicates whether to calculate and show \"groups\" field for\
          \ every object in reply."
        default: true
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      indirect-max-depth: 0
      uid: "uid"
      indirect: false
      name: "name"
      show-membership: true
      dereference-group-members: true
      details-level: "standard"
  WhereUsedReportReply:
    type: "object"
    properties:
      access-control-rules:
        type: "array"
        description: "Usage in Access Control Policy rules.\nHow much details are\
          \ returned depends on the details-level field of the request. This table\
          \ shows the level of detail shown when details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      nat-rules:
        type: "array"
        description: "Usage in Network Address Translation Policy rules.\nHow much\
          \ details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      objects:
        type: "array"
        description: "Usage in objects.\nHow much details are returned depends on\
          \ the details-level field of the request. This table shows the level of\
          \ detail shown when details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      threat-prevention-rules:
        type: "array"
        description: "Usage in Threat Prevention Policy rules.\nHow much details are\
          \ returned depends on the details-level field of the request. This table\
          \ shows the level of detail shown when details-level is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      total:
        type: "integer"
        description: "Total usage number."
    description: "Indirect usage of the object."
    example:
      total: 0
      access-control-rules:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      objects:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      nat-rules:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      threat-prevention-rules:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
  WildcardReply:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      groups:
        type: "array"
        description: "How much details are returned depends on the details-level field\
          \ of the request. This table shows the level of detail shown when details-level\
          \ is set to standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      icon:
        type: "string"
        description: "Object icon."
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv4-mask-wildcard:
        type: "string"
        description: "IPv4 mask wildcard."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      ipv6-mask-wildcard:
        type: "string"
        description: "IPv6 mask wildcard."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "aquamarine"
      ipv4-mask-wildcard: "ipv4-mask-wildcard"
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      groups:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      type: "type"
      ipv6-address: "ipv6-address"
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      uid: "uid"
      ipv4-address: "ipv4-address"
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      name: "name"
      ipv6-mask-wildcard: "ipv6-mask-wildcard"
      read-only: true
  WildcardRequestEdit:
    type: "object"
    required:
    - "uid"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        $ref: "#/definitions/add"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv4-mask-wildcard:
        type: "string"
        description: "IPv4 mask wildcard."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      ipv6-mask-wildcard:
        type: "string"
        description: "IPv6 mask wildcard."
      name:
        type: "string"
        description: "Object name."
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
      uid:
        type: "string"
        description: "Object unique identifier."
    example:
      comments: "comments"
      color: "black"
      ignore-warnings: false
      ipv4-mask-wildcard: "ipv4-mask-wildcard"
      groups:
        add: "add"
      new-name: "new-name"
      ipv6-address: "ipv6-address"
      tags:
        add: "add"
      uid: "uid"
      ignore-errors: false
      ipv4-address: "ipv4-address"
      name: "name"
      ipv6-mask-wildcard: "ipv6-mask-wildcard"
      details-level: "standard"
  WildcardRequestNew:
    type: "object"
    required:
    - "name"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      groups:
        type: "string"
        description: "Collection of group identifiers."
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      ipv4-address:
        type: "string"
        description: "IPv4 address."
      ipv4-mask-wildcard:
        type: "string"
        description: "IPv4 mask wildcard."
      ipv6-address:
        type: "string"
        description: "IPv6 address."
      ipv6-mask-wildcard:
        type: "string"
        description: "IPv6 mask wildcard."
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      tags:
        type: "string"
        description: "Collection of tag identifiers."
    example:
      comments: "comments"
      color: "black"
      ignore-errors: false
      ipv4-address: "ipv4-address"
      ignore-warnings: false
      ipv4-mask-wildcard: "ipv4-mask-wildcard"
      name: "name"
      groups: "groups"
      ipv6-mask-wildcard: "ipv6-mask-wildcard"
      details-level: "standard"
      ipv6-address: "ipv6-address"
      tags: "tags"
  WorkSessionAssignRequest:
    type: "object"
    properties:
      administrator-name:
        type: "string"
        description: "Assignee administrator name. Specify it to assign a session\
          \ to another administrator."
        default: "current administrator name"
      disconnect-active-session:
        type: "boolean"
        description: "Allows assignment of an active session, currently executed by\
          \ another administrator."
        default: false
      uid:
        type: "string"
        description: "Session unique identifier. Specify it to assign a different\
          \ session than the one you currently use."
        default: "current session uid"
    example:
      uid: "current session uid"
      administrator-name: "current administrator name"
      disconnect-active-session: false
  WorkSessionObjectIdentifierRequest:
    type: "object"
    properties:
      uid:
        type: "string"
        description: "Session unique identifier."
    example:
      uid: "uid"
  WorkSessionPurgeRequest:
    type: "object"
    required:
    - "number-of-sessions-to-preserve"
    properties:
      number-of-sessions-to-preserve:
        type: "integer"
        description: "The number of newest sessions to preserve, by the sessions's\
          \ publish date."
      preserve-to-date:
        type: "string"
        description: "The date until which sessions are preserved, by the sessions's\
          \ publish date. ISO 8601. If timezone isn't specified in the input, the\
          \ Management server's timezone is used."
    example:
      number-of-sessions-to-preserve: 0
      preserve-to-date: "preserve-to-date"
  WorkSessionQueryRequest:
    type: "object"
    properties:
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      limit:
        type: "integer"
        description: "No more than that many results will be returned."
      offset:
        type: "integer"
        description: "Skip that many results before beginning to return them."
      order:
        type: "array"
        description: "Sorts results by the given field. By default the results are\
          \ sorted in the descending order by the session publish time."
        items:
          $ref: "#/definitions/ApiQueryOrderRequest"
      view-published-sessions:
        type: "boolean"
        description: "Show a list of published sessions."
        default: false
    example:
      offset: 6
      limit: 0
      details-level: "standard"
      view-published-sessions: false
      order:
      - ASC: "name"
        DESC: "name"
      - ASC: "name"
        DESC: "name"
  WorkSessionReply:
    type: "object"
    properties:
      application:
        type: "string"
        description: "The name of the application serving the web_api requests."
      changes:
        type: "integer"
        description: "Number of pending changes."
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
        - "none"
      comments:
        type: "string"
        description: "Comments string."
      connection-mode:
        type: "string"
        description: "N/A"
        enum:
        - "read write"
        - "read only"
        - "read write with global lock"
      description:
        type: "string"
        description: "Session description."
      domain:
        $ref: "#/definitions/ApiDomainIdentifier"
      email:
        type: "string"
        description: "Administrator email."
      expired-session:
        type: "boolean"
        description: "True if the session is expired."
      icon:
        type: "string"
        description: "Object icon."
      in-work:
        type: "boolean"
        description: "True if the session is in work state."
      ip-address:
        type: "string"
        description: "IP address from which the session was initiated."
      last-login-time:
        $ref: "#/definitions/ApiDateReply"
      last-logout-time:
        $ref: "#/definitions/ApiDateReply"
      locks:
        type: "integer"
        description: "Number of locked objects."
      meta-info:
        $ref: "#/definitions/MetaInfoForTopLevelReply"
      name:
        type: "string"
        description: "Object name. Should be unique in the domain."
      phone-number:
        type: "string"
        description: "Administrator phone number."
      publish-time:
        $ref: "#/definitions/ApiDateReply"
      read-only:
        type: "boolean"
        description: "Indicates whether the object is read-only."
      session-timeout:
        type: "integer"
        description: "Session expiration timeout in seconds."
      state:
        type: "string"
        description: "Session state."
        enum:
        - "open"
        - "published"
        - "discarded"
      tags:
        type: "array"
        description: "Collection of tag objects identified by the name or UID. How\
          \ much details are returned depends on the details-level field of the request.\
          \ This table shows the level of detail shown when details-level is set to\
          \ standard."
        items:
          $ref: "#/definitions/ApiObjectStandardIdentifier"
      type:
        type: "string"
        description: "Type of the object."
      uid:
        type: "string"
        description: "Object unique identifier."
      user-name:
        type: "string"
        description: "The name of the logged in user."
    example:
      phone-number: "phone-number"
      color: "aquamarine"
      expired-session: true
      changes: 0
      icon: "icon"
      meta-info:
        creator: "creator"
        last-modify-time:
          iso-8601: "iso-8601"
          posix: 0
        validation-state: "ok"
        creation-time:
          iso-8601: "iso-8601"
          posix: 0
        lock: "unlocked"
        last-modifier: "last-modifier"
      description: "description"
      type: "type"
      locks: 6
      uid: "uid"
      state: "open"
      read-only: true
      email: "email"
      publish-time:
        iso-8601: "iso-8601"
        posix: 0
      session-timeout: 1
      comments: "comments"
      connection-mode: "read write"
      in-work: true
      tags:
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      - uid: "uid"
        domain:
          uid: "uid"
          domain-type: "mds"
          name: "name"
        name: "name"
        type: "type"
      ip-address: "ip-address"
      application: "application"
      user-name: "user-name"
      last-login-time:
        iso-8601: "iso-8601"
        posix: 0
      domain:
        uid: "uid"
        domain-type: "mds"
        name: "name"
      last-logout-time:
        iso-8601: "iso-8601"
        posix: 0
      name: "name"
  WorkSessionRequestEdit:
    type: "object"
    properties:
      color:
        type: "string"
        description: "Color of the object. Should be one of existing colors."
        default: "black"
        enum:
        - "aquamarine"
        - "black"
        - "blue"
        - "crete blue"
        - "burlywood"
        - "cyan"
        - "dark green"
        - "khaki"
        - "orchid"
        - "dark orange"
        - "dark sea green"
        - "pink"
        - "turquoise"
        - "dark blue"
        - "firebrick"
        - "brown"
        - "forest green"
        - "gold"
        - "dark gold"
        - "gray"
        - "dark gray"
        - "light green"
        - "lemon chiffon"
        - "coral"
        - "sea green"
        - "sky blue"
        - "magenta"
        - "purple"
        - "slate blue"
        - "violet red"
        - "navy blue"
        - "olive"
        - "orange"
        - "red"
        - "sienna"
        - "yellow"
      comments:
        type: "string"
        description: "Comments string."
      description:
        type: "string"
        description: "Session description."
      details-level:
        type: "string"
        description: "The level of detail for some of the fields in the response can\
          \ vary from showing only the UID value of the object to a fully detailed\
          \ representation of the object."
        default: "standard"
        enum:
        - "uid"
        - "standard"
        - "full"
      ignore-errors:
        type: "boolean"
        description: "Apply changes ignoring errors. You won't be able to publish\
          \ such a changes. If ignore-warnings flag was omitted - warnings will also\
          \ be ignored."
        default: false
      ignore-warnings:
        type: "boolean"
        description: "Apply changes ignoring warnings."
        default: false
      new-name:
        type: "string"
        description: "New name of the object."
      tags:
        $ref: "#/definitions/add"
    example:
      comments: "comments"
      color: "black"
      ignore-errors: false
      ignore-warnings: false
      description: "description"
      details-level: "standard"
      new-name: "new-name"
      tags:
        add: "add"
  WorkSessionSwitchRequest:
    type: "object"
    required:
    - "uid"
    properties:
      uid:
        type: "string"
        description: "Session unique identifier. It should belong to the current administrator.\
          \ Switching to the sessions opened in SmartConsole is not supported."
    example:
      uid: "uid"
  WorkSessionTakeOverRequest:
    type: "object"
    required:
    - "uid"
    properties:
      disconnect-active-session:
        type: "boolean"
        description: "Allows taking over of an active session, currently executed\
          \ by another administrator."
        default: false
      uid:
        type: "string"
        description: "Session unique identifier."
    example:
      uid: "uid"
      disconnect-active-session: false
  add:
    type: "object"
    properties:
      add:
        type: "string"
        description: "Adds to collection of values"
    description: "Collection of group identifiers."
    example:
      add: "add"
  remove:
    type: "object"
    properties:
      remove:
        type: "string"
        description: "Removes from collection of values"
    description: "Overrides per profile for this protection<br> Note: Remove override\
      \ for Core protections removes only the action�s override. Remove override for\
      \ Threat Cloud protections removes the action, track and packet captures."
    example:
      remove: "remove"
