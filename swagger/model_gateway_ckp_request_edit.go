/*
 * Check Point Management API
 *
 * Generated by https://github.com/janschumann/checkpoint-go-sdk.
 *
 * API version: v1.5
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

type GatewayCkpRequestEdit struct {
	// Anti-Bot blade enabled.
	AntiBot bool `json:"anti-bot,omitempty" xml:"anti-bot"`
	// Anti-Virus blade enabled.
	AntiVirus bool `json:"anti-virus,omitempty" xml:"anti-virus"`
	// Application Control blade enabled.
	ApplicationControl bool `json:"application-control,omitempty" xml:"application-control"`
	// Color of the object. Should be one of existing colors.
	Color string `json:"color,omitempty" xml:"color"`
	// Comments string.
	Comments string `json:"comments,omitempty" xml:"comments"`
	// Content Awareness blade enabled.
	ContentAwareness bool `json:"content-awareness,omitempty" xml:"content-awareness"`
	// The level of detail for some of the fields in the response can vary from showing only the UID value of the object to a fully detailed representation of the object.
	DetailsLevel string `json:"details-level,omitempty" xml:"details-level"`
	// Firewall blade enabled.
	Firewall bool `json:"firewall,omitempty" xml:"firewall"`
	FirewallSettings *FirewallSettingsRequestEdit `json:"firewall-settings,omitempty" xml:"firewall-settings"`
	Groups *Add `json:"groups,omitempty" xml:"groups"`
	// Apply changes ignoring warnings.
	IgnoreWarnings bool `json:"ignore-warnings,omitempty" xml:"ignore-warnings"`
	// Network interfaces. When a gateway is updated with a new interfaces, the existing interfaces are removed.
	Interfaces []NetworkInterfaceRequestEdit `json:"interfaces,omitempty" xml:"interfaces"`
	// IPv4 or IPv6 address. If both addresses are required use ipv4-address and ipv6-address fields explicitly.
	IpAddress string `json:"ip-address,omitempty" xml:"ip-address"`
	// Intrusion Prevention System blade enabled.
	Ips bool `json:"ips,omitempty" xml:"ips"`
	// IPv4 address.
	Ipv4Address string `json:"ipv4-address,omitempty" xml:"ipv4-address"`
	// IPv6 address.
	Ipv6Address string `json:"ipv6-address,omitempty" xml:"ipv6-address"`
	LogsSettings *LogsSettingsRequest `json:"logs-settings,omitempty" xml:"logs-settings"`
	// Object name.
	Name string `json:"name,omitempty" xml:"name"`
	// New name of the object.
	NewName string `json:"new-name,omitempty" xml:"new-name"`
	// N/A
	OneTimePassword string `json:"one-time-password,omitempty" xml:"one-time-password"`
	// Gateway platform operating system.
	OsName string `json:"os-name,omitempty" xml:"os-name"`
	// Save logs locally on the gateway.
	SaveLogsLocally bool `json:"save-logs-locally,omitempty" xml:"save-logs-locally"`
	SendAlertsToServer *Add `json:"send-alerts-to-server,omitempty" xml:"send-alerts-to-server"`
	SendLogsToBackupServer *Add `json:"send-logs-to-backup-server,omitempty" xml:"send-logs-to-backup-server"`
	SendLogsToServer *Add `json:"send-logs-to-server,omitempty" xml:"send-logs-to-server"`
	Tags *Add `json:"tags,omitempty" xml:"tags"`
	// Threat Emulation blade enabled.
	ThreatEmulation bool `json:"threat-emulation,omitempty" xml:"threat-emulation"`
	// Threat Extraction blade enabled.
	ThreatExtraction bool `json:"threat-extraction,omitempty" xml:"threat-extraction"`
	// Object unique identifier.
	Uid string `json:"uid" xml:"uid"`
	// URL Filtering blade enabled.
	UrlFiltering bool `json:"url-filtering,omitempty" xml:"url-filtering"`
	// Gateway platform version.
	Version string `json:"version,omitempty" xml:"version"`
	// VPN blade enabled.
	Vpn bool `json:"vpn,omitempty" xml:"vpn"`
	VpnSettings *VpnSettingsRequest `json:"vpn-settings,omitempty" xml:"vpn-settings"`
}
